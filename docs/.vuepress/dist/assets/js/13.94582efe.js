(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{437:function(s,n,e){"use strict";e.r(n);var t=e(27),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"_02-javascript实现队列结构（queue）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_02-javascript实现队列结构（queue）"}},[s._v("#")]),s._v(" 02.JavaScript实现队列结构（Queue）")]),s._v(" "),e("h2",{attrs:{id:"一、队列简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、队列简介"}},[s._v("#")]),s._v(" 一、队列简介")]),s._v(" "),e("p",[s._v("队列是是一种受限的线性表，特点为"),e("strong",[s._v("先进先出")]),s._v("（"),e("strong",[s._v("FIFO")]),s._v("：first in first out）。")]),s._v(" "),e("ul",[e("li",[s._v("受限之处在于它只允许在表的"),e("strong",[s._v("前端")]),s._v("（front）进行删除操作；")]),s._v(" "),e("li",[s._v("在表的"),e("strong",[s._v("后端")]),s._v("（rear）进行插入操作；")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97/1.png",alt:"image-20200226171659886"}})]),s._v(" "),e("p",[s._v("相当于排队买票，先来的先买票，后来的后买票。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97/2.png",alt:"image-20200226171449228"}})]),s._v(" "),e("p",[e("strong",[s._v("队列的应用：")])]),s._v(" "),e("ul",[e("li",[s._v("打印队列：计算机打印多个文件的时候，需要排队打印；")]),s._v(" "),e("li",[s._v("线程队列：当开启多线程时，当新开启的线程所需的资源不足时就先放入线程队列，等待CPU处理；")])]),s._v(" "),e("p",[e("strong",[s._v("队列类的实现：")])]),s._v(" "),e("p",[s._v("队列的实现和栈一样，有两种方案：")]),s._v(" "),e("ul",[e("li",[s._v("基于数组实现；")]),s._v(" "),e("li",[s._v("基于链表实现；")])]),s._v(" "),e("p",[e("strong",[s._v("队列的常见操作：")])]),s._v(" "),e("ul",[e("li",[s._v("enqueue（element）：向队列尾部添加一个（或多个）新的项；")]),s._v(" "),e("li",[s._v("dequeue（）：移除队列的第一（即排在队列最前面的）项，并返回被移除的元素；")]),s._v(" "),e("li",[s._v("front（）：返回队列中的第一个元素——最先被添加，也将是最先被移除的元素。队列不做任何变动（不移除元素，只返回元素信息与Stack类的peek方法非常类似）；")]),s._v(" "),e("li",[s._v("isEmpty（）：如果队列中不包含任何元素，返回true，否则返回false；")]),s._v(" "),e("li",[s._v("size（）：返回队列包含的元素个数，与数组的length属性类似；")]),s._v(" "),e("li",[s._v("toString（）：将队列中的内容，转成字符串形式；")])]),s._v(" "),e("h2",{attrs:{id:"二、封装队列类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、封装队列类"}},[s._v("#")]),s._v(" 二、封装队列类")]),s._v(" "),e("h3",{attrs:{id:"_2-1-代码实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-代码实现"}},[s._v("#")]),s._v(" 2.1.代码实现")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    // 基于数组封装队列类\n    function Queue() {\n    // 属性\n      this.items = []\n      \n    // 方法\n    // 1.enqueue():将元素加入到队列中\n    Queue.prototype.enqueue = element => {\n      this.items.push(element)\n    }\n\n    // 2.dequeue():从队列中删除前端元素\n    Queue.prototype.dequeue = () => {\n      return this.items.shift()\n    }\n\n    // 3.front():查看前端的元素\n    Queue.prototype.front = () => {\n      return this.items[0]\n    }\n\n    // 4.isEmpty:查看队列是否为空\n    Queue.prototype.isEmpty = () => {\n      return this.items.length == 0;\n    }\n\n    // 5.size():查看队列中元素的个数\n    Queue.prototype.size = () => {\n      return this.items.length\n    }\n\n    // 6.toString():将队列中元素以字符串形式输出\n    Queue.prototype.toString = () => {\n      let resultString = ''\n        for (let i of this.items){\n          resultString += i + ' '\n        }\n        return resultString\n      }\n    }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br")])]),e("p",[e("strong",[s._v("测试代码：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" \t// 创建队列\n    let queue = new  Queue()\n\n    // 将元素加入到队列中\n    queue.enqueue('a')\n    queue.enqueue('b')\n    queue.enqueue('c')\n    queue.enqueue('d')\n    console.log(queue);\t\t\t\t\t\t\t\t\t\t\t\t//58\n\n    // 从队列中删除元素\n    queue.dequeue()\n    console.log(queue);\t\t\t\t\t\t\t\t\t\t\t\t//62\n    queue.dequeue()\n    console.log(queue);\t\t\t\t\t\t\t\t\t\t\t\t//64\n\n    //front\n    console.log(queue.front());\t\t\t\t\t\t\t\t \t\t//67\n    \n    // 验证其他方法\n    console.log(queue.isEmpty());\t\t\t\t\t\t\t\t \t//70\n    console.log(queue.size());\t\t\t\t\t\t\t\t \t\t//71\n    console.log(queue.toString());\t\t\t\t\t\t\t\t \t//72\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[e("strong",[s._v("测试结果：")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97/3.png",alt:"image-20200305211334015"}})]),s._v(" "),e("h3",{attrs:{id:"_2-2-队列的应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-队列的应用"}},[s._v("#")]),s._v(" 2.2.队列的应用")]),s._v(" "),e("p",[s._v("使用队列实现小游戏：击鼓传花，传入一组数据和设定的数字num，循环遍历数组内元素，遍历到的元素为指定数字num时将该元素删除，直至数组剩下一个元素。")]),s._v(" "),e("p",[e("strong",[s._v("代码实现：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    // 队列应用：面试题：击鼓传花\n    let passGame = (nameList, num) => {\n      //1.创建队列结构\n      let queue = new Queue()\n\n      //2.将所有人依次加入队列\n      // 这是ES6的for循环写法，i相当于nameList[i]\n      for(let i of nameList){\n        queue.enqueue(i)\n      }\n      \n\n      // 3.开始数数\n     while(queue.size() > 1){//队列中只剩1个人就停止数数\n      // 不是num的时候，重新加入队列末尾\n      // 是num的时候，将其从队列中删除\n      // 3.1.num数字之前的人重新放入队列的末尾(把队列前面删除的加到队列最后)\n      for(let i = 0; i< num-1; i++ ){\n        queue.enqueue(queue.dequeue())\n      }\n      // 3.2.num对应这个人，直接从队列中删除\n      /*\n        思路是这样的，由于队列没有像数组一样的下标值不能直接取到某一元素，所以采用，把num前面的num-1个元素先删除后添加到队列末尾，这样第num个元素就排到了队列的最前面，可以直接使用dequeue方法进行删除\n      */\n      queue.dequeue()\n     }\n\n      //4.获取剩下的那个人\n      console.log(queue.size());\t\t\t\t\t\t\t\t\t//104\n      let endName = queue.front()\n      console.log('最终剩下的人：' + endName);\t\t\t\t\t\t   //106\t\n      \n      return nameList.indexOf(endName);\n    }\n\n    //5.测试击鼓传花\n    let names = ['lily', 'lucy', 'Tom', 'Lilei', 'Tony']\n    console.log(passGame(names, 3));\t\t\t\t\t\t\t\t//113\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])]),e("p",[e("strong",[s._v("测试结果：")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97/4.png",alt:"image-20200305212021550"}})]),s._v(" "),e("h2",{attrs:{id:"三、优先队列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、优先队列"}},[s._v("#")]),s._v(" 三、优先队列")]),s._v(" "),e("p",[s._v("优先级队列主要考虑的问题为：")]),s._v(" "),e("ul",[e("li",[s._v("每个元素不再只是一个数据，还包含数据的优先级；")]),s._v(" "),e("li",[s._v("在添加数据过程中，根据优先级放入到正确位置；")])]),s._v(" "),e("h3",{attrs:{id:"_3-1-优先级队列的实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-优先级队列的实现"}},[s._v("#")]),s._v(" 3.1.优先级队列的实现")]),s._v(" "),e("p",[e("strong",[s._v("代码实现：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    // 封装优先级队列\n    function PriorityQueue() {\n\n      //内部类：在类里面再封装一个类;表示带优先级的数据\n      function QueueElement(element, priority) {\n        this.element = element;\n        this.priority = priority;\n      } \n\n      // 封装属性\n      this.items = []\n\n      // 1.实现按照优先级插入方法\n      PriorityQueue.prototype.enqueue = (element, priority) => {\n        // 1.1.创建QueueElement对象\n        let queueElement = new QueueElement(element, priority)\n\n        // 1.2.判断队列是否为空\n        if(this.items.length == 0){\n          this.items.push(queueElement)\n        }else{\n          // 定义一个变量记录是否成功添加了新元素\n          let added = false\n          for(let i of this.items){\n            // 让新插入的元素与原有元素进行优先级比较(priority越小，优先级越大)\n            if(queueElement.priority < i.priority){\n              this.items.splice(i, 0, queueElement)\n              added = true\n              // 新元素已经找到插入位置了可以使用break停止循环\n              break\n            }\n          }\n          // 新元素没有成功插入，就把它放在队列的最前面\n          if(!added){\n            this.items.push(queueElement)\n          }\n        }\n      }\n\n      // 2.dequeue():从队列中删除前端元素\n      PriorityQueue.prototype.dequeue = () => {\n        return this.items.shift()\n      }\n\n      // 3.front():查看前端的元素\n      PriorityQueue.prototype.front = () => {\n        return this.items[0]\n      }\n\n      // 4.isEmpty():查看队列是否为空\n      PriorityQueue.prototype.isEmpty = () => {\n        return this.items.length == 0;\n      }\n\n      // 5.size():查看队列中元素的个数\n      PriorityQueue.prototype.size = () => {\n        return this.items.length\n      }\n\n      // 6.toString():以字符串形式输出队列中的元素\n      PriorityQueue.prototype.toString = () => {\n        let resultString = ''\n          for (let i of this.items){\n            resultString += i.element + '-' + i.priority + ' '\n          }\n          return resultString\n        }\n    }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("p",[e("strong",[s._v("测试代码：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    // 测试代码\n    let pq = new PriorityQueue();\n    pq.enqueue('Tom',111);\n    pq.enqueue('Hellen',200);\n    pq.enqueue('Mary',30);\n    pq.enqueue('Gogo',27);\n    // 打印修改过后的优先队列对象\n    console.log(pq);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("测试结果：")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97/5.png",alt:"image-20200226223314535"}})]),s._v(" "),e("h3",{attrs:{id:"_3-2-注意点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-注意点"}},[s._v("#")]),s._v(" 3.2.注意点")]),s._v(" "),e("p",[e("strong",[s._v("关于数组方法splice用法")]),s._v("：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("splice（1，0，'Tom'）：表示在索引为1的元素前面插入元素’Tom‘（也可以理解为从索引为1的元素开始删除，删除0个元素，再在索引为1的元素前面添加元素'Tom'）；")])]),s._v(" "),e("li",[e("p",[s._v("splice（1，1，'Tom'）：表示从索引为1的元素开始删除（包括索引为1的元素），共删除1个元素，并添加元素'Tom'。即把索引为1的元素替换为元素'Tom'。")])])]),s._v(" "),e("p",[e("strong",[s._v("数组的push方法在数组、栈和队列中的形式：")])]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("数组")]),s._v("：在数组[0，1，2]中，pop(3)，结果为[0，1，2，3]；")]),s._v(" "),e("li",[e("strong",[s._v("栈")]),s._v("：执行pop(0)，pop(1)，pop(2)，pop(3)，从栈底到栈顶的元素分别为：0，1，2，3；如果看成数组，可写为[0，1，2，3]，但是索引为3的元素3其实是栈顶元素；所以说栈的push方法是向栈顶添加元素（但在数组的视角下为向数组尾部添加元素）；")]),s._v(" "),e("li",[e("strong",[s._v("队列")]),s._v("：enqueue方法可以由数组的push方法实现，与数组相同，相当于在数组尾部添加元素。")])]),s._v(" "),e("p",[s._v("可以这样想：栈结构是头朝下（索引值由下往上增大）的数组结构。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97/6.png",alt:"image-20200226231025462"}})]),s._v(" "),e("blockquote",[e("p",[s._v("参考资料:"),e("a",{attrs:{href:"https://www.bilibili.com/video/BV1x7411L7Q7?from=search&seid=3912456004602554239",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript数据结构与算法"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=a.exports}}]);