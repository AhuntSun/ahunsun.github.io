(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{355:function(s,t,n){"use strict";n.r(t);var a=n(33),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"_20-async-await使用同步方式写异步代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_20-async-await使用同步方式写异步代码"}},[s._v("#")]),s._v(" 20."),n("code",[s._v("async")]),s._v(" "),n("code",[s._v("await")]),s._v("使用同步方式写异步代码")]),s._v(" "),n("p",[s._v("在上篇文章中，我们介绍了怎么使用 "),n("code",[s._v("Promise")]),s._v(" 来实现回调操作，使用 "),n("code",[s._v("Promise")]),s._v(" 能很好地解决"),n("strong",[s._v("回调地狱")]),s._v("的问题，但是这种方式充满了 "),n("code",[s._v("Promise")]),s._v(" 的 "),n("code",[s._v("then()")]),s._v(" 方法，如果处理流程比较复杂的话，那么整段代码将充斥着 "),n("code",[s._v("then")]),s._v("，语义化不明显，代码不能很好地表示执行流程。")]),s._v(" "),n("p",[s._v("比如下面这样一个实际的使用场景：我先请求极客邦的内容，等返回信息之后，我再请求极客邦的另外一个资源。下面代码展示的是使用 "),n("code",[s._v("fetch")]),s._v(" 来实现这样的需求，"),n("code",[s._v("fetch")]),s._v(" 被定义在 "),n("code",[s._v("window")]),s._v(" 对象中，可以用它来发起对远程资源的请求，该方法返回的是一个 "),n("code",[s._v("Promise")]),s._v(" 对象，这和我们上篇文章中讲的 "),n("code",[s._v("XFetch")]),s._v(" 很像，只不过 "),n("code",[s._v("fetch")]),s._v(" 是浏览器原生支持的，并有没利用 "),n("code",[s._v("XMLHttpRequest")]),s._v(" 来封装。")]),s._v(" "),n("blockquote",[n("p",[s._v("因为每次都返回一个"),n("code",[s._v("Promise")]),s._v("对象，所以可以调用"),n("code",[s._v("Promise")]),s._v("对象中的"),n("code",[s._v("then")]),s._v("方法，进行链式调用。")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://www.geekbang.org'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("response")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://www.geekbang.org/test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("response")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("从这段 "),n("code",[s._v("Promise")]),s._v(" 代码可以看出来，使用 "),n("code",[s._v("promise.then")]),s._v(" 也是相当复杂，虽然整个请求流程已经线性化了，但是代码里面包含了大量的 "),n("code",[s._v("then")]),s._v(" 函数，使得代码依然不是太容易阅读。基于这个原因，"),n("code",[s._v("ES7")]),s._v(" 引入了 "),n("code",[s._v("async/await")]),s._v("，这是 "),n("code",[s._v("JavaScript")]),s._v(" "),n("strong",[s._v("异步编程")]),s._v("的一个"),n("strong",[s._v("重大改进")]),s._v("，提供了在"),n("strong",[s._v("不阻塞主线程")]),s._v("的情况下"),n("strong",[s._v("使用同步代码")]),s._v("实现"),n("strong",[s._v("异步访问资源")]),s._v("的能力，并且使得代码逻辑更加清晰。你可以参考下面这段代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" response1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://www.geekbang.org'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" response2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://www.geekbang.org/test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("通过上面代码，你会发现整个异步处理的逻辑都是使用"),n("strong",[s._v("同步代码")]),s._v("的方式来实现的，而且还支持 "),n("code",[s._v("try catch")]),s._v("来捕获异常，这就是完全在写"),n("strong",[s._v("同步代码")]),s._v("，所以是非常符合人的线性思维的。但是很多人都习惯了异步回调的编程思维，对于这种采用同步代码实现异步逻辑的方式，还需要一个转换的过程，因为这中间隐藏了一些容易让人迷惑的细节。")]),s._v(" "),n("p",[s._v("那么本篇文章我们继续深入，看看 "),n("code",[s._v("JavaScript")]),s._v(" 引擎是如何实现 "),n("code",[s._v("async/await")]),s._v(" 的。如果上来直接介绍 "),n("code",[s._v("async/await")]),s._v(" 的使用方式的话，那么你可能会有点懵，所以我们就从其最底层的技术点一步步往上讲解，从而带你彻底弄清楚 "),n("code",[s._v("async")]),s._v(" 和 "),n("code",[s._v("await")]),s._v(" 到底是怎么工作的。")]),s._v(" "),n("p",[s._v("本文我们首先介绍"),n("strong",[s._v("生成器")]),s._v("（"),n("code",[s._v("Generator")]),s._v("）是如何工作的，接着讲解 "),n("code",[s._v("Generator")]),s._v(" 的底层实现机制——"),n("strong",[s._v("协程")]),s._v("（"),n("code",[s._v("Coroutine")]),s._v("）；又因为 "),n("code",[s._v("async/await")]),s._v(" 使用了 "),n("code",[s._v("Generator")]),s._v(" 和 "),n("code",[s._v("Promise")]),s._v(" 两种技术，所以紧接着我们就通过 "),n("code",[s._v("Generator")]),s._v(" 和 "),n("code",[s._v("Promise")]),s._v("来分析 "),n("code",[s._v("async/await")]),s._v(" 到底是如何以同步的方式来编写异步代码的。")]),s._v(" "),n("h2",{attrs:{id:"生成器-vs-协程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成器-vs-协程"}},[s._v("#")]),s._v(" 生成器 VS 协程")]),s._v(" "),n("p",[s._v("我们先来看看什么是生成器函数？")]),s._v(" "),n("p",[n("strong",[s._v("生成器函数")]),s._v("是一个"),n("strong",[s._v("带星号函数")]),s._v("，而且是可以"),n("strong",[s._v("暂停执行")]),s._v("和"),n("strong",[s._v("恢复执行")]),s._v("的。我们可以看下面这段代码：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("genDemo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 开始执行第一段 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'generator 1'")]),s._v("\n \n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 开始执行第二段 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'generator 2'")]),s._v("\n \n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 开始执行第三段 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'generator 3'")]),s._v("\n \n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 执行结束 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'generator 4'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main 0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" gen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("genDemo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main 1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main 2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main 3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main 4'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("执行上面这段代码，观察输出结果，你会发现函数 "),n("code",[s._v("genDemo")]),s._v(" 并不是一次执行完的，全局代码和 "),n("code",[s._v("genDemo")]),s._v(" 函数交替执行。其实这就是"),n("strong",[s._v("生成器函数")]),s._v("的特性，可以"),n("strong",[s._v("暂停执行")]),s._v("，也可以"),n("strong",[s._v("恢复执行")]),s._v("。下面我们就来看看生成器函数的具体使用方式：")]),s._v(" "),n("ul",[n("li",[s._v("在生成器函数内部执行一段代码，如果遇到 "),n("code",[s._v("yield")]),s._v(" 关键字，那么"),n("code",[s._v("JavaScript")]),s._v(" 引擎将"),n("strong",[s._v("返回关键字后面的内容给外部，并暂停该函数的执行")]),s._v("。")]),s._v(" "),n("li",[n("strong",[s._v("外部函数")]),s._v("可以通过 "),n("code",[s._v("next")]),s._v(" 方法"),n("strong",[s._v("恢复函数")]),s._v("的执行")])]),s._v(" "),n("p",[s._v("关于函数的暂停和恢复，相信你一定很好奇这其中的原理，那么接下来我们就来简单介绍下 "),n("code",[s._v("JavaScript")]),s._v(" 引擎 "),n("code",[s._v("V8")]),s._v(" 是如何实现一个函数的暂停和恢复的，这也会有助于你理解后面要介绍的 "),n("code",[s._v("async/await")]),s._v("。")]),s._v(" "),n("p",[s._v("要搞懂函数为何能暂停和恢复，那你首先要了解"),n("strong",[s._v("协程")]),s._v("的概念。协程是一种比线程"),n("strong",[s._v("更加轻量级")]),s._v("的存在。你可以把协程看成是跑在线程上的任务，一个"),n("strong",[s._v("线程上")]),s._v("可以存在"),n("strong",[s._v("多个协程")]),s._v("，但是在线程上"),n("strong",[s._v("同时只能执行")]),s._v("一个协程，比如当前执行的是 "),n("code",[s._v("A")]),s._v(" 协程，要启动 "),n("code",[s._v("B")]),s._v(" 协程，那么 "),n("code",[s._v("A")]),s._v(" 协程就需要将"),n("strong",[s._v("主线程")]),s._v("的"),n("strong",[s._v("控制权")]),s._v("交给 "),n("code",[s._v("B")]),s._v(" 协程，这就体现在 "),n("code",[s._v("A")]),s._v("协程暂停执行，"),n("code",[s._v("B")]),s._v(" 协程恢复执行；同样，也可以从 "),n("code",[s._v("B")]),s._v(" 协程中启动 "),n("code",[s._v("A")]),s._v(" 协程。通常，如果从 "),n("code",[s._v("A")]),s._v(" 协程启动 "),n("code",[s._v("B")]),s._v(" 协程，我们就把 "),n("code",[s._v("A")]),s._v("协程称为 "),n("code",[s._v("B")]),s._v(" 协程的"),n("strong",[s._v("父协程")]),s._v("。")]),s._v(" "),n("p",[s._v("正如一个"),n("strong",[s._v("进程")]),s._v("可以拥有"),n("strong",[s._v("多个线程")]),s._v("一样，"),n("strong",[s._v("一个线程")]),s._v("也可以拥有"),n("strong",[s._v("多个协程")]),s._v("。最重要的是，"),n("strong",[s._v("协程")]),s._v("不是被操作系统内核所管理，而完全是"),n("strong",[s._v("由程序所控制")]),s._v("（也就是在用户态执行）。这样带来的好处就是性能得到了很大的提升，"),n("strong",[s._v("不会")]),s._v("像线程切换那样"),n("strong",[s._v("消耗资源")]),s._v("。")]),s._v(" "),n("p",[s._v("为了让你更好地理解协程是怎么执行的，我结合上面那段代码的执行过程，画出了下面的“协程执行流程图”，你可以对照着代码来分析：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part4/ls20/1.png",alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("从图中可以看出来协程的四点规则：")])]),s._v(" "),n("ul",[n("li",[s._v("通过调用生成器函数 "),n("code",[s._v("genDemo")])]),s._v(" "),n("li",[s._v("来创建一个协程 "),n("code",[s._v("gen")]),s._v("，创建之后，"),n("code",[s._v("gen")]),s._v(" 协程并没有立即执行。")]),s._v(" "),n("li",[s._v("要让 "),n("code",[s._v("gen")]),s._v(" 协程执行，需要通过调用 "),n("code",[s._v("gen.next")]),s._v("。")]),s._v(" "),n("li",[s._v("当协程正在执行的时候，可以通过 "),n("code",[s._v("yield")]),s._v(" 关键字来暂停 "),n("code",[s._v("gen")]),s._v(" 协程的执行，并返回主要信息给父协程。")]),s._v(" "),n("li",[s._v("如果协程在执行期间，遇到了 "),n("code",[s._v("return")]),s._v(" 关键字，那么 "),n("code",[s._v("JavaScript")]),s._v(" 引擎会结束当前协程，并将 "),n("code",[s._v("return")]),s._v(" 后面的内容返回给父协程。")])]),s._v(" "),n("p",[s._v("不过，对于上面这段代码，你可能又有这样疑问：父协程有自己的调用栈，"),n("code",[s._v("gen")]),s._v(" 协程时也有自己的调用栈，当 "),n("code",[s._v("gen")]),s._v(" 协程通过 "),n("code",[s._v("yield")]),s._v(" 把控制权交给父协程时，"),n("code",[s._v("V8")]),s._v(" 是如何切换到父协程的调用栈？当父协程通过 "),n("code",[s._v("gen.next")]),s._v(" 恢复 "),n("code",[s._v("gen")]),s._v(" 协程时，又是如何切换 "),n("code",[s._v("gen")]),s._v(" 协程的调用栈？")]),s._v(" "),n("p",[s._v("要搞清楚上面的问题，你需要关注以下两点内容。")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("第一点：")]),n("code",[s._v("gen")]),s._v(" 协程和父协程是在主线程上"),n("strong",[s._v("交互执行")]),s._v("的，并不是并发执行的，它们之前的切换是通过 "),n("code",[s._v("yield")]),s._v(" 和 "),n("code",[s._v("gen.next")]),s._v(" 来配合完成的。")])]),s._v(" "),n("li",[n("p",[s._v("**第二点：**当在 "),n("code",[s._v("gen")]),s._v(" 协程中调用了 "),n("code",[s._v("yield")]),s._v(" 方法时，"),n("code",[s._v("JavaScript")]),s._v(" 引擎会保存 "),n("code",[s._v("gen")]),s._v(" 协程当前的调用栈信息，并恢复父协程的调用栈信息。同样，当在父协程中执行 "),n("code",[s._v("gen.next")]),s._v(" 时，"),n("code",[s._v("JavaScript")]),s._v(" 引擎会保存父协程的调用栈信息，并恢复 "),n("code",[s._v("gen")]),s._v(" 协程的调用栈信息。")])])]),s._v(" "),n("p",[s._v("为了直观理解父协程和 "),n("code",[s._v("gen")]),s._v("协程是如何切换调用栈的，你可以参考下图")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part4/ls20/2.png",alt:""}})]),s._v(" "),n("p",[s._v("到这里相信你已经弄清楚了协程是怎么工作的，其实在 "),n("code",[s._v("JavaScript")]),s._v(" 中，"),n("strong",[s._v("生成器")]),s._v("就是"),n("strong",[s._v("协程")]),s._v("的一种实现方式，这样相信你也就理解什么是生成器了。那么接下来，我们使用生成器和 "),n("code",[s._v("Promise")]),s._v(" 来改造开头的那段 "),n("code",[s._v("Promise")]),s._v(" 代码。改造后的代码如下所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//foo 函数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" response1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://www.geekbang.org'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" response2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://www.geekbang.org/test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行 foo 函数的代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" gen "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getGenPromise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("gen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" gen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getGenPromise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("response")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getGenPromise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("response")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("从图中可以看到，"),n("code",[s._v("foo")]),s._v(" 函数是一个生成器函数，在 "),n("code",[s._v("foo")]),s._v(" 函数里面实现了用同步代码形式来实现异步操作；但是在 "),n("code",[s._v("foo")]),s._v(" 函数外部，我们还需要写一段执行 "),n("code",[s._v("foo")]),s._v(" 函数的代码，如上述代码的后半部分所示，那下面我们就来分析下这段代码是如何工作的。")]),s._v(" "),n("ul",[n("li",[s._v("首先执行的是"),n("code",[s._v("let gen = foo()")]),s._v("，创建了 "),n("code",[s._v("gen")]),s._v(" 协程。")]),s._v(" "),n("li",[s._v("然后在父协程中通过执行 "),n("code",[s._v("gen.next")]),s._v(" 把主线程的控制权交给 "),n("code",[s._v("gen")]),s._v(" 协程。")]),s._v(" "),n("li",[n("code",[s._v("gen")]),s._v(" 协程获取到主线程的控制权后，就调用 "),n("code",[s._v("fetch")]),s._v(" 函数创建了一个 "),n("code",[s._v("Promise")]),s._v(" 对象 "),n("code",[s._v("response1")]),s._v("，然后通过 "),n("code",[s._v("yield")]),s._v(" 暂停 "),n("code",[s._v("gen")]),s._v(" 协程的执行，并将 "),n("code",[s._v("response1")]),s._v(" 返回给父协程。")]),s._v(" "),n("li",[s._v("父协程恢复执行后，调用 "),n("code",[s._v("response1.then")]),s._v(" 方法等待请求结果。")]),s._v(" "),n("li",[s._v("等通过 "),n("code",[s._v("fetch")]),s._v(" 发起的请求完成之后，会调用 "),n("code",[s._v("then")]),s._v(" 中的回调函数，"),n("code",[s._v("then")]),s._v(" 中的回调函数拿到结果之后，通过调用 "),n("code",[s._v("gen.next")]),s._v(" "),n("strong",[s._v("放弃")]),s._v("主线程的"),n("strong",[s._v("控制权")]),s._v("，将控制权交 "),n("code",[s._v("gen")]),s._v(" 协程继续执行下个请求。")])]),s._v(" "),n("p",[s._v("以上就是"),n("strong",[s._v("协程")]),s._v("和 "),n("code",[s._v("Promise")]),s._v(" 相互配合执行的一个大致流程。不过通常，我们把执行生成器的代码封装成一个函数，并把这个"),n("strong",[s._v("执行生成器代码")]),s._v("的函数称为"),n("strong",[s._v("执行器")]),s._v("（可参考著名的 co 框架），如下面这种方式：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" response1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://www.geekbang.org'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" response2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://www.geekbang.org/test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("co")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("通过使用生成器配合执行器，就能实现使用同步的方式写出异步代码了，这样也大大加强了代码的可读性。")]),s._v(" "),n("h2",{attrs:{id:"async-await"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[s._v("#")]),s._v(" "),n("code",[s._v("async/await")])]),s._v(" "),n("p",[s._v("虽然生成器已经能很好地满足我们的需求了，但是程序员的追求是无止境的，这不又在 "),n("code",[s._v("ES7")]),s._v(" 中引入了 "),n("code",[s._v("async/await")]),s._v("，这种方式能够彻底"),n("strong",[s._v("告别执行器")]),s._v("和"),n("strong",[s._v("生成器")]),s._v("，实现更加直观简洁的代码。其实 "),n("code",[s._v("async/await")]),s._v(" 技术背后的秘密就是 "),n("code",[s._v("Promise")]),s._v(" 和"),n("strong",[s._v("生成器")]),s._v("应用，往底层说就是"),n("strong",[s._v("微任务")]),s._v("和"),n("strong",[s._v("协程应用")]),s._v("。要搞清楚 "),n("code",[s._v("async")]),s._v(" 和 "),n("code",[s._v("await")]),s._v(" 的工作原理，我们就得对 "),n("code",[s._v("async")]),s._v(" 和 "),n("code",[s._v("await")]),s._v(" 分开分析。")]),s._v(" "),n("blockquote",[n("p",[s._v("即生成器的协程提供了主线程执行权的替换，"),n("code",[s._v("Promise")]),s._v("对象提供了执行执行器的底层实现支撑。")])]),s._v(" "),n("p",[n("strong",[s._v("1. "),n("code",[s._v("async")])])]),s._v(" "),n("p",[s._v("我们先来看看 "),n("code",[s._v("async")]),s._v(" 到底是什么？根据 "),n("code",[s._v("MDN")]),s._v(" 定义，"),n("code",[s._v("async")]),s._v(" 是一个通过"),n("strong",[s._v("异步执行")]),s._v("并"),n("strong",[s._v("隐式返回")]),s._v(" "),n("code",[s._v("Promise")]),s._v(" 作为结果的函数。")]),s._v(" "),n("p",[s._v("对 "),n("code",[s._v("async")]),s._v(" 函数的理解，这里需要重点关注两个词：异步执行和隐式返回 "),n("code",[s._v("Promise")]),s._v("。")]),s._v(" "),n("p",[s._v("关于异步执行的原因，我们一会儿再分析。这里我们先来看看是如何隐式返回 "),n("code",[s._v("Promise")]),s._v(" 的，你可以参考下面的代码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("async function foo() {\n    return 2\n}\n\nconsole.log(foo())  // Promise {<resolved>: 2}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("执行这段代码，我们可以看到调用 "),n("code",[s._v("async")]),s._v(" 声明的 "),n("code",[s._v("foo")]),s._v(" 函数返回了一个 "),n("code",[s._v("Promise")]),s._v(" 对象，状态是 "),n("code",[s._v("resolved")]),s._v("，返回结果如下所示：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Promise {<resolved>: 2}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("2. "),n("code",[s._v("await")])])]),s._v(" "),n("p",[s._v("我们知道了 "),n("code",[s._v("async")]),s._v(" 函数返回的是一个 "),n("code",[s._v("Promise")]),s._v(" 对象，那下面我们再结合文中这段代码来看看 "),n("code",[s._v("await")]),s._v(" 到底是什么。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("观察上面这段代码，你能判断出打印出来的内容是什么吗？这得先来分析 "),n("code",[s._v("async")]),s._v(" 结合 "),n("code",[s._v("await")]),s._v(" 到底会发生什么。在详细介绍之前，我们先站在协程的视角来看看这段代码的整体执行流程图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part4/ls20/3.png",alt:""}})]),s._v(" "),n("p",[s._v("结合上图，我们来一起分析下 "),n("code",[s._v("async/await")]),s._v("的执行流程。")]),s._v(" "),n("p",[s._v("首先，执行"),n("code",[s._v("console.log(0)")]),s._v("这个语句，打印出来"),n("code",[s._v("0")]),s._v("。")]),s._v(" "),n("p",[s._v("紧接着就是执行 "),n("code",[s._v("foo")]),s._v(" 函数，由于 "),n("code",[s._v("foo")]),s._v(" 函数是被 "),n("code",[s._v("async")]),s._v(" 标记过的，所以当进入该函数的时候，"),n("code",[s._v("JavaScript")]),s._v(" 引擎会保存当前的调用栈等信息，然后执行"),n("code",[s._v("foo")]),s._v(" 函数中的"),n("code",[s._v("console.log(1)")]),s._v("语句，并打印出 "),n("code",[s._v("1")]),s._v("。")]),s._v(" "),n("p",[s._v("接下来就执行到 "),n("code",[s._v("foo")]),s._v(" 函数中的"),n("code",[s._v("await 100")]),s._v("这个语句了，这里是我们分析的重点，因为在执行"),n("code",[s._v("await 100")]),s._v("这个语句时，"),n("code",[s._v("JavaScript")]),s._v(" 引擎在背后为我们默默做了太多的事情，那么下面我们就把这个语句拆开，来看看 "),n("code",[s._v("JavaScript")]),s._v(" 到底都做了哪些事情。")]),s._v(" "),n("p",[s._v("当执行到"),n("code",[s._v("await 100")]),s._v("时，会默认创建一个 "),n("code",[s._v("Promise")]),s._v(" 对象，代码如下所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" promise_ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("reject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在这个 "),n("code",[s._v("promise_")]),s._v(" 对象创建的过程中，我们可以看到在 "),n("code",[s._v("executor")]),s._v(" 函数中调用了 "),n("code",[s._v("resolve")]),s._v(" 函数，"),n("code",[s._v("JavaScript")]),s._v(" 引擎会将该任务提交给"),n("strong",[s._v("微任务")]),s._v("队列（上一篇文章中我们讲解过）。")]),s._v(" "),n("p",[s._v("然后 "),n("code",[s._v("JavaScript")]),s._v(" 引擎会暂停当前协程的执行，将主线程的控制权转交给"),n("strong",[s._v("父协程")]),s._v("执行，同时会将 "),n("code",[s._v("promise_")]),s._v("对象返回给"),n("strong",[s._v("父协程")]),s._v("。")]),s._v(" "),n("p",[s._v("主线程的控制权已经交给父协程了，这时候父协程要做的一件事是调用 "),n("code",[s._v("promise_.then")]),s._v(" 来监控 "),n("code",[s._v("promise")]),s._v(" 状态的改变。")]),s._v(" "),n("p",[s._v("接下来继续执行父协程的流程，这里我们执行"),n("code",[s._v("console.log(3)")]),s._v("，并打印出来 "),n("code",[s._v("3")]),s._v("。随后父协程将执行结束，在结束之前，会"),n("strong",[s._v("进入微任务")]),s._v("的"),n("strong",[s._v("检查点")]),s._v("，然后执行微任务队列，微任务队列中有"),n("code",[s._v("resolve(100)")]),s._v("的任务等待执行，执行到这里的时候，会触发 "),n("code",[s._v("promise_.then")]),s._v(" 中的回调函数，如下所示：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("promise_"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回调函数被激活后")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将主线程控制权交给 foo 协程，并将 vaule 值传给协程")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("该回调函数被激活以后，会将主线程的控制权交给 "),n("code",[s._v("foo")]),s._v(" 函数的协程，并同时将 "),n("code",[s._v("value")]),s._v(" 值传给该协程。")]),s._v(" "),n("p",[n("code",[s._v("foo")]),s._v(" 协程激活之后，会把刚才的 "),n("code",[s._v("value")]),s._v(" 值赋给了变量 "),n("code",[s._v("a")]),s._v("，然后 "),n("code",[s._v("foo")]),s._v(" 协程继续执行后续语句，执行完成之后，将控制权归还给父协程。")]),s._v(" "),n("p",[s._v("以上就是 "),n("code",[s._v("await/async")]),s._v(" 的执行流程。正是因为 "),n("code",[s._v("async")]),s._v(" 和 "),n("code",[s._v("await")]),s._v(" 在背后为我们做了大量的工作，所以我们才能用同步的方式写出异步代码来")]),s._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),n("p",[s._v("好了，今天就介绍到这里，下面我来总结下今天的主要内容。")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Promise")]),s._v(" 的编程模型依然充斥着大量的 "),n("code",[s._v("then")]),s._v(" 方法，虽然解决了回调地狱的问题，但是在语义方面依然存在缺陷，代码中充斥着大量的 "),n("code",[s._v("then")]),s._v(" 函数，这就是 "),n("code",[s._v("async/await")]),s._v(" 出现的原因。")]),s._v(" "),n("li",[s._v("使用 "),n("code",[s._v("async/await")]),s._v(" 可以实现"),n("strong",[s._v("用同步代码")]),s._v("的风格来编写"),n("strong",[s._v("异步代码")]),s._v("，这是因为 "),n("code",[s._v("async/await")]),s._v(" 的基础技术使用了"),n("strong",[s._v("生成器")]),s._v("和 "),n("code",[s._v("Promise")]),s._v("，生成器是"),n("strong",[s._v("协程")]),s._v("的实现，利用生成器能实现"),n("strong",[s._v("生成器函数")]),s._v("的"),n("strong",[s._v("暂停")]),s._v("和"),n("strong",[s._v("恢复")]),s._v("。")]),s._v(" "),n("li",[s._v("另外，"),n("code",[s._v("V8")]),s._v(" 引擎还为 "),n("code",[s._v("async/await")]),s._v(" 做了大量的语法层面包装，所以了解隐藏在背后的代码有助于加深你对 "),n("code",[s._v("async/await")]),s._v(" 的理解。")]),s._v(" "),n("li",[n("code",[s._v("async/await")]),s._v(" 无疑是异步编程领域非常大的一个革新，也是未来的一个主流的编程风格。其实，除了 "),n("code",[s._v("JavaScript")]),s._v("，"),n("code",[s._v("Python")]),s._v("、"),n("code",[s._v("Dart")]),s._v("、"),n("code",[s._v("C#")]),s._v(" 等语言也都引入了 "),n("code",[s._v("async/await")]),s._v("，使用它不仅能让代码更加整洁美观，而且还能确保该函数"),n("strong",[s._v("始终都能返回 "),n("code",[s._v("Promise")])]),s._v("；")])])])}),[],!1,null,null,null);t.default=e.exports}}]);