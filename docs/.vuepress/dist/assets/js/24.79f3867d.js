(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{451:function(t,s,a){"use strict";a.r(s);var n=a(27),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_10-作用域链和闭包：代码中出现相同的变量javascript引擎如何选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-作用域链和闭包：代码中出现相同的变量javascript引擎如何选择"}},[t._v("#")]),t._v(" 10.作用域链和闭包：代码中出现相同的变量JavaScript引擎如何选择")]),t._v(" "),a("p",[t._v("理解作用域链是理解闭包的基础，而闭包在 "),a("code",[t._v("JavaScript")]),t._v(" 中几乎无处不在，同时"),a("strong",[t._v("作用域")]),t._v("和"),a("strong",[t._v("作用域链")]),t._v("还是所有编程语言的基础。所以，如果你想学透一门语言，作用域和作用域链一定是绕不开的")]),t._v(" "),a("p",[t._v("那今天我们就来聊聊什么是作用域链，并通过作用域链再来讲讲什么是"),a("strong",[t._v("闭包")]),t._v("。")]),t._v(" "),a("p",[t._v("首先我们来看下面这段代码：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客邦 "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客时间 "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("你觉得这段代码中的 "),a("code",[t._v("bar")]),t._v(" 函数和 "),a("code",[t._v("foo")]),t._v("函数打印出来的内容是什么？这就要分析下这两段代码的执行流程。")]),t._v(" "),a("p",[t._v("通过前面几篇文章的学习，想必你已经知道了如何通过执行上下文来分析代码的执行流程了。那么当这段代码执行到 "),a("code",[t._v("bar")]),t._v(" 函数内部时，其"),a("strong",[t._v("调用栈")]),t._v("的状态图如下所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls10/1.png",alt:""}})]),t._v(" "),a("p",[t._v("从图中可以看出，全局执行上下文和 "),a("code",[t._v("foo")]),t._v(" 函数的执行上下文中都包含变量 "),a("code",[t._v("myName")]),t._v("，那 "),a("code",[t._v("bar")]),t._v(" 函数里面 "),a("code",[t._v("myName")]),t._v(" 的值到底该选择哪个呢？")]),t._v(" "),a("p",[t._v("也许你的第一反应是按照调用栈的顺序来查找变量，查找方式如下：")]),t._v(" "),a("ol",[a("li",[t._v("先查找栈顶是否存在 "),a("code",[t._v("myName")]),t._v(" 变量，但是这里没有，所以接着往下查找 "),a("code",[t._v("foo")]),t._v(" 函数中的变量。")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("foo")]),t._v(" 函数中查找到了 "),a("code",[t._v("myName")]),t._v(" 变量，这时候就使用 "),a("code",[t._v("foo")]),t._v(" 函数中的 "),a("code",[t._v("myName")]),t._v("。")])]),t._v(" "),a("p",[t._v("如果按照这种方式来查找变量，那么最终执行 "),a("code",[t._v("bar")]),t._v(" 函数打印出来的结果就应该是“极客邦”。但实际情况并非如此，如果你试着执行上述代码，你会发现打印出来的结果是“极客时间”。为什么会是这种情况呢？要解释清楚这个问题，那么你就需要先搞清楚作用域链了")]),t._v(" "),a("blockquote",[a("p",[t._v("**注意：**这里我也上当了，好好看下面；"),a("code",[t._v("bar")]),t._v("里的引用指针是指向全局执行上下文的，而不是调用栈的上一级"),a("code",[t._v("foo")]),t._v("函数执行上下文；")])]),t._v(" "),a("h2",{attrs:{id:"作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),a("p",[t._v("关于作用域链，很多人会感觉费解，但如果你理解了调用栈、执行上下文、词法环境、变量环境等概念，那么你理解起来作用域链也会很容易。所以很是建议你结合前几篇文章将上面那几个概念学习透彻。")]),t._v(" "),a("p",[t._v("其实在每个执行上下文的变量环境中，都包含了一个"),a("strong",[t._v("外部引用")]),t._v("，用来指向外部的执行上下文，我们把这个"),a("strong",[t._v("外部引用")]),t._v("称为"),a("code",[t._v("outer")]),t._v("。")]),t._v(" "),a("p",[t._v("当一段代码使用了一个变量时，"),a("code",[t._v("JavaScript")]),t._v(" 引擎首先会在“当前的执行上下文”中查找该变量， 比如上面那段代码在查找 "),a("code",[t._v("myName")]),t._v(" 变量时，如果在当前的变量环境中没有查找到，那么 "),a("code",[t._v("JavaScript")]),t._v(" 引擎会继续在 "),a("code",[t._v("outer")]),t._v(" 所指向的执行上下文中查找。为了直观理解，你可以看下面这张图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls10/2.png",alt:""}})]),t._v(" "),a("p",[t._v("从图中可以看出，"),a("code",[t._v("bar")]),t._v(" 函数和 "),a("code",[t._v("foo")]),t._v(" 函数的 "),a("code",[t._v("outer")]),t._v(" 都是指向全局上下文的，这也就意味着如果在 "),a("code",[t._v("bar")]),t._v(" 函数或者 "),a("code",[t._v("foo")]),t._v(" 函数中使用了外部变量，那么 "),a("code",[t._v("JavaScript")]),t._v(" 引擎会去全局执行上下文中查找。我们把这个查找的链条就称为作用域链。")]),t._v(" "),a("p",[t._v("现在你知道变量是通过作用域链来查找的了，不过还有一个疑问没有解开，"),a("code",[t._v("foo")]),t._v(" 函数调用的 "),a("code",[t._v("bar")]),t._v(" 函数，那为什么 "),a("code",[t._v("bar")]),t._v(" 函数的"),a("strong",[t._v("外部引用")]),t._v("是"),a("strong",[t._v("全局执行上下文")]),t._v("，而"),a("strong",[t._v("不是")]),t._v(" "),a("code",[t._v("foo")]),t._v(" "),a("strong",[t._v("函数的执行上下文")]),t._v("？")]),t._v(" "),a("p",[t._v("要回答这个问题，你还需要知道什么是"),a("strong",[t._v("词法作用域")]),t._v("。这是因为在 "),a("code",[t._v("JavaScript")]),t._v(" 执行过程中，"),a("strong",[t._v("其作用域链是由词法作用域决定的；")])]),t._v(" "),a("h2",{attrs:{id:"词法作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法作用域"}},[t._v("#")]),t._v(" 词法作用域")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("词法作用域")]),t._v("就是指作用域是由代码中"),a("strong",[t._v("函数声明的位置")]),t._v("来决定的，所以词法作用域是"),a("strong",[t._v("静态的作用域")]),t._v("，通过它就能够预测代码在执行过程中如何查找标识符")])]),t._v(" "),a("p",[t._v("这么讲可能不太好理解，你可以看下面这张图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls10/3.png",alt:""}})]),t._v(" "),a("p",[t._v("从图中可以看出，"),a("strong",[t._v("词法作用域")]),t._v("就是根据代码的位置来决定的，其中 "),a("code",[t._v("main")]),t._v("函数包含了 "),a("code",[t._v("bar")]),t._v(" 函数，"),a("code",[t._v("bar")]),t._v(" 函数中包含了 "),a("code",[t._v("foo")]),t._v(" 函数，因为 "),a("code",[t._v("JavaScript")]),t._v(" "),a("strong",[t._v("作用域链是由词法作用域决定")]),t._v("的，所以整个词法作用域链的顺序是："),a("code",[t._v("foo")]),t._v(" 函数作用域—>"),a("code",[t._v("bar")]),t._v(" 函数作用域—>"),a("code",[t._v("main")]),t._v(" 函数作用域—> 全局作用域。")]),t._v(" "),a("p",[t._v("了解了词法作用域以及 "),a("code",[t._v("JavaScript")]),t._v(" 中的作用域链，我们再回过头来看看上面的那个问题：在开头那段代码中，"),a("code",[t._v("foo")]),t._v(" 函数调用了 "),a("code",[t._v("bar")]),t._v(" 函数，那为什么 "),a("code",[t._v("bar")]),t._v(" 函数的外部引用是全局执行上下文，而不是 "),a("code",[t._v("foo")]),t._v("函数的执行上下文?")]),t._v(" "),a("p",[t._v("这是因为根据词法作用域，"),a("code",[t._v("foo")]),t._v(" 和 "),a("code",[t._v("bar")]),t._v(" 的上级作用域都是全局作用域，所以如果 "),a("code",[t._v("foo")]),t._v(" 或者 "),a("code",[t._v("bar")]),t._v(" 函数使用了一个它们没有定义的变量，那么它们会到全局作用域去查找。"),a("strong",[t._v("也就是说，词法作用域是代码阶段就决定好的，和函数是怎么调用的没有关系")])]),t._v(" "),a("h2",{attrs:{id:"块级作用域中的变量查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域中的变量查找"}},[t._v("#")]),t._v(" 块级作用域中的变量查找")]),t._v(" "),a("p",[t._v("前面我们通过"),a("strong",[t._v("全局作用域")]),t._v("和"),a("strong",[t._v("函数级作用域")]),t._v("来分析了"),a("strong",[t._v("作用域链")]),t._v("，那接下来我们再来看看"),a("strong",[t._v("块级作用域")]),t._v("中变量是如何查找的？在编写代码的时候，如果你使用了一个在当前作用域中不存在的变量，这时 "),a("code",[t._v("JavaScript")]),t._v("引擎就需要按照作用域链在其他作用域中查找该变量，如果你不了解该过程，那就会有很大概率写出不稳定的代码。")]),t._v(" "),a("p",[t._v("我们还是先看下面这段代码：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客世界 "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Chrome 浏览器 "')]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客邦 "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客时间 "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myAge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("p",[t._v("你可以自己先分析下这段代码的执行流程，看看能否分析出来执行结果。")]),t._v(" "),a("p",[t._v("要想得出其执行结果，那接下来我们就得站在"),a("strong",[t._v("作用域链")]),t._v("和"),a("strong",[t._v("词法环境")]),t._v("的角度来分析下其执行过程。")]),t._v(" "),a("p",[t._v("在上篇文章中我们已经介绍过了，"),a("code",[t._v("ES6")]),t._v("是支持块级作用域的，当执行到代码块时，如果代码块中有"),a("code",[t._v("let")]),t._v(" 或者 "),a("code",[t._v("const")]),t._v(" 声明的变量，那么变量就会存放到该函数的"),a("strong",[t._v("词法环境")]),t._v("中。对于上面这段代码，当执行到 "),a("code",[t._v("bar")]),t._v(" 函数内部的 "),a("code",[t._v("if")]),t._v(" 语句块时，其调用栈的情况如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls10/4.png",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("这里关于为什么"),a("code",[t._v("let")]),t._v("定义的变量放入词法环境；"),a("code",[t._v("var")]),t._v("定义的变量放入变量环境；并且其中的排放顺序以及查找顺序问题，可以参见"),a("code",[t._v("09")]),t._v("里面有详细解释；")]),t._v(" "),a("p",[t._v("**完整顺序：**先在当前的执行上下文中的词法环境中由上向下查找，再到该执行上下文中的变量环境中由下到上查找；还没找到就到全局执行上下文中重复刚才的过程；")])]),t._v(" "),a("p",[t._v("现在是执行到 "),a("code",[t._v("bar")]),t._v(" 函数的 "),a("code",[t._v("if")]),t._v(" 语块之内，需要打印出来变量 "),a("code",[t._v("test")]),t._v("，那么就需要查找到 "),a("code",[t._v("test")]),t._v(" 变量的值，其查找过程我已经在上图中使用序号 "),a("code",[t._v("1")]),t._v("、"),a("code",[t._v("2")]),t._v("、"),a("code",[t._v("3")]),t._v("、"),a("code",[t._v("4")]),t._v("、"),a("code",[t._v("5")]),t._v(" 标记出来了。")]),t._v(" "),a("p",[t._v("下面我就来解释下这个过程。首先是在 "),a("code",[t._v("bar")]),t._v(" 函数的执行上下文中查找，但因为 "),a("code",[t._v("bar")]),t._v(" 函数的执行上下文中没有定义 "),a("code",[t._v("test")]),t._v(" 变量，所以根据词法作用域的规则，下一步就在 "),a("code",[t._v("bar")]),t._v(" 函数的外部作用域中查找，也就是"),a("strong",[t._v("全局作用域")]),t._v("。")]),t._v(" "),a("p",[t._v("至于单个执行上下文中如何查找变量，我在上一篇文章中已经做了介绍，这里就不重复了。")]),t._v(" "),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),a("p",[t._v("了解了作用域链，接着我们就可以来聊聊闭包了。关于"),a("strong",[t._v("闭包")]),t._v("，理解起来可能会是一道坎，特别是在你不太熟悉 "),a("code",[t._v("JavaScript")]),t._v("这门语言的时候，接触闭包很可能会让你产生一些挫败感，因为你很难通过理解背后的原理来彻底理解闭包，从而导致学习过程中似乎总是似懂非懂。最要命的是，"),a("code",[t._v("JavaScript")]),t._v("代码中还总是充斥着大量的闭包代码。")]),t._v(" "),a("p",[t._v("但理解了"),a("strong",[t._v("变量环境")]),t._v("、"),a("strong",[t._v("词法环境")]),t._v("和"),a("strong",[t._v("作用域链")]),t._v("等概念，那接下来你再理解什么是 "),a("code",[t._v("JavaScript")]),t._v(" 中的闭包就容易多了。这里你可以结合下面这段代码来理解什么是闭包：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客时间 "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" test2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" innerBar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" myName\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newName\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" innerBar\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客邦 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("blockquote",[a("p",[t._v("我有点懂了："),a("code",[t._v("innerBar")]),t._v("是"),a("code",[t._v("foo")]),t._v("函数执行上下文中定义的一个变量，而不是函数，所以不会向上一节讨论的函数嵌套问题一样。即"),a("code",[t._v("innerBar")]),t._v("变量的值（函数）可以访问与"),a("code",[t._v("innerBar")]),t._v("一样同为"),a("code",[t._v("foo")]),t._v("函数作用域内的其他属性，而不是直接去全局作用域找；所以并不与词法作用域决定的作用域链矛盾；")]),t._v(" "),a("p",[a("strong",[t._v("所谓作用域链：就是在查找变量时，按照词法作用域规定的顺序进行查找，所串连起来的作用域；")])])]),t._v(" "),a("p",[t._v("首先我们看看当执行到 "),a("code",[t._v("foo")]),t._v(" 函数内部的"),a("code",[t._v("return innerBar")]),t._v("这行代码时调用栈的情况，你可以参考下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls10/5.png",alt:""}})]),t._v(" "),a("p",[t._v("从上面的代码可以看出，"),a("code",[t._v("innerBar")]),t._v(" 是一个对象，包含了 "),a("code",[t._v("getName")]),t._v(" 和 "),a("code",[t._v("setName")]),t._v("的两个方法（通常我们把"),a("strong",[t._v("对象内部的函数称为方法")]),t._v("）。你可以看到，这两个方法都是在 "),a("code",[t._v("foo")]),t._v(" 函数内部定义的，并且这两个方法内部都使用了 "),a("code",[t._v("myName")]),t._v(" 和 "),a("code",[t._v("test1")]),t._v(" 两个变量。")]),t._v(" "),a("p",[t._v("根据"),a("strong",[t._v("词法作用域")]),t._v("的规则（先在当前执行上下文查找，找不到就去全局执行上下文），内部函数 "),a("code",[t._v("getName")]),t._v(" 和 "),a("code",[t._v("setName")]),t._v(" 总是可以访问它们的外部函数 "),a("code",[t._v("foo")]),t._v(" 中的变量，所以当 "),a("code",[t._v("innerBar")]),t._v(" 对象返回给全局变量 "),a("code",[t._v("bar")]),t._v(" 时，虽然 "),a("code",[t._v("foo")]),t._v(" 函数已经执行结束，但是 "),a("code",[t._v("getName")]),t._v(" 和 "),a("code",[t._v("setName")]),t._v(" 函数依然可以使用 "),a("code",[t._v("foo")]),t._v(" 函数中的变量 "),a("code",[t._v("myName")]),t._v(" 和 "),a("code",[t._v("test1")]),t._v("。所以当 "),a("code",[t._v("foo")]),t._v(" 函数执行完成之后，其整个调用栈的状态如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls10/6.png",alt:""}})]),t._v(" "),a("p",[t._v("从上图可以看出，"),a("code",[t._v("foo")]),t._v(" 函数执行完成之后，其"),a("strong",[t._v("执行上下文")]),t._v("从栈顶弹出了，但是由于返回的 "),a("code",[t._v("setName")]),t._v(" 和 "),a("code",[t._v("getName")]),t._v(" 方法中使用了 "),a("code",[t._v("foo")]),t._v(" 函数内部的变量 "),a("code",[t._v("myName")]),t._v(" 和 "),a("code",[t._v("test1")]),t._v("，所以这两个变量"),a("strong",[t._v("依然保存在内存")]),t._v("中。这像极了"),a("code",[t._v("setName")]),t._v("和 "),a("code",[t._v("getName")]),t._v(" 方法"),a("strong",[t._v("背的一个专属背包")]),t._v("，无论在哪里调用了 "),a("code",[t._v("setName")]),t._v(" 和 "),a("code",[t._v("getName")]),t._v(" 方法，它们都会背着这个"),a("code",[t._v("foo")]),t._v(" 函数的专属背包。")]),t._v(" "),a("p",[t._v("之所以是"),a("strong",[t._v("专属背包")]),t._v("，是因为除了 "),a("code",[t._v("setName")]),t._v(" 和 "),a("code",[t._v("getName")]),t._v(" 函数之外，其他任何地方都是"),a("strong",[t._v("无法访问该背包")]),t._v("的，我们就可以把这个"),a("strong",[t._v("背包")]),t._v("称为 "),a("code",[t._v("foo")]),t._v(" 函数的"),a("strong",[t._v("闭包")]),t._v("。")]),t._v(" "),a("p",[t._v("好了，现在我们终于可以给闭包一个正式的定义了。在 "),a("code",[t._v("JavaScript")]),t._v(" 中，根据"),a("strong",[t._v("词法作用域的规则")]),t._v("，"),a("strong",[t._v("内部函数")]),t._v("总是"),a("strong",[t._v("可以访问")]),t._v("其"),a("strong",[t._v("外部函数中声明的变量")]),t._v("，"),a("strong",[t._v("当通过调用一个外部函数返回一个内部函数后，即使该外部函数已经执行结束了，但是内部函数引用外部函数的变量依然保存在内存中")]),t._v("，我们就把这些"),a("strong",[t._v("变量的集合")]),t._v("称为"),a("strong",[t._v("闭包")]),t._v("。比如外部函数是 "),a("code",[t._v("foo")]),t._v("，那么这些变量的集合就称为 "),a("code",[t._v("foo")]),t._v(" 函数的闭包。")]),t._v(" "),a("p",[t._v("那这些闭包是如何使用的呢？当执行到 "),a("code",[t._v("bar.setName")]),t._v(" 方法中的"),a("code",[t._v('myName = "极客邦"')]),t._v("这句代码时，"),a("code",[t._v("JavaScript")]),t._v("引擎会沿着“当前执行上下文–>"),a("code",[t._v("foo")]),t._v(" 函数闭包–> 全局执行上下文”的顺序来查找 "),a("code",[t._v("myName")]),t._v(" 变量，你可以参考下面的调用栈状态图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls10/7.png",alt:""}})]),t._v(" "),a("p",[t._v("从图中可以看出，"),a("code",[t._v("setName")]),t._v(" 的执行上下文中没有 "),a("code",[t._v("myName")]),t._v(" 变量，"),a("code",[t._v("foo")]),t._v(" 函数的闭包中包含了变量 "),a("code",[t._v("myName")]),t._v("，所以调用 "),a("code",[t._v("setName")]),t._v(" 时，会修改 "),a("code",[t._v("foo")]),t._v(" 闭包中的 "),a("code",[t._v("myName")]),t._v(" 变量的值。")]),t._v(" "),a("p",[t._v("同样的流程，当调用 "),a("code",[t._v("bar.getName")]),t._v(" 的时候，所访问的变量 "),a("code",[t._v("myName")]),t._v("也是位于 "),a("code",[t._v("foo")]),t._v(" 函数闭包中的。")]),t._v(" "),a("p",[t._v("你也可以通过“开发者工具”来看看闭包的情况，打开 "),a("code",[t._v("Chrome")]),t._v(" 的“开发者工具”，在 "),a("code",[t._v("bar")]),t._v(" 函数任意地方打上断点，然后刷新页面，可以看到如下内容：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls10/8.png",alt:""}})]),t._v(" "),a("p",[t._v("从图中可以看出来，当调用 "),a("code",[t._v("bar.getName")]),t._v(" 的时候，右边 "),a("code",[t._v("Scope")]),t._v(" 项就体现出了作用域链的情况："),a("code",[t._v("Local")]),t._v(" 就是当前的 "),a("code",[t._v("getName")]),t._v(" 函数的作用域，"),a("code",[t._v("Closure(foo)")]),t._v(" 是指 "),a("code",[t._v("foo")]),t._v(" 函数的闭包，最下面的 "),a("code",[t._v("Global")]),t._v(" 就是指全局作用域，从“"),a("code",[t._v("Local")]),t._v("–>"),a("code",[t._v("Closure(foo)")]),t._v("–>"),a("code",[t._v("Global")]),t._v("”就是一个完整的作用域链。")]),t._v(" "),a("p",[t._v("所以说，你以后也可以通过 "),a("code",[t._v("Scope")]),t._v(" 来查看实际代码"),a("strong",[t._v("作用域链")]),t._v("的情况，这样调试代码也会比较方便。")]),t._v(" "),a("h2",{attrs:{id:"闭包是怎么回收的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包是怎么回收的"}},[t._v("#")]),t._v(" 闭包是怎么回收的")]),t._v(" "),a("p",[t._v("理解什么是闭包之后，接下来我们再来简单聊聊闭包是什么时候"),a("strong",[t._v("销毁")]),t._v("的。因为如果闭包使用不正确，会很容易造成"),a("strong",[t._v("内存泄漏")]),t._v("的，关注闭包是如何回收的能让你正确地使用闭包。")]),t._v(" "),a("p",[t._v("通常，如果引用闭包的函数是一个"),a("strong",[t._v("全局变量")]),t._v("，那么闭包会一直存在"),a("strong",[t._v("直到页面关闭")]),t._v("；但如果这个闭包以后不再使用的话，就会造成"),a("strong",[t._v("内存泄漏")]),t._v("。")]),t._v(" "),a("p",[t._v("如果引用闭包的函数是个"),a("strong",[t._v("局部变量")]),t._v("，等函数销毁后，在下次 "),a("code",[t._v("JavaScript")]),t._v(" 引擎执行"),a("strong",[t._v("垃圾回收")]),t._v("时，判断闭包这块内容如果"),a("strong",[t._v("已经不再被使用")]),t._v("了，那么 "),a("code",[t._v("JavaScript")]),t._v(" 引擎的垃圾回收器就会回收这块内存。")]),t._v(" "),a("p",[t._v("所以在使用闭包的时候，你要尽量注意一个原则：如果该闭包会一直使用，那么它可以作为"),a("strong",[t._v("全局变量")]),t._v("而存在；但如果使用频率不高，而且占用内存又比较大的话，那就尽量让它成为一个"),a("strong",[t._v("局部变量")]),t._v("。")]),t._v(" "),a("p",[t._v("关于闭包回收的问题本文只是做了个简单的介绍，其实闭包是如何回收的还牵涉到了 "),a("code",[t._v("JavaScript")]),t._v(" 的垃圾回收机制，而关于垃圾回收，后续章节我会再为你做详细介绍的")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("好了，今天的内容就讲到这里，下面我们来回顾下今天的内容：")]),t._v(" "),a("p",[t._v("首先，介绍了什么是"),a("strong",[t._v("作用域链")]),t._v("，我们把"),a("strong",[t._v("通过作用域查找变量的链条称为作用域链")]),t._v("；作用域链是通过"),a("strong",[t._v("词法作用域")]),t._v("来确定的，而词法作用域反映了代码的结构。 其次，介绍了在块级作用域中是如何通过作用域链来查找变量的。 最后，又基于"),a("strong",[t._v("作用域链")]),t._v("和"),a("strong",[t._v("词法环境")]),t._v("介绍了到底什么是"),a("strong",[t._v("闭包")]),t._v("。 通过展开词法作用域，我们介绍了 "),a("code",[t._v("JavaScript")]),t._v(" 中的作用域链和闭包；通过词法作用域，我们分析了在 "),a("code",[t._v("JavaScript")]),t._v(" 的执行过程中，"),a("strong",[t._v("作用域链")]),t._v("是已经"),a("strong",[t._v("注定好了")]),t._v("；")]),t._v(" "),a("blockquote",[a("p",[t._v("比如即使在"),a("code",[t._v("foo")]),t._v(" 函数中调用了 "),a("code",[t._v("bar")]),t._v(" 函数，你也无法在 "),a("code",[t._v("bar")]),t._v(" 函数中直接使用 "),a("code",[t._v("foo")]),t._v(" 函数中的变量信息。而如果"),a("code",[t._v("bar")]),t._v("函数作为"),a("code",[t._v("foo")]),t._v("函数内一个属性的值就可以（这种情况"),a("code",[t._v("bar")]),t._v("函数所使用的"),a("code",[t._v("foo")]),t._v("中的变量的集合称为"),a("strong",[t._v("闭包")]),t._v("）")])]),t._v(" "),a("p",[t._v("因此理解词法作用域对于你理解 "),a("code",[t._v("JavaScript")]),t._v(" 语言本身有着非常大帮助，比如有助于你理解下一篇文章中要介绍的 "),a("code",[t._v("this")]),t._v("。另外，理解词法作用域对于你理解其他语言也有很大的帮助，因为它们的逻辑都是一样的")]),t._v(" "),a("h2",{attrs:{id:"思考时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考时间"}},[t._v("#")]),t._v(" 思考时间")]),t._v(" "),a("p",[t._v("今天留给你的思考题是关于"),a("strong",[t._v("词法作用域")]),t._v("和"),a("strong",[t._v("闭包")]),t._v("，我修改了上面那段产生闭包的代码，如下所示：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    myName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time.geekbang.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("printName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客时间 "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("printName\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 极客邦 "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" _printName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_printName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("在上面这段代码中有三个地方定义了 "),a("code",[t._v("myName")]),t._v("，分析这段代码，你觉得这段代码在执行过程中会产生闭包吗？最终打印的结果是什么？")]),t._v(" "),a("blockquote",[a("p",[t._v("这道题其实是个障眼法，只需要确定好函数调用栈就可以很轻松的解答，调用了"),a("code",[t._v("foo()")]),t._v("后，返回的是"),a("code",[t._v("bar.printName")]),t._v("，后续就跟"),a("code",[t._v("foo")]),t._v("函数没有关系了，所以结果就是调用了两次"),a("code",[t._v("bar.printName()")]),t._v("，根据词法作用域，结果都是“极客邦”，也不会形成闭包；")]),t._v(" "),a("p",[t._v("**注意：**函数"),a("code",[t._v("printName")]),t._v("的执行上下文仅限该函数的作用域而不是，整个"),a("code",[t._v("bar")]),t._v("对象，所以在没有找到"),a("code",[t._v("myName")]),t._v("时，回到全局上下文中找"),a("code",[t._v("myName")]),t._v("也就是"),a("code",[t._v("极客邦")]),t._v("；")])])])}),[],!1,null,null,null);s.default=v.exports}}]);