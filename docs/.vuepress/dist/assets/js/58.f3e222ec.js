(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{483:function(s,t,a){"use strict";a.r(t);var n=a(27),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_09-块级作用域：var缺陷以及为什么要引入let和const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_09-块级作用域：var缺陷以及为什么要引入let和const"}},[s._v("#")]),s._v(" 09.块级作用域：var缺陷以及为什么要引入let和const")]),s._v(" "),a("p",[s._v("在前面《"),a("code",[s._v("07")]),s._v(" | 变量提升："),a("code",[s._v("JavaScript")]),s._v("代码是按顺序执行的吗？》这篇文章中，我们已经讲解了"),a("code",[s._v("JavaScript")]),s._v("中变量提升的相关内容，正是由于"),a("code",[s._v("JavaScript")]),s._v("存在变量提升这种特性，从而导致了很多与直觉不符的代码，这也是"),a("code",[s._v("JavaScript")]),s._v("的一个重要设计缺陷")]),s._v(" "),a("p",[s._v("虽然"),a("code",[s._v("ECMAScript6")]),s._v("（以下简称"),a("code",[s._v("ES6")]),s._v("）已经通过引入块级作用域并配合"),a("code",[s._v("let")]),s._v("、"),a("code",[s._v("const")]),s._v("关键字，来避开了这种设计缺陷，但是由于"),a("code",[s._v("JavaScript")]),s._v("需要保持"),a("strong",[s._v("向下兼容")]),s._v("，所以变量提升在相当长一段时间内还会"),a("strong",[s._v("继续存在")]),s._v("。这也加大了你理解概念的难度，因为既要理解新的机制，又要理解变量提升这套机制，关键这两套机制还是同时运行在“一套”系统中的。")]),s._v(" "),a("p",[s._v("但如果抛开"),a("code",[s._v("JavaScript")]),s._v("的底层去理解这些，那么你大概率会很难深入理解其概念。俗话说，“断病要断因，治病要治根”，所以为了便于你更好地理解和学习，今天我们这篇文章会先“探病因”——分析为什么在"),a("code",[s._v("JavaScript")]),s._v("中会"),a("strong",[s._v("存在变量提升")]),s._v("，以及变量提升所带来的问题；然后再来“开药方”——介绍如何通过"),a("strong",[s._v("块级作用域")]),s._v("并配合"),a("code",[s._v("let")]),s._v("和"),a("code",[s._v("const")]),s._v("关键字来修复这种缺陷")]),s._v(" "),a("h2",{attrs:{id:"作用域（scope）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域（scope）"}},[s._v("#")]),s._v(" 作用域（"),a("code",[s._v("scope")]),s._v("）")]),s._v(" "),a("p",[s._v("为什么"),a("code",[s._v("JavaScript")]),s._v("中会存在变量提升这个特性，而其他语言似乎都没有这个特性呢？要讲清楚这个问题，我们就得先从作用域讲起")]),s._v(" "),a("p",[a("strong",[s._v("作用域是指在程序中定义变量的区域，该位置决定了变量的生命周期。通俗地理解，作用域就是变量与函数的可访问范围，即作用域控制着变量和函数的可见性和生命周期")])]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("ES6")]),s._v("之前，"),a("code",[s._v("ES")]),s._v("的作用域只有"),a("strong",[s._v("两种")]),s._v("："),a("strong",[s._v("全局作用域")]),s._v("和"),a("strong",[s._v("函数作用域")]),s._v("。")]),s._v(" "),a("ul",[a("li",[s._v("全局作用域中的对象在代码中的"),a("strong",[s._v("任何地方都能访问")]),s._v("，其生命周期伴随着页面的生命周期。")]),s._v(" "),a("li",[s._v("函数作用域就是在"),a("strong",[s._v("函数内部定义的变量或者函数")]),s._v("，并且定义的变量或者函数只能"),a("strong",[s._v("在函数内部被访问")]),s._v("。函数执行结束之后，函数内部定义的变量会被销毁。")])]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("ES6")]),s._v("之前，"),a("code",[s._v("JavaScript")]),s._v("只支持这两种作用域，相较而言，其他语言则都普遍支持块级作用域。块级作用域就是使用一对大括号包裹的一段代码，比如函数、判断语句、循环语句，甚至单独的一个{}都可以被看作是一个块级作用域。")]),s._v(" "),a("p",[s._v("为了更好地理解块级作用域，你可以参考下面的一些示例代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//if块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//while块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//函数块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//for循环块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//单独一个块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("简单来讲，如果一种语言支持"),a("strong",[s._v("块级作用域")]),s._v("，那么其代码块内部定义的变量在"),a("strong",[s._v("代码块外部是访问不到的")]),s._v("，并且等该代码块中的代码执行完成之后，代码块中定义的变量会被"),a("strong",[s._v("销毁")]),s._v("。你可以看下面这段C代码：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" myname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"极客时间"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("showName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s \\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("myname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" myname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"极客邦"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("showName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("上面这段"),a("code",[s._v("C")]),s._v("代码执行后，最终打印出来的是上面全局变量"),a("code",[s._v("myname")]),s._v("的值，之所以这样，是因为"),a("code",[s._v("C")]),s._v("语言是支持块级作用域的，所以"),a("code",[s._v("if")]),s._v("块里面定义的变量是不能被"),a("code",[s._v("if")]),s._v("块外面的语句访问到的。")]),s._v(" "),a("p",[s._v("和"),a("code",[s._v("Java")]),s._v("、"),a("code",[s._v("C/C++")]),s._v("不同，"),a("code",[s._v("ES6")]),s._v("之前是"),a("strong",[s._v("不支持块级作用域")]),s._v("的，因为当初设计这门语言的时候，并没有想到"),a("code",[s._v("JavaScript")]),s._v("会火起来，所以只是按照最简单的方式来设计。没有了块级作用域，再把作用域内部的变量统一提升无疑是最快速、最简单的设计，不过这也直接导致了函数中的变量无论是在哪里声明的，在编译阶段都会被提取到"),a("strong",[s._v("执行上下文")]),s._v("的"),a("strong",[s._v("变量环境")]),s._v("中，所以这些变量在整个函数体内部的任何地方都是能被访问的，这也就是"),a("code",[s._v("JavaScript")]),s._v("中的变量提升。")]),s._v(" "),a("blockquote",[a("p",[s._v("即变量提升的"),a("strong",[s._v("本质原因")]),s._v("为："),a("code",[s._v("JavaScript")]),s._v('没有块级作用域，所以无论变量在哪里定义，都会被当做当前执行上下文（全局或函数）的"全局"变量，而被当前执行上下文访问到，也就相当于将函数声明提到了当前执行上下文的最前面；')])]),s._v(" "),a("h2",{attrs:{id:"变量提升所带来的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量提升所带来的问题"}},[s._v("#")]),s._v(" 变量提升所带来的问题")]),s._v(" "),a("p",[s._v("由于变量提升作用，使用"),a("code",[s._v("JavaScript")]),s._v("来编写和其他语言相同逻辑的代码，都有可能会导致不一样的执行结果。那为什么会出现这种情况呢？主要有以下两种原因。")]),s._v(" "),a("h3",{attrs:{id:"_1-变量容易在不被察觉的情况下被覆盖掉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-变量容易在不被察觉的情况下被覆盖掉"}},[s._v("#")]),s._v(" 1. 变量容易在不被察觉的情况下被覆盖掉")]),s._v(" "),a("p",[s._v("比如我们重新使用"),a("code",[s._v("JavaScript")]),s._v("来实现上面那段"),a("code",[s._v("C")]),s._v("代码，实现后的"),a("code",[s._v("JavaScript")]),s._v("代码如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" myname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"极客时间"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("showName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//undefined")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" myname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"极客邦"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//极客帮")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("showName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("执行上面这段代码，打印出来的是"),a("code",[s._v("undefined")]),s._v("，而并没有像前面"),a("code",[s._v("C")]),s._v("代码那样打印出来“极客时间”的字符串。为什么输出的内容是"),a("code",[s._v("undefined")]),s._v("呢？我们再来分析一下。")]),s._v(" "),a("blockquote",[a("p",[s._v("哦原来不存在块级作用域，所以"),a("code",[s._v("if")]),s._v("的"),a("code",[s._v("{}")]),s._v("内的"),a("code",[s._v("var name")]),s._v("声明会被提升到，"),a("code",[s._v("showName")]),s._v("函数的函数执行上下文中的最前面，也就是"),a("code",[s._v("console.log(myname)")]),s._v("前，由于寻找"),a("code",[s._v("myname")]),s._v("变量时采用就近原则，所以会输出"),a("code",[s._v("undefined")]),s._v("；")])]),s._v(" "),a("p",[s._v("首先当刚执行到"),a("code",[s._v("showName")]),s._v("函数调用时，执行上下文和调用栈的状态是怎样的？具体分析过程你可以回顾《"),a("code",[s._v("08")]),s._v(" | 调用栈：为什么"),a("code",[s._v("JavaScript")]),s._v("代码会出现栈溢出？》这篇文章的分析过程，这里我就直接展示出来了，最终的调用栈状态如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls9/1.png",alt:""}})]),s._v(" "),a("p",[a("code",[s._v("showName")]),s._v("函数的执行上下文创建后，"),a("code",[s._v("JavaScript")]),s._v("引擎便开始执行"),a("code",[s._v("showName")]),s._v("函数内部的代码了。首先执行的是：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("console.log(myname);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行这段代码需要使用变量"),a("code",[s._v("myname")]),s._v("，结合上面的调用栈状态图，你可以看到这里有两个"),a("code",[s._v("myname")]),s._v("变量：一个在全局执行上下文中，其值是“极客时间”；另外一个在"),a("code",[s._v("showName")]),s._v("函数的执行上下文中，其值是"),a("code",[s._v("undefined")]),s._v("。那么到底该使用哪个呢？")]),s._v(" "),a("p",[s._v("相信做过"),a("code",[s._v("JavaScript")]),s._v("开发的同学都能轻松回答出来答案：“当然是先使用"),a("strong",[s._v("函数执行上下文")]),s._v("里面的变量啦！”的确是这样，这是因为在函数执行过程中，"),a("code",[s._v("JavaScript")]),s._v("会"),a("strong",[s._v("优先")]),s._v("从当前的执行上下文中查找变量，由于变量提升，当前的执行上下文中就包含了变量"),a("code",[s._v("myname")]),s._v("，而值是"),a("code",[s._v("undefined")]),s._v("，所以获取到的"),a("code",[s._v("myname")]),s._v("的值就是"),a("code",[s._v("undefined")]),s._v("。")]),s._v(" "),a("p",[s._v("这输出的结果和其他大部分支持块级作用域的语言都不一样，比如上面"),a("code",[s._v("C")]),s._v("语言输出的就是全局变量，所以这会很容易造成误解，特别是在你会一些其他语言的基础之上，再来学习"),a("code",[s._v("JavaScript")]),s._v("，你会觉得这种结果很不自然。")]),s._v(" "),a("h3",{attrs:{id:"_2-本应销毁的变量没有被销毁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-本应销毁的变量没有被销毁"}},[s._v("#")]),s._v(" 2. 本应销毁的变量没有被销毁")]),s._v(" "),a("p",[s._v("接下来我们再来看下面这段让人误解更大的代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("如果你使用"),a("code",[s._v("C")]),s._v("语言或者其他的大部分语言实现类似代码，在"),a("code",[s._v("for")]),s._v("循环结束之后，i就已经被销毁了，但是在"),a("code",[s._v("JavaScript")]),s._v("代码中，i的值并未被销毁，所以最后打印出来的是"),a("code",[s._v("7")]),s._v("。")]),s._v(" "),a("p",[s._v("这同样也是由变量提升而导致的，在创建执行上下文阶段，变量"),a("code",[s._v("i")]),s._v("就已经被提升了，所以当"),a("code",[s._v("for")]),s._v("循环结束之后，变量"),a("code",[s._v("i")]),s._v("并没有被销毁。")]),s._v(" "),a("blockquote",[a("p",[s._v("原来如此，没有块级作用域也就没有执行上下文，所以里面创建的变量在调用结束后不会进行销毁，比如"),a("code",[s._v("for")]),s._v("循环，"),a("code",[s._v("while")]),s._v("循环等；")])]),s._v(" "),a("p",[s._v("这依旧和其他支持块级作用域的语言表现是不一致的，所以必然会给一些人造成误解。")]),s._v(" "),a("h2",{attrs:{id:"es6是如何解决变量提升带来的缺陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6是如何解决变量提升带来的缺陷"}},[s._v("#")]),s._v(" "),a("code",[s._v("ES6")]),s._v("是如何解决变量提升带来的缺陷")]),s._v(" "),a("p",[s._v("上面我们介绍了变量提升而带来的一系列问题，为了解决这些问题，"),a("code",[s._v("ES6")]),s._v("引入了"),a("code",[s._v("let")]),s._v("和"),a("code",[s._v("const")]),s._v("关键字，从而使"),a("code",[s._v("JavaScript")]),s._v("也能像其他语言一样拥有了块级作用域。")]),s._v(" "),a("p",[s._v("关于"),a("code",[s._v("let")]),s._v("和"),a("code",[s._v("const")]),s._v("的用法，你可以参考下面代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//报错，const声明的变量不可以修改")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("从这段代码你可以看出来，两者之间的区别是，使用"),a("code",[s._v("let")]),s._v("关键字声明的变量是可以被改变的，而使用"),a("code",[s._v("const")]),s._v("声明的变量其值是不可以被改变的。但不管怎样，两者都可以"),a("strong",[s._v("生成块级作用域")]),s._v("，为了简单起见，在下面的代码中，我统一使用"),a("code",[s._v("let")]),s._v("关键字来演示。")]),s._v(" "),a("p",[s._v("那么接下来，我们就通过实际的例子来分析下，"),a("code",[s._v("ES6")]),s._v("是如何通过块级作用域来解决上面的问题的？")]),s._v(" "),a("p",[s._v("你可以先参考下面这段存在变量提升的代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("varTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同样的变量!")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("在这段代码中，有两个地方都定义了变量"),a("code",[s._v("x")]),s._v("，第一个地方在函数块的顶部，第二个地方在"),a("code",[s._v("if")]),s._v("块的内部，由于"),a("code",[s._v("var")]),s._v("的作用范围是整个函数，所以在编译阶段，会生成如下的执行上下文：")]),s._v(" "),a("blockquote",[a("p",[s._v("即由于没有块级作用域，所以"),a("code",[s._v("if")]),s._v("的"),a("code",[s._v("{}")]),s._v("内的"),a("code",[s._v("x")]),s._v("变量会在"),a("code",[s._v("varTest")]),s._v("的函数执行上下文中进行变量提升：即：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var x = undefined\nvar x = undefined\nx = 1\nx = 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("所以"),a("code",[s._v("x")]),s._v("的值被改变为了"),a("code",[s._v("2")]),s._v("。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls9/2.png",alt:""}})]),s._v(" "),a("p",[s._v("从执行上下文的变量环境中可以看出，最终只生成了一个变量"),a("code",[s._v("x")]),s._v("，函数体内所有对"),a("code",[s._v("x")]),s._v("的赋值操作都会直接改变"),a("strong",[s._v("变量环境")]),s._v("中的"),a("code",[s._v("x")]),s._v("值。")]),s._v(" "),a("p",[s._v("所以上述代码最后通过"),a("code",[s._v("console.log(x)")]),s._v("输出的是"),a("code",[s._v("2")]),s._v("，而对于相同逻辑的代码，其他语言最后一步输出的值应该是"),a("code",[s._v("1")]),s._v("，因为在"),a("code",[s._v("if")]),s._v("块里面的声明不应该影响到块外面的变量。")]),s._v(" "),a("p",[s._v("既然支持块级作用域和不支持块级作用域的代码执行逻辑是不一样的，那么接下来我们就来改造上面的代码，让其支持块级作用域。")]),s._v(" "),a("p",[s._v("这个改造过程其实很简单，只需要把"),a("code",[s._v("var")]),s._v("关键字替换为"),a("code",[s._v("let")]),s._v("关键字，改造后的代码如下")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("letTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不同的变量")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("执行这段代码，其输出结果就和我们的预期是一致的。这是因为"),a("code",[s._v("let")]),s._v("关键字是"),a("strong",[s._v("支持块级作用域")]),s._v("的，所以在编译阶段，"),a("code",[s._v("JavaScript")]),s._v("引擎并不会把"),a("code",[s._v("if")]),s._v("块中通过"),a("code",[s._v("let")]),s._v("声明的变量存放到变量环境中，这也就意味着在"),a("code",[s._v("if")]),s._v("块通过"),a("code",[s._v("let")]),s._v("声明的关键字，并不会提升到全函数可见。所以在"),a("code",[s._v("if")]),s._v("块之内打印出来的值是"),a("code",[s._v("2")]),s._v("，跳出语块之后，打印出来的值就是"),a("code",[s._v("1")]),s._v("了。这种就非常符合我们的编程习惯了："),a("strong",[s._v("作用块内声明的变量不影响块外面的变量")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("let")]),s._v("和"),a("code",[s._v("const")]),s._v("不会进行变量提升；而是通过一个词法环境的一个调用栈结构来进行管理，使用完之后会被弹出栈并销毁，所以不会影响其他作用域中的变量；")])]),s._v(" "),a("h2",{attrs:{id:"javascript是如何支持块级作用域的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript是如何支持块级作用域的"}},[s._v("#")]),s._v(" "),a("code",[s._v("JavaScript")]),s._v("是如何支持块级作用域的")]),s._v(" "),a("p",[s._v("现在你知道了"),a("code",[s._v("ES")]),s._v("可以通过使用"),a("code",[s._v("let")]),s._v("或者"),a("code",[s._v("const")]),s._v("关键字来实现"),a("strong",[s._v("块级作用域")]),s._v("，不过你是否有过这样的疑问：“在同一段代码中，"),a("code",[s._v("ES6")]),s._v("是如何做到既要"),a("strong",[s._v("支持变量提升的特性")]),s._v("，又要支持块级作用域的呢？”")]),s._v(" "),a("p",[s._v("那么接下来，我们就要"),a("strong",[s._v("站在执行上下文的角度来揭开答案")]),s._v("。")]),s._v(" "),a("p",[s._v("你已经知道"),a("code",[s._v("JavaScript")]),s._v("引擎是通过变量环境实现函数级作用域的，那么"),a("code",[s._v("ES6")]),s._v("又是如何在函数级作用域的基础之上，实现对块级作用域的支持呢？你可以先看下面这段代码")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 变量没有进行定义")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("当执行上面这段代码的时候，"),a("code",[s._v("JavaScript")]),s._v("引擎会先对其进行编译并创建执行上下文，然后再按照顺序执行代码，关于如何创建执行上下文我们在前面的文章中已经分析过了，但是现在的情况有点不一样，我们引入了"),a("code",[s._v("let")]),s._v("关键字，"),a("code",[s._v("let")]),s._v("关键字会"),a("strong",[s._v("创建块级作用域")]),s._v("，那么"),a("code",[s._v("let")]),s._v("关键字是如何影响执行上下文的呢？")]),s._v(" "),a("p",[s._v("接下来我们就来一步步分析上面这段代码的执行流程。")]),s._v(" "),a("p",[a("strong",[s._v("第一步是编译并创建执行上下文")]),s._v("，下面是我画出来的执行上下文示意图，你可以参考下")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls9/3.png",alt:""}})]),s._v(" "),a("p",[s._v("通过上图，我们可以得出以下结论：")]),s._v(" "),a("ul",[a("li",[s._v("函数内部通过"),a("code",[s._v("var")]),s._v("声明的变量，在编译阶段全都被存放到"),a("strong",[s._v("变量环境")]),s._v("里面了。")]),s._v(" "),a("li",[s._v("通过"),a("code",[s._v("let")]),s._v("声明的变量，在编译阶段会被存放到"),a("strong",[s._v("词法环境")]),s._v("（"),a("code",[s._v("Lexical Environment")]),s._v("）中。")]),s._v(" "),a("li",[s._v("在函数的作用域内部，通过"),a("code",[s._v("let")]),s._v("声明的变量"),a("strong",[s._v("并没有被存放到词法环境")]),s._v("中。")]),s._v(" "),a("li",[s._v("接下来，第二步继续执行代码，当执行到代码块里面时，变量环境中"),a("code",[s._v("a")]),s._v("的值已经被设置成了"),a("code",[s._v("1")]),s._v("，词法环境中"),a("code",[s._v("b")]),s._v("的值已经被设置成了"),a("code",[s._v("2")]),s._v("，")])]),s._v(" "),a("p",[s._v("这时候函数的执行上下文就如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls9/4.png",alt:""}})]),s._v(" "),a("p",[s._v("从图中可以看出，当进入函数的作用域块时，作用域块中通过"),a("code",[s._v("let")]),s._v("声明的变量，会被存放在"),a("strong",[s._v("词法环境")]),s._v("的一个单独的区域中，这个区域中的变量并不影响作用域块外面的变量，比如在作用域外面声明了变量"),a("code",[s._v("b")]),s._v("，在该作用域块内部也声明了变量"),a("code",[s._v("b")]),s._v("，当执行到作用域内部时，它们都是"),a("strong",[s._v("独立的存在")]),s._v("。")]),s._v(" "),a("p",[s._v("其实，在词法环境内部，维护了"),a("strong",[s._v("一个小型栈结构")]),s._v("，栈底是函数最外层的变量，进入一个作用域块后，就会把该作用域块内部的变量压到栈顶；当作用域执行完成之后，该作用域的信息就会从栈顶弹出，这就是词法环境的结构。需要注意下，我这里所讲的变量是指通过"),a("code",[s._v("let")]),s._v("或者"),a("code",[s._v("const")]),s._v("声明的变量。")]),s._v(" "),a("p",[s._v("再接下来，当执行到作用域块中的"),a("code",[s._v("console.log(a)")]),s._v("这行代码时，就需要在"),a("strong",[s._v("词法环境")]),s._v("和"),a("strong",[s._v("变量环境")]),s._v("中查找变量"),a("code",[s._v("a")]),s._v("的值了，具体查找方式是："),a("strong",[s._v("先沿着词法环境")]),s._v("的栈顶向下查询，如果在词法环境中的某个块中查找到了，就直接返回给"),a("code",[s._v("JavaScript")]),s._v("引擎，如果没有查找到，那么继续"),a("strong",[s._v("在变量环境")]),s._v("中查找。")]),s._v(" "),a("p",[s._v("这样一个变量查找过程就完成了，你可以参考下图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls9/5.png",alt:""}})]),s._v(" "),a("blockquote",[a("p",[s._v("重点记住这个执行顺序：首先所有"),a("code",[s._v("var")]),s._v("定义的变量都放在"),a("strong",[s._v("变量环境")]),s._v("中，所有"),a("code",[s._v("let")]),s._v("定义的变量都放在"),a("strong",[s._v("词法环境")]),s._v("中；并且根据它们所在作用域（执行上下文）的不同，"),a("strong",[s._v("排放的顺序")]),s._v("不同；")]),s._v(" "),a("ul",[a("li",[s._v("当前块级作用域中用"),a("code",[s._v("let")]),s._v("定义的变量排在栈顶，当前块级作用域往外一层的"),a("code",[s._v("let")]),s._v("定义的变量紧跟其后，同一作用域内的按从下往上的顺序排，以此类推，将所有作用域内的用"),a("code",[s._v("let")]),s._v("定义的变量都按顺序地排放在词法环境中；")]),s._v(" "),a("li",[s._v("在变量环境中，由于变量提升，所以在外面作用域用"),a("code",[s._v("var")]),s._v("定义的变量放在栈顶，内部的块级作用域中的用"),a("code",[s._v("var")]),s._v("定义的变量紧随其后；")])]),s._v(" "),a("p",[s._v("**查找顺序：**如图中箭头所示；可以看到与词法环境排放顺序相同，与变量环境排放顺序相反；")])]),s._v(" "),a("p",[s._v("从上图你可以清晰地看出变量查找流程，不过要完整理解查找变量或者查找函数的流程，就涉及到作用域链了，这个我们会在下篇文章中做详细介绍。")]),s._v(" "),a("p",[s._v("当作用域块执行结束之后，其"),a("strong",[s._v("内部定义")]),s._v("的"),a("strong",[s._v("变量")]),s._v("就会从"),a("strong",[s._v("词法环境的栈顶弹出")]),s._v("，（"),a("strong",[s._v("弹出后被销毁")]),s._v("）最终执行上下文如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part2/ls9/6.png",alt:""}})]),s._v(" "),a("p",[s._v("通过上面的分析，想必你已经理解了词法环境的结构和工作机制，"),a("strong",[s._v("块级作用域")]),s._v("就是通过"),a("strong",[s._v("词法环境的栈结构(也会弹出"),a("code",[s._v("let")]),s._v("和"),a("code",[s._v("const")]),s._v("定义的变量并销毁)"),a("strong",[s._v("来实现的，而")]),s._v("变量提升")]),s._v("是通过"),a("strong",[s._v("变量环境")]),s._v("来实现，通过这两者的结合，"),a("code",[s._v("JavaScript")]),s._v("引擎也就同时支持了"),a("strong",[s._v("变量提升")]),s._v("和"),a("strong",[s._v("块级作用域")]),s._v("了。")]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("好了，今天的内容就讲到这里，下面我来简单总结下今天的内容。")]),s._v(" "),a("p",[s._v("由于"),a("code",[s._v("JavaScript")]),s._v("的变量提升存在着"),a("strong",[s._v("变量覆盖")]),s._v("、"),a("strong",[s._v("变量污染")]),s._v("等设计缺陷，所以"),a("code",[s._v("ES6")]),s._v("引入了"),a("strong",[s._v("块级作用域关键字")]),s._v("来解决这些问题。")]),s._v(" "),a("p",[s._v("之后我们还通过对"),a("strong",[s._v("变量环境")]),s._v("和"),a("strong",[s._v("词法环境")]),s._v("的介绍，分析了"),a("code",[s._v("JavaScript")]),s._v("引擎是如何同时"),a("strong",[s._v("支持变量提升")]),s._v("和"),a("strong",[s._v("块级作用域")]),s._v("的。")]),s._v(" "),a("p",[s._v("既然聊到了作用域，那最后我们再简单聊下编程语言吧。经常有人争论什么编程语言是世界上最好的语言，但如果站在语言本身来说，我觉得这种争论没有意义，因为语言是工具，而工具是用来创造价值的，至于能否创造价值或创造多大价值不完全由语言本身的特性决定。这么说吧，即便一门设计不那么好的语言，它也可能拥有非常好的生态，比如有完善的框架、非常多的落地应用，又或者能够给开发者带来更多的回报，这些都是评判因素。")]),s._v(" "),a("p",[s._v("如果站在语言层面来谈，每种语言其实都是在相互借鉴对方的优势，协同进化，比如"),a("code",[s._v("JavaScript")]),s._v("引进了作用域、迭代器和协程，其底层虚拟机的实现和"),a("code",[s._v("Java")]),s._v("、"),a("code",[s._v("Python")]),s._v("又是非常相似，也就是说如果你理解了"),a("code",[s._v("JavaScript")]),s._v("协程和"),a("code",[s._v("JavaScript")]),s._v("中的虚拟机，其实你也就理解了"),a("code",[s._v("Java")]),s._v("、"),a("code",[s._v("Python")]),s._v("中的协程和虚拟机的实现机制。")]),s._v(" "),a("p",[s._v("所以说，语言本身好坏不重要，重要的是能为开发者创造价值。")]),s._v(" "),a("h2",{attrs:{id:"思考时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考时间"}},[s._v("#")]),s._v(" 思考时间")]),s._v(" "),a("p",[s._v("下面给你留个思考题，看下面这样一段代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" myname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'极客时间'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" myname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'极客邦'")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//语句3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("你能通过分析词法环境，得出来最终的打印结果吗？")]),s._v(" "),a("p",[s._v("分析")]),s._v(" "),a("ol",[a("li",[s._v("在块级作用域中，从"),a("code",[s._v("开始到let myname= '极客邦'")]),s._v("代码之间会形成一个暂时性死区，如果中间去访问变量"),a("code",[s._v("myname")]),s._v("，会报初始化之前不能访问"),a("code",[s._v("myname")]),s._v("的错误。"),a("code",[s._v("Uncaught ReferenceError")])])]),s._v(" "),a("blockquote",[a("p",[s._v("这就验证了："),a("code",[s._v("let")]),s._v("不存在变量提升；")]),s._v(" "),a("ul",[a("li",[s._v("**情况一：**如果将语句"),a("code",[s._v("3")]),s._v("去掉，"),a("code",[s._v("{}")]),s._v("就失去了块级作用域的效果，所以"),a("code",[s._v("{}")]),s._v("形同虚设，输入"),a("code",[s._v("极客时间")]),s._v("；")]),s._v(" "),a("li",[s._v("**情况二：**如果将语句"),a("code",[s._v("3")]),s._v("提高"),a("code",[s._v("console.log(myname)")]),s._v("前，由于"),a("code",[s._v("let")]),s._v("的关系"),a("code",[s._v("{}")]),s._v("拥有了块级作用域的效果，输入"),a("code",[s._v("极客邦")]),s._v("；")])])]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("另外下面的一个"),a("code",[s._v("foo")]),s._v("函数也会报"),a("code",[s._v("d")]),s._v("没有定义，"),a("code",[s._v("d")]),s._v("在"),a("strong",[s._v("块级作用域")]),s._v("中声明，在外面是访问不到的")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//没有定义")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);