(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{478:function(_,v,e){"use strict";e.r(v);var t=e(27),a=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"_03-http请求流程：为什么很多站点第二次打开速度会很快"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_03-http请求流程：为什么很多站点第二次打开速度会很快"}},[_._v("#")]),_._v(" 03.HTTP请求流程：为什么很多站点第二次打开速度会很快")]),_._v(" "),e("p",[_._v("一个"),e("code",[_._v("TCP")]),_._v("连接过程包括了建立连接、传输数据和断开连接三个阶段。")]),_._v(" "),e("p",[_._v("而"),e("code",[_._v("HTTP")]),_._v("协议，正是建立在"),e("code",[_._v("TCP")]),_._v("连接基础之上的。"),e("code",[_._v("HTTP")]),_._v("是一种允许浏览器向服务器获取资源的协议，是"),e("code",[_._v("Web")]),_._v("的基础，通常由浏览器发起请求，用来获取不同类型的文件，例如"),e("code",[_._v("HTML")]),_._v("文件、"),e("code",[_._v("CSS")]),_._v("文件、"),e("code",[_._v("JavaScript")]),_._v("文件、图片、视频等。此外，"),e("code",[_._v("HTTP")]),_._v("也是浏览器使用最广的协议，所以要想学好浏览器，就要先深入了解"),e("code",[_._v("HTTP")]),_._v("。")]),_._v(" "),e("p",[_._v("不知道你是否有过下面这些疑问：")]),_._v(" "),e("ol",[e("li",[_._v("为什么通常在第一次访问一个站点时，打开速度很慢，当再次访问这个站点时，速度就很快了？")]),_._v(" "),e("li",[_._v("当登录过一个网站之后，下次再访问该站点，就已经处于登录状态了，这是怎么做到的呢？")])]),_._v(" "),e("p",[_._v("这一切的秘密都隐藏在"),e("code",[_._v("HTTP")]),_._v("的请求过程中。所以，在今天这篇文章中，我将通过分析一个"),e("code",[_._v("HTTP")]),_._v("请求过程中每一步的状态来带你了解完整的"),e("code",[_._v("HTTP")]),_._v("请求过程，希望你看完这篇文章后，能够对"),e("code",[_._v("HTTP")]),_._v("协议有个全新的认识")]),_._v(" "),e("h2",{attrs:{id:"浏览器端发起http请求流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器端发起http请求流程"}},[_._v("#")]),_._v(" 浏览器端发起"),e("code",[_._v("HTTP")]),_._v("请求流程")]),_._v(" "),e("p",[_._v("如果你在浏览器地址栏里键入地址：http://baidu.com， 那么接下来，浏览器会完成哪些动作呢？下面我们就一步一步详细“追踪”下")]),_._v(" "),e("h3",{attrs:{id:"_1-构建请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-构建请求"}},[_._v("#")]),_._v(" 1. 构建请求")]),_._v(" "),e("p",[_._v("首先，浏览器构建请求行信息（如下所示），构建好后，浏览器准备发起网络请求")]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("GET /index.html HTTP1.1\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("h3",{attrs:{id:"_2-查找缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-查找缓存"}},[_._v("#")]),_._v(" 2. 查找缓存")]),_._v(" "),e("p",[_._v("在真正发起网络请求之前，浏览器会先在"),e("strong",[_._v("浏览器缓存")]),_._v("中查询是否有要请求的文件。其中，浏览器缓存是一种在本地保存资源副本，以供下次请求时直接使用的技术。")]),_._v(" "),e("p",[_._v("当浏览器发现请求的资源已经在浏览器缓存中存有副本，它会拦截请求，返回该资源的副本，并直接结束请求，而不会再去源服务器重新下载。这样做的好处有：")]),_._v(" "),e("ul",[e("li",[e("p",[_._v("缓解服务器端压力，提升性能（获取资源的耗时更短了）；")])]),_._v(" "),e("li",[e("p",[_._v("对于网站来说，缓存是实现快速资源加载的重要组成部分。")]),_._v(" "),e("p",[_._v("当然，如果缓存查找失败，就会进入网络请求过程了。")])])]),_._v(" "),e("h3",{attrs:{id:"_3-准备ip地址和端口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-准备ip地址和端口"}},[_._v("#")]),_._v(" 3. 准备"),e("code",[_._v("IP")]),_._v("地址和端口")]),_._v(" "),e("p",[_._v("不过，先不急，在了解网络请求之前，我们需要先看看"),e("code",[_._v("HTTP")]),_._v("和"),e("code",[_._v("TCP")]),_._v("的关系。因为浏览器使用"),e("code",[_._v("HTTP")]),_._v("协议作为"),e("strong",[_._v("应用层协议")]),_._v("，用来封装请求的文本信息；并使用"),e("code",[_._v("TCP/IP")]),_._v("作"),e("strong",[_._v("传输层协议")]),_._v("将它发到网络上，所以在"),e("code",[_._v("HTTP")]),_._v("工作开始之前，浏览器需要通过"),e("code",[_._v("TCP")]),_._v("与服务器建立连接。也就是说"),e("code",[_._v("HTTP")]),_._v("的内容是通过"),e("code",[_._v("TCP")]),_._v("的传输数据 阶段来实现的，你可以结合下图更好地理解这二者的关系。")]),_._v(" "),e("p",[e("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part1/ls3/1.png",alt:""}})]),_._v(" "),e("p",[_._v("那接下来你可以思考这么“一连串”问题：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("HTTP")]),_._v("网络请求的第一步是做什么呢？结合上图看，是和服务器建立"),e("code",[_._v("TCP")]),_._v("连接。")]),_._v(" "),e("li",[_._v("那建立连接的信息都有了吗？上一篇文章中，我们讲到建立"),e("code",[_._v("TCP")]),_._v("连接的第一步就是需要准备"),e("code",[_._v("IP")]),_._v("地址和端口号。")]),_._v(" "),e("li",[_._v("那怎么获取"),e("code",[_._v("IP")]),_._v("地址和端口号呢？这得看看我们现在有什么，我们有一个"),e("code",[_._v("URL")]),_._v("地址，那么是否可以利用"),e("code",[_._v("URL")]),_._v("地址来获取"),e("code",[_._v("IP")]),_._v("和端口信息呢？")])]),_._v(" "),e("p",[_._v("在上一篇文章中，我们介绍过数据包都是通过"),e("code",[_._v("IP")]),_._v("地址传输给接收方的。由于"),e("code",[_._v("IP")]),_._v("地址是数字标识，比如极客时间网站的"),e("code",[_._v("IP")]),_._v("是"),e("code",[_._v("39.106.233.176")]),_._v(", 难以记忆，但使用极客时间的域名（"),e("code",[_._v("time.geekbang.org")]),_._v("）就好记多了，所以基于这个需求又出现了一个服务，负责把域名和"),e("code",[_._v("IP")]),_._v("地址做一一映射关系。这套域名映射为"),e("code",[_._v("IP")]),_._v("的系统就叫做“域名系统”，简称"),e("code",[_._v("DNS")]),_._v("（"),e("code",[_._v("Domain Name System")]),_._v("）。")]),_._v(" "),e("p",[_._v("所以，这样一路推导下来，你会发现在第一步浏览器会请求"),e("code",[_._v("DNS")]),_._v("返回域名对应的"),e("code",[_._v("IP")]),_._v("。当然浏览器还提供了"),e("code",[_._v("DNS")]),_._v("数据缓存服务，如果某个域名已经解析过了，那么浏览器会缓存解析的结果，以供下次查询时直接使用，这样也会减少一次网络请求")]),_._v(" "),e("p",[_._v("拿到"),e("code",[_._v("IP")]),_._v("之后，接下来就需要获取端口号了。通常情况下，如果"),e("code",[_._v("URL")]),_._v("没有特别指明端口号，那么"),e("code",[_._v("HTTP")]),_._v("协议默认是"),e("code",[_._v("80")]),_._v("端口。")]),_._v(" "),e("h3",{attrs:{id:"_4-等待tcp队列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-等待tcp队列"}},[_._v("#")]),_._v(" 4. 等待"),e("code",[_._v("TCP")]),_._v("队列")]),_._v(" "),e("p",[_._v("现在已经把端口和"),e("code",[_._v("IP")]),_._v("地址都准备好了，那么下一步是不是可以建立"),e("code",[_._v("TCP")]),_._v("连接了呢？")]),_._v(" "),e("p",[_._v("答案依然是“不行”。"),e("code",[_._v("Chrome")]),_._v("有个机制，同一个域名同时最多只能建立"),e("code",[_._v("6")]),_._v("个"),e("code",[_._v("TCP")]),_._v("连接，如果在同一个域名下同时有"),e("code",[_._v("10")]),_._v("个请求发生，那么其中"),e("code",[_._v("4")]),_._v("个请求会进入排队等待状态，直至进行中的请求完成。")]),_._v(" "),e("p",[_._v("当然，如果当前请求数量少于"),e("code",[_._v("6")]),_._v("，会直接进入下一步，建立"),e("code",[_._v("TCP")]),_._v("连接。")]),_._v(" "),e("h3",{attrs:{id:"_5-建立tcp连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-建立tcp连接"}},[_._v("#")]),_._v(" 5. 建立"),e("code",[_._v("TCP")]),_._v("连接")]),_._v(" "),e("p",[_._v("排队等待结束之后，终于可以快乐地和服务器握手了，在"),e("code",[_._v("HTTP")]),_._v("工作开始之前，浏览器通过"),e("code",[_._v("TCP")]),_._v("与服务器建立连接。而"),e("code",[_._v("TCP")]),_._v("的工作方式，我在上一篇文章中已经做过详细介绍了，如果有必要，你可以自行回顾下，这里我就不再重复讲述了。")]),_._v(" "),e("h3",{attrs:{id:"_6-发送http请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-发送http请求"}},[_._v("#")]),_._v(" 6. 发送"),e("code",[_._v("HTTP")]),_._v("请求")]),_._v(" "),e("p",[_._v("一旦建立了"),e("code",[_._v("TCP")]),_._v("连接，浏览器就可以和服务器进行通信了。而"),e("code",[_._v("HTTP")]),_._v("中的数据正是在这个通信过程中传输的。")]),_._v(" "),e("p",[_._v("你可以结合下图来理解，浏览器是如何发送请求信息给服务器的。")]),_._v(" "),e("p",[e("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part1/ls3/2.png",alt:""}})]),_._v(" "),e("p",[_._v("首先浏览器会向服务器发送请求行，它包括了请求方法、请求"),e("code",[_._v("URI")]),_._v("（"),e("code",[_._v("Uniform Resource Identifier")]),_._v("）和"),e("code",[_._v("HTTP")]),_._v("版本协议。")]),_._v(" "),e("p",[_._v("发送请求行，就是告诉服务器浏览器需要什么资源，最常用的请求方法是"),e("code",[_._v("Get")]),_._v("。比如，直接在浏览器地址栏键入极客时间的域名（"),e("code",[_._v("time.geekbang.org")]),_._v("），这就是告诉服务器要"),e("code",[_._v("Get")]),_._v("它的首页资源。")]),_._v(" "),e("p",[_._v("另外一个常用的请求方法是"),e("code",[_._v("POST")]),_._v("，它用于发送一些数据给服务器，比如登录一个网站，就需要通过"),e("code",[_._v("POST")]),_._v("方法把用户信息发送给服务器。如果使用"),e("code",[_._v("POST")]),_._v("方法，那么浏览器还要准备数据给服务器，这里准备的数据是通过请求体来发送。")]),_._v(" "),e("p",[_._v("在浏览器发送请求行命令之后，还要以请求头形式发送其他一些信息，把浏览器的一些基础信息告诉服务器。比如包含了浏览器所使用的操作系统、浏览器内核等信息，以及当前请求的域名信息、浏览器端的"),e("code",[_._v("Cookie")]),_._v("信息，等等")]),_._v(" "),e("h2",{attrs:{id:"服务器端处理http请求流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器端处理http请求流程"}},[_._v("#")]),_._v(" 服务器端处理"),e("code",[_._v("HTTP")]),_._v("请求流程")]),_._v(" "),e("p",[_._v("历经千辛万苦，"),e("code",[_._v("HTTP")]),_._v("的请求信息终于被送达了服务器。接下来，服务器会根据浏览器的请求信息来准备相应的内容")]),_._v(" "),e("h3",{attrs:{id:"_1-返回请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-返回请求"}},[_._v("#")]),_._v(" 1. 返回请求")]),_._v(" "),e("p",[_._v("一旦服务器处理结束，便可以返回数据给浏览器了。你可以通过工具软件"),e("code",[_._v("curl")]),_._v("来查看返回请求数据，具体使用方法是在命令行中输入以下命令：")]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("curl -i  https://time.geekbang.org/\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("p",[_._v("注意这里加上了"),e("code",[_._v("-i")]),_._v("是为了返回响应行、响应头和响应体的数据，返回的结果如下图所示，你可以结合这些数据来理解服务器是如何响应浏览器的。")]),_._v(" "),e("p",[e("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part1/ls3/3.png",alt:""}})]),_._v(" "),e("p",[_._v("首先服务器会返回响应行，包括协议版本和状态码。")]),_._v(" "),e("p",[_._v("但并不是所有的请求都可以被服务器处理的，那么一些无法处理或者处理出错的信息，怎么办呢？服务器会通过请求行的状态码来告诉浏览器它的处理结果，比如：")]),_._v(" "),e("ul",[e("li",[_._v("最常用的状态码是"),e("code",[_._v("200")]),_._v("，表示处理成功；")]),_._v(" "),e("li",[_._v("如果没有找到页面，则会返回"),e("code",[_._v("404-")])])]),_._v(" "),e("p",[_._v("状态码类型很多，这里我就不过多介绍了，网上有很多资料，你可以自行查询和学习。")]),_._v(" "),e("p",[_._v("随后，正如浏览器会随同请求发送请求头一样，服务器也会随同响应向浏览器发送响应头。响应头包含了服务器自身的一些信息，比如服务器生成返回数据的时间、返回的数据类型（"),e("code",[_._v("JSON")]),_._v("、"),e("code",[_._v("HTML")]),_._v("、流媒体等类型），以及服务器要在客户端保存的"),e("code",[_._v("Cookie")]),_._v("等信息。")]),_._v(" "),e("p",[_._v("发送完响应头后，服务器就可以继续发送响应体的数据，通常，响应体就包含了"),e("code",[_._v("HTML")]),_._v("的实际内容。")]),_._v(" "),e("p",[_._v("以上这些就是服务器响应浏览器的具体过程")]),_._v(" "),e("h3",{attrs:{id:"_2-断开连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-断开连接"}},[_._v("#")]),_._v(" 2. 断开连接")]),_._v(" "),e("p",[_._v("通常情况下，一旦服务器向客户端返回了请求数据，它就要关闭 "),e("code",[_._v("TCP")]),_._v(" 连接。不过如果浏览器或者服务器在其头信息中加入了：")]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("Connection:Keep-Alive \n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("p",[_._v("那么"),e("code",[_._v("TCP")]),_._v("连接在发送后将仍然保持打开状态，这样浏览器就可以继续通过同一个"),e("code",[_._v("TCP")]),_._v("连接发送请求。保持"),e("code",[_._v("TCP")]),_._v("连接可以省去下次请求时需要建立连接的时间，提升资源加载速度。比如，一个"),e("code",[_._v("Web")]),_._v("页面中内嵌的图片就都来自同一个"),e("code",[_._v("Web")]),_._v("站点，如果初始化了一个持久连接，你就可以复用该连接，以请求其他资源，而不需要重新再建立新的"),e("code",[_._v("TCP")]),_._v("连接。")]),_._v(" "),e("h3",{attrs:{id:"_3-重定向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-重定向"}},[_._v("#")]),_._v(" 3. 重定向")]),_._v(" "),e("p",[_._v("到这里似乎请求流程快结束了，不过还有一种情况你需要了解下，比如当你在浏览器中打开"),e("code",[_._v("geekbang.org")]),_._v("后，你会发现最终打开的页面地址是 https://www.geekbang.org。")]),_._v(" "),e("p",[_._v("这两个"),e("code",[_._v("URL")]),_._v("之所以不一样，是因为涉及到了一个重定向操作。跟前面一样，你依然可以使用"),e("code",[_._v("curl")]),_._v("来查看下请求"),e("code",[_._v("geekbang.org")]),_._v(" 会返回什么内容？")]),_._v(" "),e("p",[_._v("在控制台输入如下命令：")]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("curl -I geekbang.org\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("p",[_._v("注意这里输入的参数是"),e("code",[_._v("-I")]),_._v("，和"),e("code",[_._v("-i")]),_._v("不一样，"),e("code",[_._v("-I")]),_._v("表示只需要获取响应头和响应行数据，而不需要获取响应体的数据，最终返回的数据如下图所示：")]),_._v(" "),e("p",[e("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part1/ls3/4.png",alt:""}})]),_._v(" "),e("p",[_._v("从图中你可以看到，响应行返回的状态码是"),e("code",[_._v("301")]),_._v("，状态"),e("code",[_._v("301")]),_._v("就是告诉浏览器，我需要重定向到另外一个网址，而需要重定向的网址正是包含在响应头的"),e("code",[_._v("Location")]),_._v("字段中，接下来，浏览器获取"),e("code",[_._v("Location")]),_._v("字段中的地址，并使用该地址重新导航，这就是一个完整重定向的执行流程。这也就解释了为什么输入的是 "),e("code",[_._v("geekbang.org")]),_._v("，最终打开的却是 https://www.geekbang.org 了。")]),_._v(" "),e("p",[_._v("不过也不要认为这种跳转是必然的。如果你打开 https://12306.cn，你会发现这个站点是打不开的。这是因为"),e("code",[_._v("12306")]),_._v("的服务器并没有处理跳转，所以必须要手动输入完整的 https://www.12306.com 才能打开页面。")]),_._v(" "),e("h2",{attrs:{id:"问题解答"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题解答"}},[_._v("#")]),_._v(" 问题解答")]),_._v(" "),e("p",[_._v("说了这么多，相信你现在已经了解了"),e("code",[_._v("HTTP")]),_._v("的请求流程，那现在我们再回过头来看看文章开头提出的问题。")]),_._v(" "),e("h3",{attrs:{id:"_1-为什么很多站点第二次打开速度会很快？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么很多站点第二次打开速度会很快？"}},[_._v("#")]),_._v(" 1. 为什么很多站点第二次打开速度会很快？")]),_._v(" "),e("p",[_._v("如果第二次页面打开很快，主要原因是第一次加载页面过程中，缓存了一些耗时的数据。")]),_._v(" "),e("p",[_._v("那么，哪些数据会被缓存呢？从上面介绍的核心请求路径可以发现，"),e("code",[_._v("DNS")]),_._v("缓存和页面资源缓存这两块数据是会被浏览器缓存的。其中，"),e("code",[_._v("DNS")]),_._v("缓存比较简单，它主要就是在浏览器本地把对应的"),e("code",[_._v("IP")]),_._v("和域名关联起来，这里就不做过多分析了。")]),_._v(" "),e("p",[_._v("我们重点看下浏览器资源缓存，下面是缓存处理的过程：")]),_._v(" "),e("p",[e("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part1/ls3/5.png",alt:""}})]),_._v(" "),e("p",[_._v("首先，我们看下服务器是通过什么方式让浏览器缓存数据的？")]),_._v(" "),e("p",[_._v("从上图的第一次请求可以看出，当服务器返回"),e("code",[_._v("HTTP")]),_._v("响应头给浏览器时，浏览器是通过响应头中的"),e("code",[_._v("Cache-Control")]),_._v("字段来设置是否缓存该资源。通常，我们还需要为这个资源设置一个缓存过期时长，而这个时长是通过"),e("code",[_._v("Cache-Control")]),_._v("中的"),e("code",[_._v("Max-age")]),_._v("参数来设置的，比如上图设置的缓存过期时间是"),e("code",[_._v("2000")]),_._v("秒。")]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("Cache-Control:Max-age=2000\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("p",[_._v("这也就意味着，在该缓存资源还未过期的情况下, 如果再次请求该资源，会直接返回缓存中的资源给浏览器。")]),_._v(" "),e("p",[_._v("但如果缓存过期了，浏览器则会继续发起网络请求，并且在"),e("code",[_._v("HTTP")]),_._v("请求头中带上：")]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v('If-None-Match:"4f80f-13c-3a1xb12a"\n')])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("p",[_._v("服务器收到请求头后，会根据"),e("code",[_._v("If-None-Match")]),_._v("的值来判断请求的资源是否有更新。")]),_._v(" "),e("ul",[e("li",[_._v("如果没有更新，就返回"),e("code",[_._v("304")]),_._v("状态码，相当于服务器告诉浏览器：“这个缓存可以继续使用，这次就不重复发送数据给你了。”")]),_._v(" "),e("li",[_._v("如果资源有更新，服务器就直接返回最新资源给浏览器。")])]),_._v(" "),e("p",[_._v("简要来说，很多网站第二次访问能够秒开，是因为这些网站把很多资源都缓存在了本地，浏览器缓存直接使用本地副本来回应请求，而不会产生真实的网络请求，从而节省了时间。同时，"),e("code",[_._v("DNS")]),_._v("数据也被浏览器缓存了，这又省去了"),e("code",[_._v("DNS")]),_._v("查询环节")]),_._v(" "),e("h3",{attrs:{id:"_2-登录状态是如何保持的？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-登录状态是如何保持的？"}},[_._v("#")]),_._v(" 2. 登录状态是如何保持的？")]),_._v(" "),e("ul",[e("li",[_._v("通过上面的介绍，你已经了解了缓存是如何工作的。下面我们再一起看下登录状态是如何保持的。")]),_._v(" "),e("li",[_._v("用户打开登录页面，在登录框里填入用户名和密码，点击确定按钮。点击按钮会触发页面脚本生成用户登录信息，然后调用"),e("code",[_._v("POST")]),_._v("方法提交用户登录信息给服务器。")]),_._v(" "),e("li",[_._v("服务器接收到浏览器提交的信息之后，查询后台，验证用户登录信息是否正确，如果正确的话，会生成一段表示用户身份的字符串，并把该字符串写到响应头的"),e("code",[_._v("Set-Cookie")]),_._v("字段里，如下所示，然后把响应头发送给浏览器")])]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("Set-Cookie: UID=3431uad;\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("ul",[e("li",[_._v("浏览器在接收到服务器的响应头后，开始解析响应头，如果遇到响应头里含有"),e("code",[_._v("Set-Cookie")]),_._v("字段的情况，浏览器就会把这个字段信息保存到本地。比如把"),e("code",[_._v("UID=3431uad")]),_._v("保持到本地。")]),_._v(" "),e("li",[_._v("当用户再次访问时，浏览器会发起"),e("code",[_._v("HTTP")]),_._v("请求，但在发起请求之前，浏览器会读取之前保存的"),e("code",[_._v("Cookie")]),_._v("数据，并把数据写进请求头里的"),e("code",[_._v("Cookie")]),_._v("字段里（如下所示），然后浏览器再将请求头发送给服务器。")])]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("Cookie: UID=3431uad;\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("ul",[e("li",[_._v("服务器在收到"),e("code",[_._v("HTTP")]),_._v("请求头数据之后，就会查找请求头里面的“"),e("code",[_._v("Cookie")]),_._v("”字段信息，当查找到包含"),e("code",[_._v("UID=3431uad")]),_._v("的信息时，服务器查询后台，并判断该用户是已登录状态，然后生成含有该用户信息的页面数据，并把生成的数据发送给浏览器。")]),_._v(" "),e("li",[_._v("浏览器在接收到该含有当前用户的页面数据后，就可以正确展示用户登录的状态信息了")])]),_._v(" "),e("p",[_._v("好了，通过这个流程你可以知道浏览器页面状态是通过使用"),e("code",[_._v("Cookie")]),_._v("来实现的。"),e("code",[_._v("Cookie")]),_._v("流程可以参考下图：")]),_._v(" "),e("p",[e("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part1/ls3/6.png",alt:""}})]),_._v(" "),e("p",[_._v("简单地说，如果服务器端发送的响应头内有 "),e("code",[_._v("Set-Cookie")]),_._v(" 的字段，那么浏览器就会将该字段的内容保持到本地。当下次客户端再往该服务器发送请求时，客户端会自动在请求头中加入 "),e("code",[_._v("Cookie")]),_._v(" 值后再发送出去。服务器端发现客户端发送过来的"),e("code",[_._v("Cookie")]),_._v("后，会去检查究竟是从哪一个客户端发来的连接请求，然后对比服务器上的记录，最后得到该用户的状态信息。")]),_._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),e("p",[_._v("本篇文章的内容比较多、比较碎，但是非常重要，所以我先来总结下今天的主要内容。")]),_._v(" "),e("p",[_._v("为了便于你理解，我画了下面这张详细的“"),e("code",[_._v("HTTP")]),_._v("请求示意图”，用来展现浏览器中的"),e("code",[_._v("HTTP")]),_._v("请求所经历的各个阶段。")]),_._v(" "),e("p",[e("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part1/ls3/7.png",alt:""}})]),_._v(" "),e("p",[_._v("从图中可以看到，浏览器中的"),e("code",[_._v("HTTP")]),_._v("请求从发起到结束一共经历了如下"),e("strong",[_._v("八个阶段")]),_._v("："),e("strong",[_._v("构建请求")]),_._v("、"),e("strong",[_._v("查找缓存")]),_._v("、"),e("strong",[_._v("准备"),e("code",[_._v("IP")]),_._v("和端口")]),_._v("、"),e("strong",[_._v("等待"),e("code",[_._v("TCP")]),_._v("队列")]),_._v("、"),e("strong",[_._v("建立"),e("code",[_._v("TCP")]),_._v("连接")]),_._v("、"),e("strong",[_._v("发起"),e("code",[_._v("HTTP")]),_._v("请求")]),_._v("、"),e("strong",[_._v("服务器处理请求")]),_._v("、"),e("strong",[_._v("服务器返回请求")]),_._v("和"),e("strong",[_._v("断开连接")]),_._v("。")]),_._v(" "),e("p",[_._v("然后我还通过"),e("code",[_._v("HTTP")]),_._v("请求路径解答了两个经常会碰到的问题，一个涉及到了"),e("code",[_._v("Cache")]),_._v("流程，另外一个涉及到如何使用"),e("code",[_._v("Cookie")]),_._v("来进行状态管理。")]),_._v(" "),e("p",[_._v("通过今天系统的讲解，想必你已经了解了一个"),e("code",[_._v("HTTP")]),_._v("完整的工作流程，相信这些知识点之于你以后的学习或工作会很有帮助。")])])}),[],!1,null,null,null);v.default=a.exports}}]);