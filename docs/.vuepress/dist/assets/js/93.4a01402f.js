(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{516:function(t,e,a){"use strict";a.r(e);var s=a(27),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_07-vue的生命周期与响应式原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_07-vue的生命周期与响应式原理"}},[t._v("#")]),t._v(" 07.Vue的生命周期与响应式原理")]),t._v(" "),a("h2",{attrs:{id:"响应式原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应式原理"}},[t._v("#")]),t._v(" 响应式原理")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/vuepress/essay/7/1.png",alt:"image-20200522123319050"}})]),t._v(" "),a("h2",{attrs:{id:"vue的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue的生命周期"}},[t._v("#")]),t._v(" "),a("code",[t._v("Vue")]),t._v("的生命周期")]),t._v(" "),a("p",[t._v("每个 "),a("code",[t._v("Vue")]),t._v(" 实例在被创建到被销毁都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 "),a("code",[t._v("DOM")]),t._v(" 并在数据变化时更新 "),a("code",[t._v("DOM")]),t._v(" 等。同时在这个过程中也会运行一些叫做生命周期钩子的函数，这给了用户在不同阶段添加自己的代码的机会。")]),t._v(" "),a("p",[a("strong",[t._v("钩子函数")]),t._v(" "),a("code",[t._v("Vue")]),t._v("实例从创建到销毁的过程中 ，这些过程中会伴随着一些函数的自调用。将这些函数称为钩子函数。")]),t._v(" "),a("p",[t._v("为什么叫做钩子呢？原因是对于某个实例事件发生后需要响应已经预设好的代码，即某一个钩子钩住了一个实例的状态或者事件。\n"),a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/vuepress/essay/7/2.png",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"一、创建阶段的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、创建阶段的生命周期"}},[t._v("#")]),t._v(" 一、创建阶段的生命周期")]),t._v(" "),a("h3",{attrs:{id:"_1-beforecreate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-beforecreate"}},[t._v("#")]),t._v(" 1."),a("code",[t._v("beforeCreate")])]),t._v(" "),a("p",[t._v("在实例初始化之后，数据观测 ("),a("code",[t._v("data observer")]),t._v(") 和 "),a("code",[t._v("event/watcher")]),t._v(" 事件配置之前被调用。此时的 "),a("code",[t._v("data")]),t._v(" 和 "),a("code",[t._v("methods")]),t._v(" 中的 数据都还没有没初始化。")]),t._v(" "),a("h3",{attrs:{id:"_2-created"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-created"}},[t._v("#")]),t._v(" 2."),a("code",[t._v("created")])]),t._v(" "),a("p",[t._v("在实例创建完成后被立即调用。在这一步，实例已完成以下的配置：数据观测 ("),a("code",[t._v("data observer")]),t._v(")，属性和方法的运算，"),a("code",[t._v("watch/event")]),t._v(" 事件回调。也就是此时 "),a("code",[t._v("data")]),t._v(" 和 "),a("code",[t._v("methods")]),t._v("已经可以初始化完成了。然而，挂载阶段还没开始，"),a("code",[t._v("$el")]),t._v(" 属性目前尚不可用。 页面还没有渲染出来。")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：如果要调用 "),a("code",[t._v("methods")]),t._v(" 中的方法，或者操作 "),a("code",[t._v("data")]),t._v(" 中的数据，最早只能在 "),a("code",[t._v("created")]),t._v(" 中进行操作。")])]),t._v(" "),a("h3",{attrs:{id:"_3-beforemount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-beforemount"}},[t._v("#")]),t._v(" 3."),a("code",[t._v("beforeMount")])]),t._v(" "),a("p",[t._v("在挂载开始之前被调用。此时页面上还看不到真实的数据，因为模板在内存中编译完成了，但是还没有把模板渲染到页面中。")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：在 "),a("code",[t._v("beforeMount")]),t._v(" 执行的时候，页面中的元素还没有被真正替换过来，显示的是之前写的一些模板字符串。")])]),t._v(" "),a("h3",{attrs:{id:"_4-mounted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-mounted"}},[t._v("#")]),t._v(" 4."),a("code",[t._v("mounted")])]),t._v(" "),a("p",[t._v("实例被挂载后调用，这时 "),a("code",[t._v("el")]),t._v(" 被新创建的 "),a("code",[t._v("vm.$el")]),t._v(" 替换了。此时数据已经真实渲染到页面上了。")]),t._v(" "),a("p",[a("code",[t._v("mounted")]),t._v(" 是实例创建期间的最后一个生命周期函数，当执行完 "),a("code",[t._v("mounted")]),t._v(" 就表示，实例已经被完全创建好了。")]),t._v(" "),a("p",[a("strong",[t._v("注意：")])]),t._v(" "),a("p",[a("code",[t._v("mounted")]),t._v(" 不会保证所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以在 "),a("code",[t._v("mounted")]),t._v(" 内部使用 "),a("code",[t._v("vm.$nextTick")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mounted")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Code that will run only after the")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// entire view has been rendered")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"二、运行阶段的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、运行阶段的生命周期"}},[t._v("#")]),t._v(" 二、运行阶段的生命周期")]),t._v(" "),a("h3",{attrs:{id:"_1-beforeupdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-beforeupdate"}},[t._v("#")]),t._v(" 1."),a("code",[t._v("beforeUpdate")])]),t._v(" "),a("p",[t._v("数据更新时调用，发生在虚拟 "),a("code",[t._v("DOM")]),t._v(" 打补丁之前。此时页面上数据还是旧的，但是 "),a("code",[t._v("data")]),t._v(" 数据是最新的，页面还没有和最新的数据保持同步。")]),t._v(" "),a("p",[t._v("这里适合在更新之前访问现有的 "),a("code",[t._v("DOM")]),t._v("，比如手动移除已添加的事件监听器。")]),t._v(" "),a("h3",{attrs:{id:"_2-updated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-updated"}},[t._v("#")]),t._v(" 2."),a("code",[t._v("updated")])]),t._v(" "),a("p",[t._v("由于数据更改导致的虚拟 "),a("code",[t._v("DOM")]),t._v(" 重新渲染和打补丁，在这之后会调用该钩子。此时页面上数据已经替换成最新的。")]),t._v(" "),a("p",[t._v("当这个钩子被调用时，组件 "),a("code",[t._v("DOM")]),t._v(" 已经更新，所以你现在可以执行依赖于 "),a("code",[t._v("DOM")]),t._v("\n的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 "),a("code",[t._v("watcher")]),t._v(" 取而代之。")]),t._v(" "),a("h3",{attrs:{id:"三、销毁阶段的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、销毁阶段的生命周期"}},[t._v("#")]),t._v(" 三、销毁阶段的生命周期")]),t._v(" "),a("h3",{attrs:{id:"_1-beforedestroy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-beforedestroy"}},[t._v("#")]),t._v(" 1."),a("code",[t._v("beforeDestroy")])]),t._v(" "),a("p",[t._v("实例销毁之前调用。在这一步，实例仍然完全可用。")]),t._v(" "),a("h3",{attrs:{id:"_2-destroyed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-destroyed"}},[t._v("#")]),t._v(" 2."),a("code",[t._v("destroyed")])]),t._v(" "),a("p",[t._v("实例销毁后调用。该钩子被调用后，对应 "),a("code",[t._v("Vue")]),t._v(" 实例的所有指令都被"),a("strong",[t._v("解绑")]),t._v("，所有的事件监听器被"),a("strong",[t._v("移除")]),t._v("，所有的子实例也都被"),a("strong",[t._v("销毁")]),t._v("。")])])}),[],!1,null,null,null);e.default=v.exports}}]);