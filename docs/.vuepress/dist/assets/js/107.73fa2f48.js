(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{427:function(e,t,_){"use strict";_.r(t);var s=_(33),v=Object(s.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"第十讲：git子库：submodule与subtree"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第十讲：git子库：submodule与subtree"}},[e._v("#")]),e._v(" 第十讲：Git子库：submodule与subtree")]),e._v(" "),_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),_("p",[e._v("一个中大型项目往往会依赖几个模块，"),_("code",[e._v("git")]),e._v("提供了子库的概念。可以将这些子模块存放在不同的仓库中，通过"),_("code",[e._v("submodule")]),e._v("或"),_("code",[e._v("subtree")]),e._v("实现仓库的嵌套。")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/1.jpg",alt:""}})]),e._v(" "),_("h2",{attrs:{id:"一、submodule"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、submodule"}},[e._v("#")]),e._v(" 一、"),_("code",[e._v("submodule")])]),e._v(" "),_("p",[_("code",[e._v("submodule")]),e._v("：子模块的意思，表示将一个版本库作为子库引入到另一个版本库中：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/2.png",alt:"image-20200408224205125"}})]),e._v(" "),_("h3",{attrs:{id:"_1-引入子库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入子库"}},[e._v("#")]),e._v(" 1.引入子库")]),e._v(" "),_("p",[e._v("需要使用如下命令：")]),e._v(" "),_("h4",{attrs:{id:"git-submodule-add-子库地址-保存目录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-submodule-add-子库地址-保存目录"}},[e._v("#")]),e._v(" "),_("code",[e._v("git submodule add 子库地址 保存目录")])]),e._v(" "),_("p",[e._v("比如：")]),e._v(" "),_("div",{staticClass:"language-javascript line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[e._v(" git submodule add git@github"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("com"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("AhuntSun"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("git_child"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("git mymodule\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("执行上述命令会将地址对应的远程仓库作为子库，保存到当前版本库的"),_("code",[e._v("mymodule")]),e._v("目录下：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/3.png",alt:""}})]),e._v(" "),_("p",[e._v("随后查看当前版本库的状态：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/4.png",alt:"image-20200329203048016"}})]),e._v(" "),_("p",[e._v("可以发现新增了两个文件。查看其中的"),_("code",[e._v(".gitmodules")]),e._v("文件：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/5.png",alt:"image-20200329203507411"}})]),e._v(" "),_("p",[e._v("可以看到当前文件的路径和子模块的"),_("code",[e._v("url")]),e._v("，随后将这两个新增文件"),_("strong",[e._v("添加")]),e._v("、"),_("strong",[e._v("提交")]),e._v("并"),_("strong",[e._v("推送")]),e._v("。在当前仓库"),_("code",[e._v("git_parent")]),e._v("对应的远程仓库中多出了两个文件：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/6.png",alt:"image-20200329203746236"}})]),e._v(" "),_("p",[e._v("其中"),_("code",[e._v("mymodule")]),e._v("文件夹上的"),_("code",[e._v("3bd7f76")]),e._v(" 对应的是"),_("strong",[e._v("子仓库")]),_("code",[e._v("git_child")]),e._v("中的"),_("strong",[e._v("最新提交")]),e._v("：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/7.png",alt:"image-20200329203905051"}})]),e._v(" "),_("p",[e._v("点击"),_("code",[e._v("mymodule")]),e._v("文件夹，会自动跳转到"),_("strong",[e._v("子仓库")]),e._v("中：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/8.png",alt:"image-20200329203957392"}})]),e._v(" "),_("p",[e._v("通过上述分析，可以得出结论：两个仓库已经关联起来了，并且仓库"),_("code",[e._v("git_child")]),e._v("为仓库"),_("code",[e._v("git_parent")]),e._v("的子仓库；")]),e._v(" "),_("h3",{attrs:{id:"_2-同步子库变化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-同步子库变化"}},[e._v("#")]),e._v(" 2.同步子库变化")]),e._v(" "),_("p",[_("strong",[e._v("当被依赖的子版本库发生变化时")]),e._v("：在子版本库"),_("code",[e._v("git_child")]),e._v("中新增文件"),_("code",[e._v("world.txt")]),e._v("并提交到远程仓库：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/9.png",alt:"image-20200329204252524"}})]),e._v(" "),_("p",[e._v("这个时候依赖它的父版本库"),_("code",[e._v("git_parent")]),e._v("要如何感知这一变化呢？")]),e._v(" "),_("h4",{attrs:{id:"方法一"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方法一"}},[e._v("#")]),e._v(" 方法一")]),e._v(" "),_("p",[e._v("这个时候"),_("code",[e._v("git_parent")]),e._v("只需要进入存放子库"),_("code",[e._v("git_child")]),e._v("的目录"),_("code",[e._v("mymodule")]),e._v("，执行"),_("code",[e._v("git pull")]),e._v("就能将子版本库"),_("code",[e._v("git_child")]),e._v("的更新拉取到本地：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/10.png",alt:"image-20200330102106961"}})]),e._v(" "),_("h4",{attrs:{id:"方法二"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方法二"}},[e._v("#")]),e._v(" 方法二")]),e._v(" "),_("p",[e._v("当父版本库"),_("code",[e._v("git_parent")]),e._v("依赖的"),_("strong",[e._v("多个子版本库")]),e._v("都发生变化时，可以采用如下方法遍历更新所有子库：首先回到版本库主目录，执行以下指令：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" git submodule foreach git pull\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("该命令会"),_("strong",[e._v("遍历")]),e._v("当前版本库所依赖的"),_("strong",[e._v("所有")]),e._v("子版本库，并将它们的更新"),_("strong",[e._v("拉取")]),e._v("到父版本库"),_("code",[e._v("git_parent")]),e._v("：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/11.png",alt:"image-20200330102642607"}})]),e._v(" "),_("p",[e._v("拉取完成后，查看状态，发现"),_("code",[e._v("mymodule")]),e._v("目录下文件发生了变化，所以需要执行一次添加、提交、推送操作：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/12.png",alt:"image-20200330102914556"}})]),e._v(" "),_("h3",{attrs:{id:"_3-复制父版本库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-复制父版本库"}},[e._v("#")]),e._v(" 3.复制父版本库")]),e._v(" "),_("p",[e._v("如果将使用了"),_("code",[e._v("submodule")]),e._v("添加依赖了子库的父版本库"),_("code",[e._v("git_parent")]),e._v("，克隆一份到本地的话。在克隆出来的新版本库"),_("code",[e._v("git_parent2")]),e._v("中，原父版本库存放依赖子库的目录虽在，但是内容不在：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/13.png",alt:"image-20200330103417911"}})]),e._v(" "),_("p",[e._v("进入根据"),_("code",[e._v("git_parent")]),e._v("复制出来的仓库"),_("code",[e._v("git_parent2")]),e._v("，会发现"),_("code",[e._v("mymodule")]),e._v("目录为空：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/14.png",alt:"image-20200330103502848"}})]),e._v(" "),_("p",[e._v("**解决方法：**可采用多条命令的分步操作，也可以通过参数将多步操作进行合并。")]),e._v(" "),_("h4",{attrs:{id:"分步操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分步操作"}},[e._v("#")]),e._v(" 分步操作")]),e._v(" "),_("p",[e._v("这是在执行了"),_("code",[e._v("clone")]),e._v("操作后的额外操作，还需要做两件事：")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("手动初始化"),_("code",[e._v("submodule")]),e._v("：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("git submodule init\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])])]),e._v(" "),_("li",[_("p",[e._v("手动拉取依赖的子版本库；：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("git submodule update --recursive\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])])])]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/15.png",alt:"image-20200330103803762"}})]),e._v(" "),_("p",[e._v("执行完两步操作后，子版本库中就有内容了。由此完成了"),_("code",[e._v("git_parent")]),e._v("的克隆；")]),e._v(" "),_("h4",{attrs:{id:"合并操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#合并操作"}},[e._v("#")]),e._v(" 合并操作")]),e._v(" "),_("p",[e._v("分步操作相对繁琐，还可以通过添加参数的方式，将多步操作进行合并。通过以下指令基于"),_("code",[e._v("git_parent")]),e._v("克隆一份"),_("code",[e._v("git_parent3")]),e._v("：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("git clone git@github.com:AhuntSun/git_parent.git git_parent3 --recursive\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/16.png",alt:"image-20200330104210732"}})]),e._v(" "),_("p",[_("code",[e._v("--recursive")]),e._v("表示递归地克隆"),_("code",[e._v("git_parent")]),e._v("依赖的所有子版本库。")]),e._v(" "),_("h3",{attrs:{id:"_4-删除子版本库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除子版本库"}},[e._v("#")]),e._v(" 4.删除子版本库")]),e._v(" "),_("p",[_("code",[e._v("git")]),e._v("没有提供直接删除"),_("code",[e._v("submodule")]),e._v("子库的命令，但是我们可以通过其他指令的组合来达到这一目的，分为三步：")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("将"),_("code",[e._v("submodule")]),e._v("从版本库中删除：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("git rm --cache mymodule\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])])])]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/17.png",alt:"image-20200330105131697"}})]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("git rm")]),e._v("的作用为删除版本库中的文件，并将这一操作纳入暂存区；")])]),e._v(" "),_("ul",[_("li",[e._v("将"),_("code",[e._v("submodule")]),e._v("从工作区中删除；")])]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/18.png",alt:"image-20200330105226923"}})]),e._v(" "),_("ul",[_("li",[e._v("最后将"),_("code",[e._v(".gitmodules")]),e._v("目录删除；")])]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/19.png",alt:"image-20200330105542069"}})]),e._v(" "),_("p",[e._v("完成三步操作后，再进行添加，提交，推送即可完成删除子库的操作：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/20.png",alt:"image-20200330105614793"}})]),e._v(" "),_("h2",{attrs:{id:"二、subtree"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、subtree"}},[e._v("#")]),e._v(" 二、"),_("code",[e._v("subtree")])]),e._v(" "),_("h3",{attrs:{id:"_1-简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[e._v("#")]),e._v(" 1.简介")]),e._v(" "),_("p",[_("code",[e._v("subtree")]),e._v("与"),_("code",[e._v("submodule")]),e._v("的作用是一样的，但是"),_("code",[e._v("subtree")]),e._v("出现得比"),_("code",[e._v("submodule")]),e._v("晚，它的出现是为了弥补"),_("code",[e._v("submodule")]),e._v("存在的问题：")]),e._v(" "),_("ul",[_("li",[_("strong",[e._v("第一：")]),_("code",[e._v("submodule")]),e._v("不能在父版本库中修改子版本库的代码，只能在子版本库中修改，是单向的；")]),e._v(" "),_("li",[_("strong",[e._v("第二：")]),_("code",[e._v("submodule")]),e._v("没有直接删除子版本库的功能；")])]),e._v(" "),_("p",[e._v("而"),_("code",[e._v("subtree")]),e._v("则可以实现双向数据修改。官方推荐使用"),_("code",[e._v("subtree")]),e._v("替代"),_("code",[e._v("submodule")]),e._v("。")]),e._v(" "),_("h3",{attrs:{id:"_2-创建子库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建子库"}},[e._v("#")]),e._v(" 2.创建子库")]),e._v(" "),_("p",[e._v("首先创建两个版本库："),_("code",[e._v("git_subtree_parent")]),e._v("和"),_("code",[e._v("git_subtree_child")]),e._v("然后在"),_("code",[e._v("git_subtree_parent")]),e._v("中执行"),_("code",[e._v("git subtree")]),e._v("会列出该指令的一些常见的参数：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/21.png",alt:"image-20200330112616987"}})]),e._v(" "),_("h3",{attrs:{id:"_3-建立关联"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-建立关联"}},[e._v("#")]),e._v(" 3.建立关联")]),e._v(" "),_("p",[e._v("首先需要给"),_("code",[e._v("git_subtree_parent")]),e._v("添加一个子库"),_("code",[e._v("git_subtree_child")]),e._v(":")]),e._v(" "),_("p",[e._v("**第一步：**添加子库的远程地址：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" git remote add subtree-origin git@github.com:AhuntSun/git_subtree_child.git\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("添加完成后，父版本库中就有两个远程地址了：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/22.png",alt:"image-20200330113223780"}})]),e._v(" "),_("p",[e._v("这里的"),_("code",[e._v("subtree-origin")]),e._v("就代表了远程仓库"),_("code",[e._v("git_subtree_child")]),e._v("的地址。")]),e._v(" "),_("p",[e._v("**第二步：**建立依赖关系：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" git subtree add --prefix=subtree subtree-origin master --squash\n //其中的--prefix=subtree可以写成：--p subtree 或 --prefix subtree\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("p",[e._v("该命令表示将远程地址为"),_("code",[e._v("subtree-origin")]),e._v("的，子版本库上"),_("code",[e._v("master")]),e._v("分支的，文件克隆到"),_("code",[e._v("subtree")]),e._v("目录下；")]),e._v(" "),_("blockquote",[_("p",[e._v("注意：是在某一分支（如"),_("code",[e._v("master")]),e._v("）上将"),_("code",[e._v("subtree-origin")]),e._v("代表的远程仓库的某一分支（如"),_("code",[e._v("master")]),e._v("）作为子库拉取到"),_("code",[e._v("subtree")]),e._v("文件夹中。可切换到其他分支重复上述操作，也就是说子库的实质就是子分支。")])]),e._v(" "),_("p",[_("code",[e._v("--squash")]),e._v("是可选参数，它的含义是"),_("strong",[e._v("合并，压缩")]),e._v("的意思。")]),e._v(" "),_("ul",[_("li",[e._v("如果不增加这个参数，则会把远程的子库中指定的分支（这里是"),_("code",[e._v("master")]),e._v("）中的提交一个一个地拉取到本地再去创建一个合并提交；")]),e._v(" "),_("li",[e._v("如果增加了这个参数，会将远程子库指定分支上的多次提交合并压缩成一次提交再拉取到本地，这样拉取到本地的，远程子库中的，指定分支上的，历史提交记录就没有了。")])]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/23.png",alt:"image-20200330114203889"}})]),e._v(" "),_("p",[e._v("拉取完成后，父版本库中会增添一个"),_("code",[e._v("subtree")]),e._v("目录，里面是子库的文件，相当于把依赖的子库代码拉取到了本地：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/24.png",alt:"image-20200330114316257"}})]),e._v(" "),_("p",[e._v("此时查看一下父版本库的提交历史：\n"),_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/25.png",alt:"image-20200330114500554"}})]),e._v(" "),_("p",[e._v("会发现其中没有子库李四的提交信息，这是因为"),_("code",[e._v("--squash")]),e._v("参数将他的提交压缩为一次提交，并由父版本库张三进行合并和提交。所以父版本库多出了两次提交。")]),e._v(" "),_("p",[e._v("随后，我们在父版本库中进行一次推送：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/26.png",alt:"image-20200330114730534"}})]),e._v(" "),_("p",[e._v("结果远程仓库中多出了一个存放子版本库文件的"),_("code",[e._v("subtree")]),e._v("目录，并且完全脱离了版本库"),_("code",[e._v("git_subtree_child")]),e._v("，仅仅是属于父版本库"),_("code",[e._v("git_subtree_parent")]),e._v("的一个目录。而不像使用"),_("code",[e._v("submodule")]),e._v("那样，是一个点击就会自动跳转到依赖子库的"),_("strong",[e._v("指针")]),e._v("：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("subtree")]),e._v("的远程父版本库：")])]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/27.png",alt:"image-20200330115004586"}})]),e._v(" "),_("ul",[_("li",[_("code",[e._v("submodule")]),e._v("的远程父版本库：")])]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/28.png",alt:"image-20200329203746236"}})]),e._v(" "),_("p",[e._v("即"),_("code",[e._v("submodule")]),e._v("与"),_("code",[e._v("subtree")]),e._v("子库的区别为：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/29.png",alt:"image-20200408224805624"}})]),e._v(" "),_("h3",{attrs:{id:"_4-同步子库变化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-同步子库变化"}},[e._v("#")]),e._v(" 4.同步子库变化")]),e._v(" "),_("p",[e._v("在子库中创建一个新文件"),_("code",[e._v("world")]),e._v("并推送到远程子库：\n"),_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/30.png",alt:"image-20200330115440136"}})]),e._v(" "),_("p",[e._v("在父库中通过如下指令更新依赖的子库内容：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("git subtree pull --prefix=subtree subtree-origin master --squash\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/31.png",alt:"image-20200330115726052"}})]),e._v(" "),_("p",[e._v("此时查看一下提交历史：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/32.png",alt:"image-20200330115755340"}})]),e._v(" "),_("p",[e._v("发现没有子库李四的提交信息，这都是"),_("code",[e._v("--squash")]),e._v("的作用。子库的修改交由父库来提交。")]),e._v(" "),_("h3",{attrs:{id:"_5-参数-squash"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-参数-squash"}},[e._v("#")]),e._v(" 5.参数"),_("code",[e._v("--squash")])]),e._v(" "),_("p",[e._v("该参数的作用为：防止子库指定分支上的提交历史污染父版本库。比如在子库的"),_("code",[e._v("master")]),e._v("分支上进行了三次提交分别为："),_("code",[e._v("a")]),e._v("、"),_("code",[e._v("b")]),e._v("、"),_("code",[e._v("c")]),e._v("，并推送到远程子库。")]),e._v(" "),_("p",[e._v("首先，复习一下合并分支时遵循的"),_("strong",[e._v("三方合并")]),e._v("原则：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/33.png",alt:"image-20200408003842196"}})]),e._v(" "),_("p",[e._v("当提交"),_("code",[e._v("4")]),e._v("和"),_("code",[e._v("6")]),e._v("需要合并的时候，"),_("code",[e._v("git")]),e._v("会先寻找二者的公共父提交节点，如图中的"),_("code",[e._v("2")]),e._v("，然后在提交"),_("code",[e._v("2")]),e._v("的基础上进行"),_("code",[e._v("2")]),e._v("、"),_("code",[e._v("4")]),e._v("、"),_("code",[e._v("6")]),e._v("的三方合并，合并后得到提交"),_("code",[e._v("7")]),e._v("。")]),e._v(" "),_("p",[e._v("父仓库执行"),_("code",[e._v("pull")]),e._v("操作时：如果添加参数"),_("code",[e._v("--squash")]),e._v("，就会把远程子库"),_("code",[e._v("master")]),e._v("分支上的这三次提交合并为一次新的提交"),_("code",[e._v("abc")]),e._v("；随后再与父仓库中子库的"),_("code",[e._v("master")]),e._v("分支进行合并，又产生一次提交"),_("code",[e._v("X")]),e._v("。整个"),_("code",[e._v("pull")]),e._v("的过程一共产生了五次提交，如下图所示：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/34.png",alt:"image-20200420103912282"}})]),e._v(" "),_("p",[_("strong",[e._v("存在的问题：")])]),e._v(" "),_("p",[e._v("由于"),_("code",[e._v("--squash")]),e._v("指令的合并操作，会导致远程"),_("code",[e._v("master")]),e._v("分支上的合并提交"),_("code",[e._v("abc")]),e._v("与本地"),_("code",[e._v("master")]),e._v("分支上的最新提交"),_("code",[e._v("2")]),e._v("，找不到公共父节点，从而合并失败。同时"),_("code",[e._v("push")]),e._v("操作也会出现额外的问题。")]),e._v(" "),_("p",[_("strong",[e._v("最佳实践：要么全部操作都使用"),_("code",[e._v("--squash")]),e._v("指令，要么全部操作都不使用该参数，这样就不会出错。")])]),e._v(" "),_("p",[_("strong",[e._v("错误示范：")])]),e._v(" "),_("p",[e._v("为了验证，重新创建两个仓库"),_("code",[e._v("A")]),e._v("和"),_("code",[e._v("B")]),e._v("，并通过"),_("code",[e._v("subtree")]),e._v("将"),_("code",[e._v("B")]),e._v("设置为"),_("code",[e._v("A")]),e._v("的子库。这次全程都没有使用参数"),_("code",[e._v("--squash")]),e._v("，重复上述操作：")]),e._v(" "),_("ul",[_("li",[e._v("首先，修改子库文件；")]),e._v(" "),_("li",[e._v("然后，通过下列指令，在不使用参数"),_("code",[e._v("--squash")]),e._v("的情况下，将远程子库"),_("code",[e._v("A")]),e._v("变化的文件拉取到本地：")])]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("git subtree pull --prefix=subtree subtree-origin master\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/35.png",alt:"image-20200330141920474"}})]),e._v(" "),_("p",[e._v("此时查看提交历史：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/36.png",alt:"image-20200330142000915"}})]),e._v(" "),_("p",[e._v("可以看到子库"),_("code",[e._v("儿子")]),e._v("的提交信息污染了父版本库的提交信息，验证了上述的结论。")]),e._v(" "),_("p",[e._v("所以要么都使用该指令，要么都不使用才能避免错误；如果不需要子库的提交日志，推荐使用"),_("code",[e._v("--squash")]),e._v("指令。")]),e._v(" "),_("blockquote",[_("p",[_("strong",[e._v("补充：")]),_("code",[e._v("echo 'new line' >> test.txt")]),e._v("：表示在"),_("code",[e._v("test.txt")]),e._v("文件末尾追加文本"),_("code",[e._v("new line")]),e._v("；如果是一个"),_("code",[e._v(">")]),e._v("表示替换掉"),_("code",[e._v("test.txt")]),e._v("内的全部内容。")])]),e._v(" "),_("h3",{attrs:{id:"_6-修改子库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-修改子库"}},[e._v("#")]),e._v(" 6.修改子库")]),e._v(" "),_("p",[_("code",[e._v("subtree")]),e._v("的强大之处在于，它可以在父版本库中修改依赖的子版本库。以下为演示：")]),e._v(" "),_("p",[e._v("进入父版本库存放子库的"),_("code",[e._v("subtree")]),e._v("目录，修改子库文件"),_("code",[e._v("child.txt")]),e._v("，并推送到远程父仓库：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/37.png",alt:"image-20200330121429186"}})]),e._v(" "),_("p",[e._v("此时远程父版本库中存放子库文件的"),_("code",[e._v("subtree")]),e._v("目录发生了变化，但是独立的远程子库"),_("code",[e._v("git_subtree_child")]),e._v("并没有发生变化。")]),e._v(" "),_("ul",[_("li",[_("p",[_("strong",[e._v("修改独立的远程子库：")])]),e._v(" "),_("p",[e._v("可执行以下命令，同步地修改远程子版本库：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("git subtree push --prefix=subtree subtree-origin master\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("如下图所示，父库中的子库文件"),_("code",[e._v("child.txt")]),e._v("新增的"),_("code",[e._v("child2")]),e._v("内容，同步到了独立的远程子库中：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/38.png",alt:"image-20200330125911158"}})])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("修改独立的本地子库：")])]),e._v(" "),_("p",[e._v("回到本地子库"),_("code",[e._v("git_subtree_child")]),e._v("，将对应的远程子库进行的修改拉取到本地进行合并同步：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/39.png",alt:"image-20200330144044823"}})]),e._v(" "),_("p",[e._v("由此无论是远程的还是本地的子库都被修改了。")])])]),e._v(" "),_("blockquote",[_("p",[e._v("实际上使用"),_("code",[e._v("subtree")]),e._v("后，在外部看起来父仓库和子仓库是一个整体的仓库。执行"),_("code",[e._v("clone")]),e._v("操作时，不会像"),_("code",[e._v("submodule")]),e._v("那样需要遍历子库来单独克隆。而是可以将整个父仓库和它所依赖的子库当做一个整体进行克隆。")])]),e._v(" "),_("h4",{attrs:{id:"存在的问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#存在的问题"}},[e._v("#")]),e._v(" 存在的问题")]),e._v(" "),_("p",[e._v("父版本库拉取远程子库进行更新同步会出现的问题：")]),e._v(" "),_("ul",[_("li",[_("p",[_("strong",[e._v("子仓库第一次修改：")])]),e._v(" "),_("p",[e._v("经历了上述操作，本地子库与远程子库的文件达到了同步，其中文件"),_("code",[e._v("child.txt")]),e._v("的内容都是"),_("code",[e._v("child~4")]),e._v("。在此基础上本地子库为该文件添加"),_("code",[e._v("child5~6")]),e._v("：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/40.png",alt:"image-20200330145702019"}})]),e._v(" "),_("p",[e._v("然后推送到远程子库。")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("父仓库第一次拉取：")])]),e._v(" "),_("p",[e._v("随后父版本库通过下述指令，拉取远程子库，与本地父仓库"),_("code",[e._v("git_subtree_parent")]),e._v("中的子库进行同步：")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v(" git subtree pull --p subtree subtree-origin master --squash\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("结果出现了合并失败的情况：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/41.png",alt:"image-20200330145839093"}})]),e._v(" "),_("p",[e._v("我们查看冲突产生的文件：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/42.png",alt:"image-20200330145922152"}})]),e._v(" "),_("p",[e._v("发现父版本库中的子库与远程子库内容上并无冲突，但是却发生了冲突，这是为什么呢？")]),e._v(" "),_("p",[e._v("探究冲突产生的原因之前我们先解决冲突，先删除多余的内容：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/43.png",alt:"image-20200330150141430"}})]),e._v(" "),_("p",[e._v("随后执行"),_("code",[e._v("git add")]),e._v("命令和"),_("code",[e._v("git commit")]),e._v("命令标识解决了冲突：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/44.png",alt:"image-20200330150312944"}})]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/45.png",alt:"image-20200330150406317"}})]),e._v(" "),_("p",[e._v("解决完冲突后将该文件推送到独立的远程子库，发现文件并没有发生更新，也就是说"),_("code",[e._v("git")]),e._v("认为我们并没有解决冲突：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/46.png",alt:"image-20200330150747452"}})])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("子仓库第二次修改与父仓库第二次拉取：")])]),e._v(" "),_("p",[e._v("再次修改本地子库的文件并推送到对应的远程仓库，父版本库再次将远程子库更新的文件拉取到本地进行同步：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/47.png",alt:"image-20200330151140092"}})]),e._v(" "),_("p",[e._v("这次却成功了！为什么同样的操作，有的时候成功有的时候失败呢？")])])]),e._v(" "),_("h4",{attrs:{id:"解决方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[e._v("#")]),e._v(" 解决方案")]),e._v(" "),_("p",[e._v("原因出现在"),_("code",[e._v("--squash")]),e._v("指令中。实际上，"),_("code",[e._v("--squash")]),e._v("指令把子库中的提交信息合并了，导致父仓库在执行"),_("code",[e._v("git pull")]),e._v("操作时找不到公共的父节点，从而导致即使文件没有冲突的内容，也会出现合并冲突的情况。其实不使用"),_("code",[e._v("--squash")]),e._v("也会有这种问题，问题的根本原因仍然是"),_("strong",[e._v("三方合并时找不到公共父节点")]),e._v("。我们打开"),_("code",[e._v("gitk")]),e._v("：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/48.png",alt:"image-20200330154944300"}})]),e._v(" "),_("p",[e._v("从图中不难看出，当使用"),_("code",[e._v("subtree")]),e._v("时，子库与父库之间是没有公共节点的，所以时常会因为找不到公共节点而出现合并冲突的情况，此时只需要解决冲突，手动合并即可。")]),e._v(" "),_("blockquote",[_("p",[e._v("不使用"),_("code",[e._v("subtree")]),e._v("时，普通的版本库中的各分支总会有一个公共节点：")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/git/lesson10/49.png",alt:"image-20200330160206258"}})])]),e._v(" "),_("p",[e._v("**再次强调：**使用"),_("code",[e._v("--squash")]),e._v("指令时一定要小心，要么都使用它，要么都不使用。")]),e._v(" "),_("h3",{attrs:{id:"_7-抽离子库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-抽离子库"}},[e._v("#")]),e._v(" 7.抽离子库")]),e._v(" "),_("h4",{attrs:{id:"git-subtree-split"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-subtree-split"}},[e._v("#")]),e._v(" "),_("code",[e._v("git subtree split")])]),e._v(" "),_("p",[e._v("当开发过程中出现某些子库完全可以复用到其他项目中时，我们希望将它独立出来。")]),e._v(" "),_("ul",[_("li",[e._v("**方法一：**可以手动将文件拷贝出来。缺点是，这样会丢失关于该子库的提交记录；")]),e._v(" "),_("li",[e._v("**方法二：**使用"),_("code",[e._v("git subtree split")]),e._v("指令，该指令会把关于独立出来的子库的每次提交都记录起来。但是，这样存在弊端：\n"),_("ul",[_("li",[e._v("比如该独立子库为"),_("code",[e._v("company.util")]),e._v("，当一次提交同时修改了"),_("code",[e._v("company.util")]),e._v("和"),_("code",[e._v("company.server")]),e._v("两个子库时。")]),e._v(" "),_("li",[e._v("通过上述命令独立出来的子库"),_("code",[e._v("util")]),e._v("只会记录对自身修改的提交，而不会记录对"),_("code",[e._v("company.server")]),e._v("的修改，这样在别人看来这次提交就只修改了"),_("code",[e._v("util")]),e._v("，这是不完整的。")])])])])])}),[],!1,null,null,null);t.default=v.exports}}]);