(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{336:function(s,n,t){"use strict";t.r(n);var e=t(33),a=Object(e.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_05-javascript实现集合与字典"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_05-javascript实现集合与字典"}},[s._v("#")]),s._v(" 05.JavaScript实现集合与字典")]),s._v(" "),t("h2",{attrs:{id:"一、集合结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、集合结构"}},[s._v("#")]),s._v(" 一、集合结构")]),s._v(" "),t("h3",{attrs:{id:"_1-1-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-简介"}},[s._v("#")]),s._v(" 1.1.简介")]),s._v(" "),t("p",[s._v("集合比较常见的实现方式是"),t("strong",[s._v("哈希表")]),s._v("，这里使用JavaScript的Object类进行封装。")]),s._v(" "),t("p",[s._v("集合通常是由一组"),t("strong",[s._v("无序的")]),s._v("、"),t("strong",[s._v("不能重复")]),s._v("的元素构成。")]),s._v(" "),t("ul",[t("li",[s._v("数学中常指的集合中的元素是可以重复的，但是计算机中集合的元素不能重复。")])]),s._v(" "),t("p",[t("strong",[s._v("集合是特殊的数组：")])]),s._v(" "),t("ul",[t("li",[s._v("特殊之处在于里面的元素"),t("strong",[s._v("没有顺序")]),s._v("，"),t("strong",[s._v("也不能重复")]),s._v("。")]),s._v(" "),t("li",[s._v("没有顺序意味着"),t("strong",[s._v("不能通过下标值进行访问")]),s._v("，不能重复意味着"),t("strong",[s._v("相同的对象")]),s._v("在集合中只会"),t("strong",[s._v("存在一份")]),s._v("。")])]),s._v(" "),t("p",[t("strong",[s._v("实现集合类")]),s._v("：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在ES6中的"),t("strong",[s._v("Set")]),s._v("类就是一个集合类，这里我们重新封装一个Set类，了解集合的底层实现。")])]),s._v(" "),t("li",[t("p",[s._v("JavaScript中的"),t("strong",[s._v("Object")]),s._v("类中的"),t("strong",[s._v("key")]),s._v("就是一个集合，可以使用它来封装集合类Set。")])])]),s._v(" "),t("p",[t("strong",[s._v("集合常见的操作")]),s._v("：")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("add（value）")]),s._v("：向集合添加一个新的项；")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("remove（value）")]),s._v("：从集合中移除一个值；")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("has（value）")]),s._v("：如果值在集合中，返回"),t("code",[s._v("true")]),s._v("，否则返回"),t("code",[s._v("false")]),s._v("；")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("clear（）")]),s._v("：移除集合中的所有项；")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("size（）")]),s._v("：返回集合所包含元素的数量，与数组的"),t("code",[s._v("length")]),s._v("属性相似；")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("values（）")]),s._v("：返回一个包含集合中所有值的数组；")])])]),s._v(" "),t("p",[s._v("还有其他的方法，用的不多这里不做封装；")]),s._v(" "),t("h3",{attrs:{id:"_1-2-代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-代码实现"}},[s._v("#")]),s._v(" 1.2.代码实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    //封装集合类\n    function Set() {\n      //属性\n      this.items = {}\n\n      //方法\n      //一.has方法\n      Set.prototype.has = value => {\n        return this.items.hasOwnProperty(value)\n      }\n\n      //二.add方法\n      Set.prototype.add = value => {\n        //判断集合中是否已经包含该元素\n        if (this.has(value)) {\n          return false\n        }\n        //将元素添加到集合中\n        this.items[value] = value//表示该属性键和值都为value\n        return true//表示添加成功\n      }\n\n      //三.remove方法\n      Set.prototype.remove = (value) => {\n        //1.判断集合中是否包含该元素\n        if (!this.has(value)) {\n          return false\n        }\n\n        //2.将元素从属性中删除\n        delete this.items[value]\n        return true\n      }\n\n      //四.clear方法\n      Set.prototype.clear = () => {\n        //原来的对象没有引用指向，会被自动回收\n        this.items = {}\n      }\n\n      //五.size方法\n      Set.prototype.size = () => {\n        return Object.keys(this.items).length\n      }\n\n      //获取集合中所有的值\n      //六.values方法\n      Set.prototype.values = function() {\n        return Object.keys(this.items)\n      }\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br")])]),t("p",[t("strong",[s._v("测试代码：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    //测试集合类\n    //1.创建Set类对象\n    let set = new Set()\n\n    //添加元素\n    //2.测试add方法\n    console.log(set.add('a'));\t\t\t\t\t\t\t\t\t\t//67\n    console.log(set.add('a'));\t\t\t\t\t\t\t\t\t\t//68\n    console.log(set.add('b'));\t\t\t\t\t\t\t\t\t\t//69\n    console.log(set.add('c'));\t\t\t\t\t\t\t\t\t\t//70\n    console.log(set.add('d'));\t\t\t\t\t\t\t\t\t\t//71\n\n    //3.测试values方法\n    console.log(set.values());\t\t\t\t\t\t\t\t\t\t//74\n\n    //删除元素\n    //4.测试remove方法\n    console.log(set.remove('a'));\t\t\t\t\t\t\t\t\t//78\n    console.log(set.remove('a'));\t\t\t\t\t\t\t\t\t//79\n    console.log(set.values());\t\t\t\t\t\t\t\t\t\t//80\n\n    //5.测试has方法\n    console.log(set.has('b'));\t\t\t\t\t\t\t\t\t\t//83\n\n    //6.测试size方法和clear方法\n    console.log(set.size());\t\t\t\t\t\t\t\t\t\t//86\n    set.clear()\n    // 由于clear方法的实现原理为指向另外一个空对象，所以不影响原来的对象\n    console.log(set.size());\t\t\t\t\t\t\t\t\t\t//89\n    console.log(set.values());\t\t\t\t\t\t\t\t\t\t//90\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("p",[t("strong",[s._v("测试结果：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%9B%86%E5%90%88%E5%92%8C%E5%AD%97%E5%85%B8/1.png",alt:"image-20200228183431635"}})]),s._v(" "),t("h3",{attrs:{id:"_1-3-集合间的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-集合间的操作"}},[s._v("#")]),s._v(" 1.3.集合间的操作")]),s._v(" "),t("p",[t("strong",[s._v("集合间操作：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("并集")]),s._v("：对于给定的两个集合，返回一个包含两个集合中所有元素的新集合；")]),s._v(" "),t("li",[t("strong",[s._v("交集")]),s._v("：对于给定的两个集合，返回一个包含两个集合中共有元素的新集合；")]),s._v(" "),t("li",[t("strong",[s._v("差集")]),s._v("：对于给定的两个集合，返回一个包含所有存在于第一个集合且不存在于第二个集合的元素的新集合；")]),s._v(" "),t("li",[t("strong",[s._v("子集")]),s._v("：验证一个给定集合是否是另一个集合的子集；")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%9B%86%E5%90%88%E5%92%8C%E5%AD%97%E5%85%B8/2.png",alt:"image-20200228210239984"}})]),s._v(" "),t("p",[t("strong",[s._v("并集的实现：")])]),s._v(" "),t("p",[s._v("实现思路：创建集合C代表集合A和集合B的并集，先将集合"),t("code",[s._v("A")]),s._v("中的所有元素添加到集合"),t("code",[s._v("C")]),s._v("中，再遍历集合"),t("code",[s._v("B")]),s._v("，如果是集合"),t("code",[s._v("C")]),s._v("所没有的元素就把它添加到集合"),t("code",[s._v("C")]),s._v("中。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" Set.prototype.union = otherSet => {\n      // this:集合对象A\n      // otherSet:集合对象B\n      //1.创建一个新的集合\n      let unionSet = new Set()\n\n      //2.将A集合中的所有元素添加到新集合中\n      let values = this.values()\n      // for(let i of values){\n      //   unionSet.add(i)\n      // }\n      for(let i = 0;i < values.length;i++){\n        unionSet.add(values[i])\n      }\n\n      //3.取出B集合中的元素,判断是否需要加到新集合中\n      values = otherSet.values()\n      // for(let i of values){\n      //   //由于集合的add方法已经对重复的元素进行了判断,所以这里可以直接添加\n      //   unionSet.add(i)\n      // }\n      for(let i = 0;i < values.length;i++){\n        unionSet.add(values[i])\n      }\n      return unionSet\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("p",[t("strong",[s._v("交集的实现：")])]),s._v(" "),t("p",[s._v("实现思路：遍历集合A，当取得的元素也存在于集合B时，就把该元素添加到另一个集合C中。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" Set.prototype.intersection = otherSet => {\n      // this:集合A\n      // otherSet:集合B\n      //1.创建新的集合\n      let intersectionSet = new Set()\n      \n      //2.从A中取出一个元素，判断是否同时存在于集合B中，是则放入新集合中\n      let values = this.values()\n      for(let i =0 ; i < values.length; i++){\n        let item = values[i]\n        if (otherSet.has(item)) {\n          intersectionSet.add(item)\n        }\n      }\n      return intersectionSet\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[t("strong",[s._v("差集的实现：")])]),s._v(" "),t("p",[s._v("实现思路：遍历集合A，当取得的元素不存在于集合B时，就把该元素添加到另一个集合C中。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Set.prototype.diffrence = otherSet => {\n        //this:集合A\n        //otherSet:集合B\n        //1.创建新的集合\n        var diffrenceSet = new Set()\n\n        //2.取出A集合中的每一个元素，判断是否同时存在于B中，不存在则添加到新集合中\n        var values = this.values()\n        for(var i = 0;i < values.length; i++){\n          var item = values[i]\n          if (!otherSet.has(item)) {\n            diffrenceSet.add(item)\n          }\n        }\n        return diffrenceSet\n      }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[t("strong",[s._v("子集的实现：")])]),s._v(" "),t("p",[s._v("实现思路：遍历集合A，当取得的元素中有一个不存在于集合B时，就说明集合A不是集合B的子集，返回false。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" Set.prototype.subset = otherSet => {\n        //this:集合A\n        //otherSet：集合B\n        //遍历集合A中的所有元素，如果发现，集合A中的元素，在集合B中不存在，那么放回false，如果遍历完整个集合A没有返回false，就返回true\n        let values = this.values()\n        for(let i = 0; i < values.length; i++){\n          let item = values[i]\n          if(!otherSet.has(item)){\n            return false\n          }\n        }\n        return true\n      }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h2",{attrs:{id:"二、字典结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、字典结构"}},[s._v("#")]),s._v(" 二、字典结构")]),s._v(" "),t("h3",{attrs:{id:"_2-1-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-简介"}},[s._v("#")]),s._v(" 2.1.简介")]),s._v(" "),t("p",[t("strong",[s._v("字典的特点")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("字典存储的是键值对，主要特点是一一对应；")]),s._v(" "),t("li",[s._v('比如保存一个人的信息：数组形式：[19，‘Tom’，1.65]，可通过下标值取出信息；字典形式：{"age"：19，"name"："Tom"，"height"：165}，可以通过key取出value。')]),s._v(" "),t("li",[s._v("此外，在字典中"),t("strong",[s._v("key")]),s._v("是"),t("strong",[s._v("不能重复")]),s._v("且"),t("strong",[s._v("无序")]),s._v("的，而"),t("strong",[s._v("Value")]),s._v("可以"),t("strong",[s._v("重复")]),s._v("。")])]),s._v(" "),t("p",[t("strong",[s._v("字典和映射的关系")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("有些编程语言中称这种"),t("strong",[s._v("映射关系")]),s._v("为"),t("strong",[s._v("字典")]),s._v("，如Swift中的Dictonary，Python中的dict；")]),s._v(" "),t("li",[s._v("有些编程语言中称这种"),t("strong",[s._v("映射关系")]),s._v("为"),t("strong",[s._v("Map")]),s._v("，比如Java中的HashMap&TreeMap等；")])]),s._v(" "),t("p",[t("strong",[s._v("字典类常见的操作")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("set(key,value)：向字典中添加新元素。")]),s._v(" "),t("li",[s._v("remove(key)：通过使用键值来从字典中移除键值对应的数据值。")]),s._v(" "),t("li",[s._v("has(key)：如果某个键值存在于这个字典中，则返回"),t("code",[s._v("true")]),s._v("，反之则返回"),t("code",[s._v("false")]),s._v("。")]),s._v(" "),t("li",[s._v("get(key)：通过键值查找特定的数值并返回。")]),s._v(" "),t("li",[s._v("clear()：将这个字典中的所有元素全部删除。")]),s._v(" "),t("li",[s._v("size()：返回字典所包含元素的数量。与数组的"),t("code",[s._v("length")]),s._v("属性类似。")]),s._v(" "),t("li",[s._v("keys()：将字典所包含的所有键名以数组形式返回。")]),s._v(" "),t("li",[s._v("values()：将字典所包含的所有数值以数组形式返回。")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-封装字典"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-封装字典"}},[s._v("#")]),s._v(" 2.2.封装字典")]),s._v(" "),t("p",[s._v("字典类可以基于JavaScript中的对象结构来实现，比较简单，这里直接实现字典类中的常用方法。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//封装字典类\nfunction Dictionary(){\n  //字典属性\n  this.items = {}\n\n  //字典操作方法\n  //一.在字典中添加键值对\n  Dictionary.prototype.set = function(key, value){\n    this.items[key] = value\n  }\n\n  //二.判断字典中是否有某个key\n  Dictionary.prototype.has = function(key){\n    return this.items.hasOwnProperty(key)\n  }\n\n  //三.从字典中移除元素\n  Dictionary.prototype.remove = function(key){\n    //1.判断字典中是否有这个key\n    if(!this.has(key)) return false\n\n    //2.从字典中删除key\n    delete this.items[key]\n    return true\n  }\n\n  //四.根据key获取value\n  Dictionary.prototype.get = function(key){\n    return this.has(key) ? this.items[key] : undefined\n  }\n\n  //五.获取所有keys\n  Dictionary.prototype.keys = function(){\n    return Object.keys(this.items)\n  }\n\n  //六.size方法\n  Dictionary.prototype.keys = function(){\n    return this.keys().length\n  }\n\n  //七.clear方法\n  Dictionary.prototype.clear = function(){\n    this.items = {}\n  }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br")])]),t("blockquote",[t("p",[s._v("参考资料:"),t("a",{attrs:{href:"https://www.bilibili.com/video/BV1x7411L7Q7?from=search&seid=3912456004602554239",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript数据结构与算法"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=a.exports}}]);