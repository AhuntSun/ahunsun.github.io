(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{438:function(_,t,v){"use strict";v.r(t);var E=v(27),s=Object(E.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"_10-图解红黑树"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10-图解红黑树"}},[_._v("#")]),_._v(" 10.图解红黑树")]),_._v(" "),v("h2",{attrs:{id:"一、红黑树的五条规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、红黑树的五条规则"}},[_._v("#")]),_._v(" 一、红黑树的五条规则")]),_._v(" "),v("p",[_._v("红黑树除了符合二叉搜索树的基本规则外，还添加了以下特性：")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("规则1：节点是红色或黑色的；")])]),_._v(" "),v("li",[v("strong",[_._v("规则2：根节点是黑色的；")])]),_._v(" "),v("li",[v("strong",[_._v("规则3：每个叶子节点都是黑色的空节点（NIL节点）；")])]),_._v(" "),v("li",[v("strong",[_._v("规则4：每个红色节点的两个子节点都是黑色的（从每个叶子到根的所有路径上不可能有两个连续的红色节点）；")])]),_._v(" "),v("li",[v("strong",[_._v("规则5：从任一节点到其每个叶子节点的所有路径都包含相同数目的黑色节点；")])])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/1.png",alt:"image-20200303121529068"}})]),_._v(" "),v("p",[v("strong",[_._v("红黑树的相对平衡")])]),_._v(" "),v("p",[_._v("前面5条规则的约束确保了以下红黑树的关键特性：")]),_._v(" "),v("ul",[v("li",[_._v("从"),v("strong",[_._v("根到叶子节点")]),_._v("的"),v("strong",[_._v("最长路径")]),_._v("，不会超过"),v("strong",[_._v("最短路径")]),_._v("的"),v("strong",[_._v("两倍")]),_._v("；")]),_._v(" "),v("li",[_._v("结果就是这棵树"),v("strong",[_._v("基本")]),_._v("是平衡的；")]),_._v(" "),v("li",[_._v("虽然没有做到绝对的平衡，但是可以保证在最坏的情况下，该树依然是高效的；")])]),_._v(" "),v("p",[_._v("为什么可以做到"),v("strong",[_._v("最长路径不超过最短路径的两倍")]),_._v("呢？")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("性质4")]),_._v("决定了路径上不能有两个相连的红色节点；")]),_._v(" "),v("li",[_._v("所以，最长路径一定是红色节点和黑色节点交替而成的；")]),_._v(" "),v("li",[_._v("由于根节点和叶子节点都是黑色的，最短路径可能都是黑色节点，并且最长路径中一定是黑色节点多于红色节点；")]),_._v(" "),v("li",[v("strong",[_._v("性质5")]),_._v("决定了所有路径上都有相同数目的黑色节点；")]),_._v(" "),v("li",[_._v("这就表明了没有路径能多于其他任何路径两倍长。")])]),_._v(" "),v("h2",{attrs:{id:"二、红黑树的三种变换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、红黑树的三种变换"}},[_._v("#")]),_._v(" 二、红黑树的三种变换")]),_._v(" "),v("p",[_._v("插入一个新节点时，有可能树不再平衡，可以通过三种方式的变换使树保持平衡：")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("变色")]),_._v("；")]),_._v(" "),v("li",[v("strong",[_._v("左旋转")]),_._v("；")]),_._v(" "),v("li",[v("strong",[_._v("右旋转")]),_._v("；")])]),_._v(" "),v("h3",{attrs:{id:"_2-1-变色"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-变色"}},[_._v("#")]),_._v(" 2.1.变色")]),_._v(" "),v("p",[_._v("为了重新符合红黑树的规则，需要把"),v("strong",[_._v("红色")]),_._v("节点变为"),v("strong",[_._v("黑色")]),_._v("，或者把"),v("strong",[_._v("黑色")]),_._v("节点变为"),v("strong",[_._v("红色")]),_._v("；")]),_._v(" "),v("p",[_._v("插入的"),v("strong",[_._v("新节点")]),_._v("通常都是"),v("strong",[_._v("红色节点")]),_._v("：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当插入的节点为"),v("strong",[_._v("红色")]),_._v("的时候，大多数情况"),v("strong",[_._v("不违反")]),_._v("红黑树的任何规则；")])]),_._v(" "),v("li",[v("p",[_._v("而"),v("strong",[_._v("插入黑色节点，"),v("strong",[_._v("必然会导致一条路径上多了一个")]),_._v("黑色节点")]),_._v("，这是很难调整的；")])]),_._v(" "),v("li",[v("p",[_._v("红色节点虽然可能导致"),v("strong",[_._v("红红相连")]),_._v("的情况，但是这种情况可以通过"),v("strong",[_._v("颜色调换和旋转")]),_._v("来调整；")])])]),_._v(" "),v("h3",{attrs:{id:"_2-2-左旋转"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-左旋转"}},[_._v("#")]),_._v(" 2.2.左旋转")]),_._v(" "),v("p",[_._v("以节点X为根"),v("strong",[_._v("逆时针")]),_._v("旋转二叉搜索树，使得父节点原来的位置被自己的右子节点替代，左子节点的位置被父节点替代；")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/2.png",alt:"image-20200303132706061"}})]),_._v(" "),v("p",[v("strong",[_._v("详解：")])]),_._v(" "),v("p",[_._v("如上图所示，左旋转之后：")]),_._v(" "),v("ul",[v("li",[_._v("节点X取代了节点a原来的位置；")]),_._v(" "),v("li",[_._v("节点Y取代了节点X原来的位置；")]),_._v(" "),v("li",[_._v("节点X的"),v("strong",[_._v("左子树")]),_._v(" a 仍然是节点X的"),v("strong",[_._v("左子树")]),_._v("（这里X的左子树只有一个节点，有多个节点时同样适用，以下同理）；")]),_._v(" "),v("li",[_._v("节点Y的"),v("strong",[_._v("右子树")]),_._v(" c 仍然是节点Y的"),v("strong",[_._v("右子树")]),_._v("；")]),_._v(" "),v("li",[_._v("节点Y的"),v("strong",[_._v("左子树")]),_._v(" b 向"),v("strong",[_._v("左平移")]),_._v("成为了节点X的"),v("strong",[_._v("右子树")]),_._v("；")])]),_._v(" "),v("p",[_._v("除此之外，二叉搜索树左旋转之后仍为二叉搜索树：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/3.png",alt:"image-20200303132617108"}})]),_._v(" "),v("h3",{attrs:{id:"_2-3-右旋转"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-右旋转"}},[_._v("#")]),_._v(" 2.3.右旋转")]),_._v(" "),v("p",[_._v("以节点X为根"),v("strong",[_._v("顺时针")]),_._v("旋转二叉搜索树，使得父节点原来的位置被自己的左子节点替代，右子节点的位置被父节点替代；")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/4.png",alt:"image-20200303132529476"}})]),_._v(" "),v("p",[v("strong",[_._v("详解：")])]),_._v(" "),v("p",[_._v("如上图所示，右旋转之后：")]),_._v(" "),v("ul",[v("li",[_._v("节点X取代了节点a原来的位置；")]),_._v(" "),v("li",[_._v("节点Y取代了节点X原来的位置；")]),_._v(" "),v("li",[_._v("节点X的"),v("strong",[_._v("右子树")]),_._v(" a 仍然是节点X的"),v("strong",[_._v("右子树")]),_._v("（这里X的右子树虽然只有一个节点，但是多个节点时同样适用，以下同理）；")]),_._v(" "),v("li",[_._v("节点Y的"),v("strong",[_._v("左子树")]),_._v(" b 仍然是节点Y的"),v("strong",[_._v("左子树")]),_._v("；")]),_._v(" "),v("li",[_._v("节点Y的"),v("strong",[_._v("右子树 "),v("strong",[_._v("c 向")]),_._v("右平移")]),_._v("成为了节点X的"),v("strong",[_._v("左子树")]),_._v("；")])]),_._v(" "),v("p",[_._v("除此之外，二叉搜索树右旋转之后仍为二叉搜索树：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/5.png",alt:"image-20200303132501369"}})]),_._v(" "),v("h2",{attrs:{id:"三、红黑树的插入操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、红黑树的插入操作"}},[_._v("#")]),_._v(" 三、红黑树的插入操作")]),_._v(" "),v("p",[_._v("首先需要明确，在保证满足红黑树5条规则的情况下，新插入的节点必然是"),v("strong",[_._v("红色节点")]),_._v("。")]),_._v(" "),v("p",[_._v("为了方便说明，规定以下四个节点：新插入节点为"),v("strong",[_._v("N")]),_._v("（Node），N的父节点为"),v("strong",[_._v("P")]),_._v("（Parent），P的兄弟节点为"),v("strong",[_._v("U")]),_._v("（Uncle），U的父节点为"),v("strong",[_._v("G")]),_._v("（Grandpa），如下图所示：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/6.png",alt:"image-20200303120344016"}})]),_._v(" "),v("h3",{attrs:{id:"_3-1-情况1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-情况1"}},[_._v("#")]),_._v(" 3.1.情况1")]),_._v(" "),v("p",[_._v("当插入的新节点N位于树的根上时，没有父节点。")]),_._v(" "),v("p",[_._v("这种情况下，只需要将红色节点变为黑色节点即可满足规则2 。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/7.png",alt:"image-20200303132357511"}})]),_._v(" "),v("h3",{attrs:{id:"_3-2-情况2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-情况2"}},[_._v("#")]),_._v(" 3.2.情况2")]),_._v(" "),v("p",[_._v("新界点N的父节点P为黑色节点，此时不需要任何变化。")]),_._v(" "),v("p",[_._v("此时既满足规则4也满足规则5。尽管新节点是红色的，但是新节点N有两个黑色节点NIL，所以通向它的路径上黑色节点的个数依然相等，因此满足规则5 。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/8.png",alt:"image-20200303132304098"}})]),_._v(" "),v("h3",{attrs:{id:"_3-3-情况3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-情况3"}},[_._v("#")]),_._v(" 3.3.情况3")]),_._v(" "),v("p",[_._v("节点P为红色，节点U也为红色，此时节点G必为黑色，即"),v("strong",[_._v("父红叔红祖黑")]),_._v("。")]),_._v(" "),v("p",[_._v("在这种情况下需要：")]),_._v(" "),v("ul",[v("li",[_._v("先将父节点P变为黑色；")]),_._v(" "),v("li",[_._v("再将叔叔节点U变为黑色；")]),_._v(" "),v("li",[_._v("最后将祖父节点G变为红色；")])]),_._v(" "),v("p",[_._v("即变为"),v("strong",[_._v("父黑叔黑祖红")]),_._v("，如下图所示：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/9.png",alt:"image-20200303132148128"}})]),_._v(" "),v("p",[_._v("可能出现的问题：")]),_._v(" "),v("ul",[v("li",[_._v("N的祖父节点G的父节点也可能是红色，这就违反了规则4，此时可以通过递归调整节点颜色；")]),_._v(" "),v("li",[_._v("当递归调整到根节点时就需要旋转了，如下图节点A和节点B所示，具体情况后面会介绍；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/10.png",alt:"image-20200303132050765"}})]),_._v(" "),v("h3",{attrs:{id:"_3-4-情况4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-情况4"}},[_._v("#")]),_._v(" 3.4.情况4")]),_._v(" "),v("p",[_._v("节点P是红色节点，节点U是黑色节点，并且节点N为节点P的"),v("strong",[_._v("左子节点")]),_._v("，此时节点G一定是黑色节点，即"),v("strong",[_._v("父红叔黑祖黑")]),_._v("。")]),_._v(" "),v("p",[_._v("在这种情况下需要：")]),_._v(" "),v("ul",[v("li",[_._v("先变色：将父节点P变为黑色，将祖父节点G变为红色；")]),_._v(" "),v("li",[_._v("后旋转：以祖父节点G为根进行右旋转；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/11.png",alt:"image-20200303131956298"}})]),_._v(" "),v("h3",{attrs:{id:"_3-5-情况5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-情况5"}},[_._v("#")]),_._v(" 3.5.情况5")]),_._v(" "),v("p",[_._v("节点P是红色节点，节点U是黑色节点，并且节点N为节点P的"),v("strong",[_._v("右子节点")]),_._v("，此时节点G一定是黑色节点，即"),v("strong",[_._v("父红叔黑祖黑")]),_._v("。")]),_._v(" "),v("p",[_._v("在这种情况下需要：")]),_._v(" "),v("ul",[v("li",[_._v("先以节点P为根进行左旋转，旋转后如图b所示；")]),_._v(" "),v("li",[_._v("随后将"),v("strong",[_._v("红色")]),_._v("节点"),v("strong",[_._v("P")]),_._v("和"),v("strong",[_._v("黑色")]),_._v("节点"),v("strong",[_._v("B")]),_._v("看成一个整体的"),v("strong",[_._v("红色")]),_._v("节点"),v("strong",[_._v("N1")]),_._v("，将新插入的"),v("strong",[_._v("红色")]),_._v("节点"),v("strong",[_._v("N")]),_._v("看成"),v("strong",[_._v("红色")]),_._v("节点"),v("strong",[_._v("P1")]),_._v(" 如图c所示。此时整体就转换为了情况4。")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/12.png",alt:"image-20200303140225631"}})]),_._v(" "),v("p",[_._v("接着可以按照情况4进行处理：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("先变色：将N1节点的父节点P1变为黑色，将祖父节点G变为红色；")])]),_._v(" "),v("li",[v("p",[_._v("后旋转：以祖父节点G为根进行右旋转，旋转后如图 e 所示；")])]),_._v(" "),v("li",[v("p",[_._v("最后将节点N1和P1变换回来，完成节点N的插入，如图 f 所示；")])])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/13.png",alt:"image-20200303131736316"}})]),_._v(" "),v("h3",{attrs:{id:"_3-6-案例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-案例"}},[_._v("#")]),_._v(" 3.6.案例")]),_._v(" "),v("p",[_._v("在二叉树中依次插入节点：10，9，8，7，6，5，4，3，2，1 。")]),_._v(" "),v("p",[_._v("如果直接采用普通的二叉搜索树，节点全部插入后是这样的：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/14.png",alt:"image-20200303161149709"}})]),_._v(" "),v("p",[_._v("是一个严重的"),v("strong",[_._v("不平衡树")]),_._v("，相当于一个链表，不能体现出二叉搜索树的高效率。而按照红黑树的五条规则插入节点就能最大程度保证搜索二叉树是一棵"),v("strong",[_._v("平衡树")]),_._v("。以下为过程详解："),v("strong",[_._v("为了方便解释省略了部分红黑树的叶子节点（NIL）")])]),_._v(" "),v("h4",{attrs:{id:"插入10"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入10"}},[_._v("#")]),_._v(" 插入10")]),_._v(" "),v("p",[_._v("符合"),v("strong",[_._v("情况1")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("插入节点10；")]),_._v(" "),v("li",[_._v("将节点10的颜色变为黑色；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/15.png",alt:"image-20200303161257010"}})]),_._v(" "),v("h4",{attrs:{id:"插入9"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入9"}},[_._v("#")]),_._v(" 插入9")]),_._v(" "),v("p",[_._v("符合"),v("strong",[_._v("情况2")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("不需要任何变化；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/16.png",alt:"image-20200303161919072"}})]),_._v(" "),v("h4",{attrs:{id:"插入8"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入8"}},[_._v("#")]),_._v(" 插入8")]),_._v(" "),v("blockquote",[v("p",[_._v("快速判断属于情况3还是情况4的方法：")]),_._v(" "),v("p",[_._v("从新插入的节点N出发，按图示箭头经过的四个节点，若为"),v("strong",[_._v("红红黑红")]),_._v("3个红色节点则为情况3，若为"),v("strong",[_._v("红红黑黑")]),_._v("两个红色节点则为情况4；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/17.png",alt:"image-20200303162613413"}})]),_._v(" "),v("p",[_._v("符合"),v("strong",[_._v("情况4")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点9变成黑，祖父节点10变为红；")]),_._v(" "),v("li",[_._v("以祖父节点为根进行右旋转；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/18.png",alt:"image-20200303163803388"}})]),_._v(" "),v("h4",{attrs:{id:"插入7"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入7"}},[_._v("#")]),_._v(" 插入7")]),_._v(" "),v("p",[_._v("符合"),v("strong",[_._v("情况3")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点8和叔节点10变为黑，祖父节点9变为红；")]),_._v(" "),v("li",[_._v("此时会出现问题：不符合规则2，即根节点不为黑，此时可以把以9为根节点的二叉搜索树当作一个整体作为一个新插入的节点N，而此时又符合情况1，只需要把9变回黑色即可。")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/19.png",alt:"image-20200303165135028"}})]),_._v(" "),v("h4",{attrs:{id:"插入6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入6"}},[_._v("#")]),_._v(" 插入6")]),_._v(" "),v("p",[_._v("符合"),v("strong",[_._v("情况4")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点7变为黑，祖父节点8变为红；")]),_._v(" "),v("li",[_._v("以祖父节点8为根进行右旋转；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/20.png",alt:"image-20200306170016958"}})]),_._v(" "),v("h4",{attrs:{id:"插入5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入5"}},[_._v("#")]),_._v(" 插入5")]),_._v(" "),v("p",[_._v("符合"),v("strong",[_._v("情况3")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点6和叔节点8变为黑，祖父节点7变为红；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/21.png",alt:"image-20200303170150314"}})]),_._v(" "),v("h4",{attrs:{id:"插入4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入4"}},[_._v("#")]),_._v(" 插入4")]),_._v(" "),v("p",[_._v("符合"),v("strong",[_._v("情况4")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点5变为黑，祖父节点6变为红；")]),_._v(" "),v("li",[_._v("以祖父节点6为根进行右旋转；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/22.png",alt:"image-20200303171028009"}})]),_._v(" "),v("h4",{attrs:{id:"插入3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入3"}},[_._v("#")]),_._v(" 插入3")]),_._v(" "),v("p",[v("strong",[_._v("第一次变换")]),_._v("：符合"),v("strong",[_._v("情况3")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点4和叔节点6变为黑，祖父节点5变为红；")])]),_._v(" "),v("p",[_._v("变换之后发现5和7为相连的两个红色节点，于是把以5为根的整个子树看成一个新插入的节点N1，再进行第二次变换。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/23.png",alt:"image-20200303171755035"}})]),_._v(" "),v("p",[v("strong",[_._v("第二次变换")]),_._v("：符合"),v("strong",[_._v("情况4")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点7变为黑，祖父节点9变为红；")]),_._v(" "),v("li",[_._v("以祖父节点9为根进行右旋转；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/24.png",alt:"image-20200303172800302"}})]),_._v(" "),v("p",[_._v("最后复原N1得到变换后的红黑树：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/25.png",alt:"image-20200303173158141"}})]),_._v(" "),v("h4",{attrs:{id:"插入2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入2"}},[_._v("#")]),_._v(" 插入2")]),_._v(" "),v("p",[_._v("符合"),v("strong",[_._v("情况4")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点3变为黑，祖父节点4变为红；")]),_._v(" "),v("li",[_._v("以祖父节点4为根进行右旋转；")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/26.png",alt:"image-20200303174011409"}})]),_._v(" "),v("h4",{attrs:{id:"插入1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入1"}},[_._v("#")]),_._v(" "),v("strong",[_._v("插入1")])]),_._v(" "),v("p",[v("strong",[_._v("第一次变换")]),_._v("：符合"),v("strong",[_._v("情况3")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点2和叔节点4变为黑，祖父节点3变为红；")])]),_._v(" "),v("p",[_._v("变换之后发现3和5为相连的两个红色节点，于是把以3为根的整个子树看成一个新插入的节点N1，再进行第二次变换。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/27.png",alt:"image-20200303180603741"}})]),_._v(" "),v("p",[v("strong",[_._v("第二次变换")]),_._v("：符合"),v("strong",[_._v("情况3")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("父节点5和叔节点9变为黑，祖父节点7变为红；即由图 b -> 图 c 。")])]),_._v(" "),v("p",[_._v("变换之后发现根节点7为红色不符合规则2，所以把以7为根节点的红黑树看成一个新插入的节点N2，再进行第三次变换。")]),_._v(" "),v("p",[v("strong",[_._v("第三次变换")]),_._v("：符合"),v("strong",[_._v("情况1")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("直接将根节点7变为黑色即可。")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/28.png",alt:"image-20200303181133397"}})]),_._v(" "),v("p",[_._v("由此，完成了1~10节点的插入，虽然没有遇到情况5，不过情况5经过左旋转的操作便可转换为情况4，原理一样。如下图所示，将这棵红黑树的叶子节点NIL补全之后，经检验满足红黑树的五条规则，并且基本属于"),v("strong",[_._v("平衡树")]),_._v("，效率较高。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%A2%E9%BB%91%E6%A0%91/29.png",alt:"image-20200303182326442"}})]),_._v(" "),v("h2",{attrs:{id:"四、红黑树的删除操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、红黑树的删除操作"}},[_._v("#")]),_._v(" 四、红黑树的删除操作")]),_._v(" "),v("p",[_._v("红黑树的删除操作结合了复杂的"),v("strong",[_._v("二叉树的删除操作")]),_._v("和复杂的"),v("strong",[_._v("红黑树的插入规则")]),_._v("，整体来说难度非常大，篇幅较长，这里暂不进行探讨。")]),_._v(" "),v("blockquote",[v("p",[_._v("参考资料："),v("a",{attrs:{href:"https://www.bilibili.com/video/av86801505?from=search&seid=4967761411915016256",target:"_blank",rel:"noopener noreferrer"}},[_._v("JavaScript数据结构与算法"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);