(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{331:function(s,t,a){"use strict";a.r(t);var n=a(33),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_12-栈空间和堆空间：数据是如何存储的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-栈空间和堆空间：数据是如何存储的"}},[s._v("#")]),s._v(" 12.栈空间和堆空间：数据是如何存储的")]),s._v(" "),a("p",[s._v("对于前端开发者来说，"),a("code",[s._v("JavaScript")]),s._v(" 的内存机制是一个不被经常提及的概念 ，因此很容易被忽视。特别是一些非计算机专业的同学，对内存机制可能没有非常清晰的认识，甚至有些同学根本就不知道 "),a("code",[s._v("JavaScript")]),s._v(" 的内存机制是什么?")]),s._v(" "),a("p",[s._v("但是如果你想成为行业专家，并打造高性能前端应用，那么你就必须要搞清楚"),a("code",[s._v("JavaScript")]),s._v(" 的内存机制了。")]),s._v(" "),a("p",[s._v("其实，要搞清楚 "),a("code",[s._v("JavaScript")]),s._v(" 的内存机制并不是一件很困难的事，在接下来的三篇文章（数据在内存中的存放、"),a("code",[s._v("JavaScript")]),s._v(" 处理垃圾回收以及 "),a("code",[s._v("V8")]),s._v(" 执行代码）中，我们将通过内存机制的介绍，循序渐进带你走进 "),a("code",[s._v("JavaScript")]),s._v(" 内存的世界。")]),s._v(" "),a("p",[s._v("今天我们讲述第一部分的内容——"),a("code",[s._v("JavaScript")]),s._v(" 中的数据是如何存储在内存中的。虽然 "),a("code",[s._v("JavaScript")]),s._v(" 并不需要直接去管理内存，但是在实际项目中为了能避开一些不必要的坑，你还是需要了解数据在内存中的存储方式的。")]),s._v(" "),a("h2",{attrs:{id:"让人疑惑的代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#让人疑惑的代码"}},[s._v("#")]),s._v(" 让人疑惑的代码")]),s._v(" "),a("p",[s._v("首先，我们先看下面这两段代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客邦 "')]),s._v(" \n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//极客邦")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//极客邦")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("若执行上述这两段代码，你知道它们输出的结果是什么吗？下面我们就来一个一个分析下。")]),s._v(" "),a("p",[s._v("执行第一段代码，打印出来 "),a("code",[s._v("a")]),s._v(" 的值是 "),a("code",[s._v("2")]),s._v("，"),a("code",[s._v("b")]),s._v(" 的值是 "),a("code",[s._v("1")]),s._v("，这没什么难以理解的。")]),s._v(" "),a("p",[s._v("接着，再执行第二段代码，你会发现，仅仅改变了 "),a("code",[s._v("a")]),s._v(" 中 "),a("code",[s._v("name")]),s._v(" 的属性值，但是最终 "),a("code",[s._v("a")]),s._v(" 和 "),a("code",[s._v("b")]),s._v(" 打印出来的值都是{"),a("code",[s._v("name:")]),s._v('"极客邦"}。这就和我们预期的不一致了，因为我们想改变的仅仅是 '),a("code",[s._v("a")]),s._v(" 的内容，但 "),a("code",[s._v("b")]),s._v(" 的内容也同时被改变了。")]),s._v(" "),a("p",[s._v("要彻底弄清楚这个问题，我们就得先从“"),a("code",[s._v("JavaScript")]),s._v(" 是什么类型的语言”讲起。")]),s._v(" "),a("h2",{attrs:{id:"javascript-是什么类型的语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-是什么类型的语言"}},[s._v("#")]),s._v(" "),a("code",[s._v("JavaScript")]),s._v(" 是什么类型的语言")]),s._v(" "),a("p",[s._v("每种编程语言都具有内建的数据类型，但它们的数据类型常有不同之处，使用方式也很不一样，比如 "),a("code",[s._v("C")]),s._v(" 语言在定义变量之前，就需要确定变量的类型，你可以看下面这段 "),a("code",[s._v("C")]),s._v(" 代码：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   bool c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("上述代码声明变量的特点是：在声明变量之前需要先定义变量类型。我们把这种在"),a("strong",[s._v("使用之前")]),s._v("就需要"),a("strong",[s._v("确认其变量数据")]),s._v("类型的称为"),a("strong",[s._v("静态语言")]),s._v("。")]),s._v(" "),a("p",[s._v("相反地，我们把在"),a("strong",[s._v("运行过程中")]),s._v("需要"),a("strong",[s._v("检查数据类型")]),s._v("的语言称为"),a("strong",[s._v("动态语言")]),s._v("。比如我们所讲的 "),a("code",[s._v("JavaScript")]),s._v(" 就是动态语言，因为在声明变量之前并不需要确认其数据类型。")]),s._v(" "),a("p",[s._v("虽然 "),a("code",[s._v("C")]),s._v(" 语言是静态，但是在 "),a("code",[s._v("C")]),s._v(" 语言中，我们可以把其他类型数据赋予给一个声明好的变量，如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("c = a\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("前面代码中，我们把 "),a("code",[s._v("int")]),s._v(" 型的变量 "),a("code",[s._v("a")]),s._v(" 赋值给了 "),a("code",[s._v("bool")]),s._v(" 型的变量 "),a("code",[s._v("c")]),s._v("，这段代码也是可以编译执行的，因为在赋值过程中，"),a("code",[s._v("C")]),s._v(" 编译器会把 "),a("code",[s._v("int")]),s._v(" 型的变量悄悄转换为 "),a("code",[s._v("bool")]),s._v(" 型的变量，我们通常把这种偷偷转换的操作称为"),a("strong",[s._v("隐式类型转换")]),s._v("。而支持隐式类型转换的语言称为"),a("strong",[s._v("弱类型语言")]),s._v("，不支持隐式类型转换的语言称为"),a("strong",[s._v("强类型语言")]),s._v("。在这点上，"),a("code",[s._v("C")]),s._v(" 和 "),a("code",[s._v("JavaScript")]),s._v(" 都是"),a("strong",[s._v("弱类型语言")]),s._v("。")]),s._v(" "),a("p",[s._v("对于各种语言的类型，你可以参考下图")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part3/ls12/1.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"javascript-的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的数据类型"}},[s._v("#")]),s._v(" "),a("code",[s._v("JavaScript")]),s._v(" 的数据类型")]),s._v(" "),a("p",[s._v("现在我们知道了，"),a("code",[s._v("JavaScript")]),s._v(" 是一种"),a("strong",[s._v("弱类型")]),s._v("的、"),a("strong",[s._v("动态")]),s._v("的语言。那这些特点意味着什么呢？")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("弱类型")]),s._v("，意味着你不需要告诉 "),a("code",[s._v("JavaScript")]),s._v(" 引擎这个或那个变量是什么"),a("strong",[s._v("数据类型")]),s._v("，"),a("code",[s._v("JavaScript")]),s._v(" 引擎在运行代码的时候自己会计算出来。")]),s._v(" "),a("li",[a("strong",[s._v("动态")]),s._v("，意味着你可以使用同一个变量保存不同类型的数据；")])]),s._v(" "),a("p",[s._v("那么接下来，我们再来看看 "),a("code",[s._v("JavaScript")]),s._v(" 的数据类型，你可以看下面这段代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" bar\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" \nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),s._v("\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("从上述代码中你可以看出，我们声明了一个 "),a("code",[s._v("bar")]),s._v(" 变量，然后可以使用各种类型的数据值赋予给该变量。")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("JavaScript")]),s._v(" 中，如果你想要查看一个变量到底是什么类型，可以使用“"),a("code",[s._v("typeof")]),s._v("”运算符。具体使用方式如下所示：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" bar\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//undefined")]),s._v("\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" \nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//number")]),s._v("\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//string")]),s._v("\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//boolean")]),s._v("\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//object")]),s._v("\nbar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//object")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("执行这段代码，你可以看到打印出来了不同的数据类型，有 "),a("code",[s._v("undefined")]),s._v("、"),a("code",[s._v("number")]),s._v("、"),a("code",[s._v("boolean")]),s._v("、"),a("code",[s._v("object")]),s._v(" 等。那么接下来我们就来谈谈 "),a("code",[s._v("JavaScript")]),s._v(" 到底有多少种数据类型。")]),s._v(" "),a("p",[s._v("其实 "),a("code",[s._v("JavaScript")]),s._v(" 中的数据类型一种有 "),a("code",[s._v("8")]),s._v(" 种，它们分别是：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part3/ls12/2.png",alt:""}})]),s._v(" "),a("p",[s._v("了解这些类型之后，还有三点需要你注意一下。")]),s._v(" "),a("p",[s._v("第一点，使用 "),a("code",[s._v("typeof")]),s._v(" 检测 "),a("code",[s._v("Null")]),s._v(" 类型时，返回的是 "),a("code",[s._v("Object")]),s._v("。这是当初 "),a("code",[s._v("JavaScript")]),s._v(" 语言的一个 "),a("code",[s._v("Bug")]),s._v("，一直保留至今，之所以一直没修改过来，主要是为了兼容老的代码。")]),s._v(" "),a("p",[s._v("第二点，"),a("code",[s._v("Object")]),s._v(" 类型比较特殊，它是由上述 "),a("code",[s._v("7")]),s._v(" 种类型组成的一个包含了 "),a("code",[s._v("key-value")]),s._v(" 对的数据类型。如下所示：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" myObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'极客时间'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("update")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("从中你可以看出来，"),a("code",[s._v("Object")]),s._v(" 是由 "),a("code",[s._v("key-value")]),s._v(" 组成的，其中的 "),a("code",[s._v("vaule")]),s._v(" 可以是任何类型，包括函数，这也就意味着你可以通过 "),a("code",[s._v("Object")]),s._v(" 来存储函数，"),a("code",[s._v("Object")]),s._v(" 中的函数又称为方法，比如上述代码中的 "),a("code",[s._v("update")]),s._v(" 方法。")]),s._v(" "),a("p",[s._v("第三点，我们把前面的 "),a("code",[s._v("7")]),s._v(" 种数据类型称为"),a("strong",[s._v("原始类型")]),s._v("，把最后一个对象类型称为"),a("strong",[s._v("引用类型")]),s._v("，之所以把它们区分为两种不同的类型，是因为它们在内存中存放的位置不一样。到底怎么个不一样法呢？接下来，我们就来讲解一下 "),a("code",[s._v("JavaScript")]),s._v(" 的原始类型和引用类型到底是怎么储存的。")]),s._v(" "),a("h2",{attrs:{id:"内存空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存空间"}},[s._v("#")]),s._v(" 内存空间")]),s._v(" "),a("p",[s._v("要理解 "),a("code",[s._v("JavaScript")]),s._v(" 在运行过程中数据是如何存储的，你就得先搞清楚其存储空间的种类。下面是我画的 "),a("code",[s._v("JavaScript")]),s._v(" 的内存模型，你可以参考下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part3/ls12/3.png",alt:""}})]),s._v(" "),a("p",[s._v("从图中可以看出， 在 "),a("code",[s._v("JavaScript")]),s._v(" 的执行过程中， 主要有三种类型内存空间，分别是"),a("strong",[s._v("代码空间")]),s._v("、"),a("strong",[s._v("栈空间")]),s._v("和"),a("strong",[s._v("堆空间")]),s._v("。")]),s._v(" "),a("p",[s._v("其中的代码空间主要是存储"),a("strong",[s._v("可执行代码")]),s._v("的，这个我们后面再做介绍，今天主要来说说"),a("strong",[s._v("栈空间")]),s._v("和"),a("strong",[s._v("堆空间")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"栈空间和堆空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈空间和堆空间"}},[s._v("#")]),s._v(" 栈空间和堆空间")]),s._v(" "),a("p",[s._v("这里的栈空间就是我们之前反复提及的"),a("strong",[s._v("调用栈")]),s._v("，是用来"),a("strong",[s._v("存储执行上下文")]),s._v("的。为了搞清楚栈空间是如何存储数据的，我们还是先看下面这段代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("前面文章我们已经讲解过了，当执行一段代码时，需要"),a("strong",[s._v("先编译")]),s._v("，并"),a("strong",[s._v("创建执行上下文")]),s._v("，然后再按照顺序执行代码。那么下面我们来看看，当执行到第 3 行代码时，其调用栈的状态，你可以参考下面这张调用栈状态图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part3/ls12/4.png",alt:""}})]),s._v(" "),a("p",[s._v("从图中可以看出来，当执行到第 "),a("code",[s._v("3")]),s._v(" 行时，变量 "),a("code",[s._v("a")]),s._v(" 和变量 "),a("code",[s._v("b")]),s._v("的值都被保存在执行上下文中，而执行上下文又被压入到栈中，所以你也可以认为变量 "),a("code",[s._v("a")]),s._v(" 和变量"),a("code",[s._v("b")]),s._v(" 的值都是存放在栈中的。")]),s._v(" "),a("p",[s._v("接下来继续执行第 "),a("code",[s._v("4")]),s._v(" 行代码，由于 "),a("code",[s._v("JavaScript")]),s._v(" 引擎判断右边的值是一个"),a("strong",[s._v("引用类型")]),s._v("，这时候处理的情况就不一样了，"),a("code",[s._v("JavaScript")]),s._v(" 引擎并不是直接将该对象存放到"),a("strong",[s._v("变量环境")]),s._v("中，而是将它分配到"),a("strong",[s._v("堆空间")]),s._v("里面，分配后该对象会有一个在“堆”中的地址，然后再将该数据的地址写进 "),a("code",[s._v("c")]),s._v(" 的变量值，最终分配好内存的示意图如下所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part3/ls12/5.png",alt:""}})]),s._v(" "),a("p",[s._v("从上图你可以清晰地观察到，"),a("strong",[s._v("对象类型")]),s._v("是存放在"),a("strong",[s._v("堆")]),s._v("空间的，在"),a("strong",[s._v("栈")]),s._v("空间中只是"),a("strong",[s._v("保留")]),s._v("了"),a("strong",[s._v("对象的引用地址")]),s._v("，当 "),a("code",[s._v("JavaScript")]),s._v(" 需要访问该数据的时候，是通过栈中的"),a("strong",[s._v("引用地址")]),s._v("来访问的，相当于多了一道转手流程。")]),s._v(" "),a("p",[s._v("好了，现在你应该知道了原始类型的数据值都是直接保存在“栈”中的，引用类型的值是存放在“堆”中的。不过你也许会好奇，为什么一定要分“"),a("strong",[s._v("堆")]),s._v("”和“"),a("strong",[s._v("栈")]),s._v("”两个存储空间呢？所有数据直接存放在“栈”中不就可以了吗？")]),s._v(" "),a("p",[s._v("答案是不可以的。这是因为 "),a("code",[s._v("JavaScript")]),s._v(" 引擎需要用"),a("strong",[s._v("栈")]),s._v("来维护程序执行期间"),a("strong",[s._v("上下文")]),s._v("的状态，如果栈空间大了话，所有的数据都存放在栈空间里面，那么会"),a("strong",[s._v("影响到上下文切换的效率")]),s._v("，进而又影响到整个程序的执行效率。比如文中的 "),a("code",[s._v("foo")]),s._v(" 函数执行结束了，"),a("code",[s._v("JavaScript")]),s._v(" 引擎需要离开当前的执行上下文，只需要将指针下移到上个执行上下文的地址就可以了，"),a("code",[s._v("foo")]),s._v(" 函数执行上下文栈区空间全部回收，具体过程你可以参考下图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part3/ls12/6.png",alt:""}})]),s._v(" "),a("p",[s._v("所以通常情况下，栈空间都"),a("strong",[s._v("不会设置太大")]),s._v("，主要用来存放一些"),a("strong",[s._v("原始类型的小数据")]),s._v("。而引用类型的数据占用的空间都比较大，所以这一类数据会被存放到"),a("strong",[s._v("堆")]),s._v("中，"),a("strong",[s._v("堆空间很大")]),s._v("，能存放很多大的数据，不过缺点是"),a("strong",[s._v("分配内存和回收内存")]),s._v("都会"),a("strong",[s._v("占用一定的时间")]),s._v("。")]),s._v(" "),a("p",[s._v("解释了程序在执行过程中为什么需要堆和栈两种数据结构后，我们还是回到示例代码那里，看看它最后一步将变量 "),a("code",[s._v("c")]),s._v(" 赋值给变量 "),a("code",[s._v("d")]),s._v(" 是怎么执行的？")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("JavaScript")]),s._v("中，赋值操作和其他语言有很大的不同，"),a("strong",[s._v("原始类型")]),s._v("的赋值会完整"),a("strong",[s._v("复制变量值")]),s._v("，而"),a("strong",[s._v("引用类型")]),s._v("的赋值是"),a("strong",[s._v("复制引用地址")]),s._v("。")]),s._v(" "),a("p",[s._v("所以"),a("code",[s._v("d=c")]),s._v("的操作就是把 "),a("code",[s._v("c")]),s._v(" 的引用地址赋值给 "),a("code",[s._v("d")]),s._v("，你可以参考下图")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part3/ls12/7.png",alt:""}})]),s._v(" "),a("p",[s._v("从图中你可以看到，变量 "),a("code",[s._v("c")]),s._v("和变量 "),a("code",[s._v("d")]),s._v(" 都指向了同一个堆中的对象，所以这就很好地解释了文章开头的那个问题，通过 "),a("code",[s._v("c")]),s._v(" 修改 "),a("code",[s._v("name")]),s._v(" 的值，变量 "),a("code",[s._v("d")]),s._v(" 的值也跟着改变，归根结底它们是同一个对象。")]),s._v(" "),a("h2",{attrs:{id:"再谈闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#再谈闭包"}},[s._v("#")]),s._v(" 再谈闭包")]),s._v(" "),a("p",[s._v("现在你知道了作用域内的"),a("strong",[s._v("原始类型数据")]),s._v("会被"),a("strong",[s._v("存储到栈")]),s._v("空间，"),a("strong",[s._v("引用类型")]),s._v("会被存储到"),a("strong",[s._v("堆空间")]),s._v("，基于这两点的认知，我们再深入一步，探讨下闭包的内存模型。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" test1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" test2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" innerBar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("setName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("newName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" newName\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("getName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" myName\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" innerBar\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客邦 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("当执行这段代码的时候，你应该有过这样的分析：由于变量 "),a("code",[s._v("myName")]),s._v("、"),a("code",[s._v("test1")]),s._v("、"),a("code",[s._v("test2")]),s._v(" 都是原始类型数据，所以在执行 "),a("code",[s._v("foo")]),s._v(" 函数的时候，它们会被压入到"),a("strong",[s._v("调用栈")]),s._v("中；当 "),a("code",[s._v("foo")]),s._v(" 函数执行结束之后，调用栈中 "),a("code",[s._v("foo")]),s._v(" 函数的"),a("strong",[s._v("执行上下文")]),s._v("会被销毁，其内部变量 "),a("code",[s._v("myName")]),s._v("、"),a("code",[s._v("test1")]),s._v("、"),a("code",[s._v("test2")]),s._v(" 也应该一同被销毁。")]),s._v(" "),a("p",[s._v("要解释这个现象，我们就得站在内存模型的角度来分析这段代码的执行流程。")]),s._v(" "),a("ul",[a("li",[s._v("当 "),a("code",[s._v("JavaScript")]),s._v(" 引擎执行到 "),a("code",[s._v("foo")]),s._v(" 函数时，首先会"),a("strong",[s._v("编译")]),s._v("，并创建一个空执行上下文。")]),s._v(" "),a("li",[s._v("在编译过程中，遇到内部函数 "),a("code",[s._v("setName")]),s._v("，"),a("code",[s._v("JavaScript")]),s._v(" 引擎还要对内部函数做一次快速的"),a("strong",[s._v("词法扫描")]),s._v("，发现该内部函数引用了"),a("code",[s._v("foo")]),s._v(" - 函数中的 "),a("code",[s._v("myName")]),s._v(" 变量，由于是内部函数引用了外部函数的变量，所以 "),a("code",[s._v("JavaScript")]),s._v(" 引擎判断这是一个"),a("strong",[s._v("闭包")]),s._v("，于是在堆空间创建换一个“"),a("code",[s._v("closure(foo)")]),s._v("”的对象（这是一个内部对象，"),a("code",[s._v("JavaScript")]),s._v(" 是无法访问的），用来保存 "),a("code",[s._v("myName")]),s._v(" 变量。")]),s._v(" "),a("li",[s._v("接着继续扫描到 "),a("code",[s._v("getName")]),s._v(" 方法时，发现该函数内部还引用变量 "),a("code",[s._v("test1")]),s._v("，于是 "),a("code",[s._v("JavaScript")]),s._v(" 引擎又将 "),a("code",[s._v("test1")]),s._v(" 添加到“"),a("code",[s._v("closure(foo)")]),s._v("”对象中。这时候堆中的“"),a("code",[s._v("closure(foo)")]),s._v("”对象中就包含了 "),a("code",[s._v("myName")]),s._v(" 和 "),a("code",[s._v("test1")]),s._v(" 两个变量了。")]),s._v(" "),a("li",[s._v("由于 "),a("code",[s._v("test2")]),s._v(" 并没有被内部函数引用，所以 "),a("code",[s._v("test2")]),s._v(" 依然保存在调用栈中")])]),s._v(" "),a("p",[s._v("通过上面的分析，我们可以画出执行到 "),a("code",[s._v("foo")]),s._v(" 函数中“"),a("code",[s._v("return innerBar")]),s._v("”语句时的调用栈状态，如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://ahuntsun.gitee.io/blogimagebed/img/browser/part3/ls12/8.png",alt:""}})]),s._v(" "),a("p",[s._v("从上图你可以清晰地看出，当执行到 "),a("code",[s._v("foo")]),s._v(" 函数时，"),a("strong",[s._v("闭包")]),s._v("就产生了；当 "),a("code",[s._v("foo")]),s._v(" 函数执行结束之后，返回的 "),a("code",[s._v("getName")]),s._v(" 和 "),a("code",[s._v("setName")]),s._v("方法都引用“"),a("code",[s._v("clourse(foo)")]),s._v("”对象，所以即使 "),a("code",[s._v("foo")]),s._v(" 函数退出了，“"),a("code",[s._v("clourse(foo)")]),s._v("”依然被其内部的 "),a("code",[s._v("getName")]),s._v("和 "),a("code",[s._v("setName")]),s._v(" 方法引用。所以在下次调用"),a("code",[s._v("bar.setName")]),s._v("或者"),a("code",[s._v("bar.getName")]),s._v("时，创建的执行上下文中就包含了“"),a("code",[s._v("clourse(foo)")]),s._v("”。")]),s._v(" "),a("p",[s._v("总的来说，产生"),a("strong",[s._v("闭包")]),s._v("的核心有两步：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("第一步")]),s._v("是需要预扫描内部函数，（这里指的是某一属性函数类型的属性值）；")]),s._v(" "),a("li",[a("strong",[s._v("第二步")]),s._v("是把内部函数引用的外部变量保存到"),a("strong",[s._v("堆")]),s._v("中。")])]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("好了，今天就讲到这里，下面我来简单总结下今天的要点。")]),s._v(" "),a("p",[s._v("我们介绍了 "),a("code",[s._v("JavaScript")]),s._v(" 中的 "),a("code",[s._v("8")]),s._v(" 种数据类型，它们可以分为两大类——"),a("strong",[s._v("原始类型")]),s._v("和"),a("strong",[s._v("引用类型")]),s._v("。")]),s._v(" "),a("p",[s._v("其中，"),a("strong",[s._v("原始类型")]),s._v("的数据是存放在"),a("strong",[s._v("栈")]),s._v("中，"),a("strong",[s._v("引用类型")]),s._v("的数据是存放在"),a("strong",[s._v("堆")]),s._v("中的。堆中的数据是通过"),a("strong",[s._v("引用")]),s._v("和变量关联起来的。也就是说，"),a("code",[s._v("JavaScript")]),s._v(" 的变量是"),a("strong",[s._v("没有数据类型")]),s._v("的，"),a("strong",[s._v("值才有数据类型")]),s._v("，"),a("strong",[s._v("变量")]),s._v("可以随时持有"),a("strong",[s._v("任何类型")]),s._v("的数据。")]),s._v(" "),a("p",[s._v("然后我们分析了，在 "),a("code",[s._v("JavaScript")]),s._v(" 中将一个原始类型的变量 "),a("code",[s._v("a")]),s._v(" 赋值给 "),a("code",[s._v("b")]),s._v("，那么 "),a("code",[s._v("a")]),s._v(" 和 "),a("code",[s._v("b")]),s._v(" 会相互独立、互不影响；但是将引用类型的变量 "),a("code",[s._v("a")]),s._v(" 赋值给变量 "),a("code",[s._v("b")]),s._v("，那会导致 "),a("code",[s._v("a")]),s._v("、"),a("code",[s._v("b")]),s._v(" 两个变量都"),a("strong",[s._v("同时指向")]),s._v("了"),a("strong",[s._v("堆")]),s._v("中的"),a("strong",[s._v("同一块数据")]),s._v("。")]),s._v(" "),a("p",[s._v("最后，我们还站在内存模型的视角分析了闭包的产生过程")]),s._v(" "),a("h2",{attrs:{id:"思考时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考时间"}},[s._v("#")]),s._v(" 思考时间")]),s._v(" "),a("p",[s._v("在实际的项目中，经常需要完整地拷贝一个对象，也就是说拷贝完成之后两个对象之间就不能互相影响。那该如何实现呢？")]),s._v(" "),a("p",[s._v("结合下面这段代码，你可以分析下它是如何将对象 "),a("code",[s._v("jack")]),s._v(" 拷贝给 "),a("code",[s._v("jack2")]),s._v("，然后在完成拷贝操作时两个 "),a("code",[s._v("jack")]),s._v(" 还互不影响的呢。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" jack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jack.ma"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    like"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        dog"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            color"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'black'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        cat"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            color"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'white'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" dest\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实现拷贝代码，将 src 的值完整地拷贝给 dest")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在这里实现")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" dest\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" jack2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 比如修改 jack2 中的内容，不会影响到 jack 中的值")]),s._v("\njack2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("like"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'green'")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("like"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 打印出来的应该是 "black"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("关于"),a("code",[s._v("foo")]),s._v("函数执行上下文销毁过程："),a("code",[s._v("foo")]),s._v("函数执行结束之后，"),a("strong",[s._v("当前执行状态")]),s._v("的指针"),a("strong",[s._v("下移")]),s._v("到栈中的全局执行上下文的位置，"),a("code",[s._v("foo")]),s._v("函数的执行上下文的那块数据就挪出来，这也就是"),a("code",[s._v("foo")]),s._v("函数执行上下文的"),a("strong",[s._v("销毁过程")]),s._v("，这个文中有提到，你可以参考“调用栈中切换执行上下文状态“图。")]),s._v(" "),a("p",[s._v("第二个问题："),a("code",[s._v("innerBar")]),s._v("返回后，含有"),a("code",[s._v("setName")]),s._v("和"),a("code",[s._v("getName")]),s._v("对象，这两个对象里面包含了堆中的"),a("code",[s._v("closure(foo)")]),s._v("的引用。虽然"),a("code",[s._v("foo")]),s._v("执行上下文销毁了，"),a("code",[s._v("foo")]),s._v("函数中的对"),a("code",[s._v("closure(foo)")]),s._v("的引用也断开了，但是"),a("code",[s._v("setName")]),s._v("和"),a("code",[s._v("getName")]),s._v("里面又重新建立起来了对"),a("code",[s._v("closure(foo)")]),s._v("引用。")]),s._v(" "),a("p",[s._v("你可以：")]),s._v(" "),a("ul",[a("li",[s._v("打开“开发者工具”")]),s._v(" "),a("li",[s._v("在控制台执行上述代码")]),s._v(" "),a("li",[s._v("然后选择“"),a("code",[s._v("Memory")]),s._v('”标签，点击"'),a("code",[s._v("take snapshot")]),s._v('" 获取'),a("code",[s._v("V8")]),s._v("的堆内存快照。")]),s._v(" "),a("li",[s._v("然后“"),a("code",[s._v('command+f"(mac)')]),s._v(' 或者 "'),a("code",[s._v('ctrl+f"(win)')]),s._v(",搜索“"),a("code",[s._v("setName")]),s._v("”，然后你就会发现"),a("code",[s._v("setName")]),s._v("对象下面包含了 "),a("code",[s._v("raw_outer_scope_info_or_feedback_metadata")]),s._v("，对闭包的引用数据就在这里面。`")])])])}),[],!1,null,null,null);t.default=e.exports}}]);