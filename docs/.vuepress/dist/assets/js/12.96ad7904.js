(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{439:function(s,n,t){"use strict";t.r(n);var a=t(27),r=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_11-javascript实现排序算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-javascript实现排序算法"}},[s._v("#")]),s._v(" 11.JavaScript实现排序算法")]),s._v(" "),t("h2",{attrs:{id:"一、大o表示法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、大o表示法"}},[s._v("#")]),s._v(" 一、大O表示法")]),s._v(" "),t("p",[t("strong",[s._v("大O表示法：")])]),s._v(" "),t("ul",[t("li",[s._v("在计算机中采用"),t("strong",[s._v("粗略的度量")]),s._v("来描述计算机算法的"),t("strong",[s._v("效率")]),s._v("，这种方法被称为**“大O”表示法**")]),s._v(" "),t("li",[s._v("在"),t("strong",[s._v("数据项个数")]),s._v("发生改变时，"),t("strong",[s._v("算法的效率")]),s._v("也会跟着改变。所以说算法A比算法B快两倍，这样的比较是"),t("strong",[s._v("没有意义")]),s._v("的。")]),s._v(" "),t("li",[s._v("因此我们通常使用"),t("strong",[s._v("算法的速度")]),s._v("随着"),t("strong",[s._v("数据量的变化")]),s._v("会如何变化的方式来表示算法的效率，大O表示法就是方式之一。")])]),s._v(" "),t("p",[t("strong",[s._v("常见的大O表示形式")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("符号")]),s._v(" "),t("th",[s._v("名称")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("O（1）")]),s._v(" "),t("td",[s._v("常数")])]),s._v(" "),t("tr",[t("td",[s._v("O（log(n)）")]),s._v(" "),t("td",[s._v("对数")])]),s._v(" "),t("tr",[t("td",[s._v("O（n）")]),s._v(" "),t("td",[s._v("线性")])]),s._v(" "),t("tr",[t("td",[s._v("O（nlog(n)）")]),s._v(" "),t("td",[s._v("线性和对数乘积")])]),s._v(" "),t("tr",[t("td",[s._v("O（n²）")]),s._v(" "),t("td",[s._v("平方")])]),s._v(" "),t("tr",[t("td",[s._v("O（2^n^）")]),s._v(" "),t("td",[s._v("指数")])])])]),s._v(" "),t("p",[t("strong",[s._v("不同大O形式的时间复杂度：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/1.png",alt:"image-20200304164951223"}})]),s._v(" "),t("p",[s._v("可以看到效率从大到小分别是：O（1）> O（logn）> O（n）> O（nlog(n)）> O（n²）> O（2^n^）")]),s._v(" "),t("p",[t("strong",[s._v("推导大O表示法的三条规则：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("规则一")]),s._v("：用常量1取代运行时间中所有的加法常量。如7 + 8 = 15，用1表示运算结果15，大O表示法表示为O（1）；")]),s._v(" "),t("li",[t("strong",[s._v("规则二")]),s._v("：运算中只保留最高阶项。如N^3 + 3n +1，大O表示法表示为：O（N^3^）;")]),s._v(" "),t("li",[t("strong",[s._v("规则三")]),s._v("：若最高阶项的常数不为1，可将其省略。如4N^2^，大O表示法表示为：O（N^2^）;")])]),s._v(" "),t("h2",{attrs:{id:"二、排序算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、排序算法"}},[s._v("#")]),s._v(" 二、排序算法")]),s._v(" "),t("p",[s._v("这里主要介绍几种简单排序和高级排序：")]),s._v(" "),t("ul",[t("li",[s._v("**简单排序：**冒泡排序、选择排序、插入排序；")]),s._v(" "),t("li",[s._v("**高级排序：**希尔排序、快速排序；")])]),s._v(" "),t("p",[s._v("此处创建一个列表类ArrayList并添加一些属性和方法，用于存放这些排序方法：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    //创建列表类\n    function ArrayList() {\n      //属性\n      this.array = []\n\n      //方法\n      //封装将数据插入到数组中方法\n      ArrayList.prototype.insert = function(item){\n        this.array.push(item)\n      }\n\n      //toString方法\n      ArrayList.prototype.toString = function(){\n        return this.array.join('-')\n      }\n\n      //交换两个位置的数据\n      ArrayList.prototype.swap = function(m, n){\n        let temp  = this.array[m]\n        this.array[m] = this.array[n]\n        this.array[n] = temp\n      }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h3",{attrs:{id:"_1-冒泡排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-冒泡排序"}},[s._v("#")]),s._v(" 1.冒泡排序")]),s._v(" "),t("p",[t("strong",[s._v("冒泡排序的思路：")])]),s._v(" "),t("ul",[t("li",[s._v("对未排序的各元素"),t("strong",[s._v("从头到尾")]),s._v("依次比较"),t("strong",[s._v("相邻的两个元素")]),s._v("大小关系；")]),s._v(" "),t("li",[s._v("如果"),t("strong",[s._v("左边的人员高")]),s._v("，则将两人"),t("strong",[s._v("交换位置")]),s._v("。比如1比2矮，不交换位置；")]),s._v(" "),t("li",[s._v("向"),t("strong",[s._v("右移动一位")]),s._v("，继续比较2和3，最后比较 length - 1 和 length - 2这两个数据；")]),s._v(" "),t("li",[s._v("当到达"),t("strong",[s._v("最右端")]),s._v("时，"),t("strong",[s._v("最高的人")]),s._v("一定被放在了"),t("strong",[s._v("最右边")]),s._v("；")]),s._v(" "),t("li",[s._v("按照这个思路，从最左端重新开始时，只需要走到"),t("strong",[s._v("倒数第二个位置")]),s._v("即可；")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/2.png",alt:"image-20200304191223265"}})]),s._v(" "),t("p",[t("strong",[s._v("实现思路：")])]),s._v(" "),t("p",[s._v("两层循环：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("外层循环控制冒泡趟数：")]),s._v(" "),t("ul",[t("li",[s._v("第一次：j = length - 1，比较到倒数第一个位置 ；")]),s._v(" "),t("li",[s._v("第二次：j = length - 2，比较到倒数第二个位置 ；")])])]),s._v(" "),t("li",[t("p",[s._v("内层循环控制每趟比较的次数：")]),s._v(" "),t("ul",[t("li",[s._v("第一次比较： i = 0，比较 0 和 1 位置的两个数据；")]),s._v(" "),t("li",[s._v("最后一次比较：i = length - 2,比较length - 2和 length - 1两个数据；")])])])]),s._v(" "),t("p",[s._v("详细过程如下图所示：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/3.png",alt:"image-20200304210611689"}})]),s._v(" "),t("p",[s._v("动态过程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/4.gif",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("代码实现：")])]),s._v(" "),t("div",{staticClass:"language-//冒泡排序 line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("      //冒泡排序\n      ArrayList.prototype.bubblesor = function(){\n        //1.获取数组的长度\n        let length = this.array.length\n\n        //外层循环控制冒泡趟数\n        for(let j = length - 1; j >= 0; j--){\n          //内层循环控制每趟比较的次数\n          for(let i = 0; i < j; i++){\n          if (this.array[i] > this.array[i+1]) {\n            //交换两个数据\n            let temp  = this.array[i]\n        \tthis.array[i] = this.array[i+1]\n        \tthis.array[i+1] = temp\n          }\n        }\n        }\n      }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[t("strong",[s._v("测试代码：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    //测试类\n    let list = new ArrayList()\n\n    //插入元素\n    list.insert(66)\n    list.insert(88)\n    list.insert(12)\n    list.insert(87)\n    list.insert(100)\n    list.insert(5)\n    list.insert(566)\n    list.insert(23)\n    \n    //验证冒泡排序\n    list.bubblesor()\n    console.log(list);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[t("strong",[s._v("测试结果：")]),s._v(" "),t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/5.png",alt:"image-20200304210433388"}})]),s._v(" "),t("p",[t("strong",[s._v("冒泡排序的效率：")])]),s._v(" "),t("ul",[t("li",[s._v("上面所讲的对于7个数据项，比较次数为：6 + 5 + 4 + 3 + 2 + 1;")]),s._v(" "),t("li",[s._v("对于N个数据项，"),t("strong",[s._v("比较次数")]),s._v("为：(N - 1) + (N - 2) + (N - 3) + ... + 1 = N * (N - 1) / 2；如果两次比较交换一次，那么"),t("strong",[s._v("交换次数")]),s._v("为：N * (N - 1) / 4；")]),s._v(" "),t("li",[s._v("使用大O表示法表示比较次数和交换次数分别为：O（ N * (N - 1) / 2）和O（ N * (N - 1) / 4），根据大O表示法的三条规则都化简为："),t("strong",[s._v("O（N^2）")]),s._v(";")])]),s._v(" "),t("h3",{attrs:{id:"_2-选择排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-选择排序"}},[s._v("#")]),s._v(" 2.选择排序")]),s._v(" "),t("p",[t("strong",[s._v("选择排序改进了冒泡排序：")])]),s._v(" "),t("ul",[t("li",[s._v("将"),t("strong",[s._v("交换次数")]),s._v("由"),t("strong",[s._v("O（N^2）"),t("strong",[s._v("减小到")]),s._v("O（N）")]),s._v("；")]),s._v(" "),t("li",[s._v("但是"),t("strong",[s._v("比较次数")]),s._v("依然是"),t("strong",[s._v("O（N^2）")]),s._v("；")])]),s._v(" "),t("p",[t("strong",[s._v("选择排序的思路：")])]),s._v(" "),t("ul",[t("li",[s._v("选定"),t("strong",[s._v("第一个索引的位置")]),s._v("比如1，然后依次和后面的元素"),t("strong",[s._v("依次进行比较")]),s._v("；")]),s._v(" "),t("li",[s._v("如果后面的元素，"),t("strong",[s._v("小于")]),s._v("索引1位置的元素，则"),t("strong",[s._v("交换位置")]),s._v("到索引1处；")]),s._v(" "),t("li",[s._v("经过一轮的比较之后，可以确定一开始指定的索引1位置的元素是"),t("strong",[s._v("最小的")]),s._v("；")]),s._v(" "),t("li",[s._v("随后使用同样的方法除索引1意外"),t("strong",[s._v("逐个比较剩下的元素")]),s._v("即可；")]),s._v(" "),t("li",[s._v("可以看出选择排序，"),t("strong",[s._v("第一轮")]),s._v("会选出"),t("strong",[s._v("最小值")]),s._v("，"),t("strong",[s._v("第二轮")]),s._v("会选出"),t("strong",[s._v("第二小的值")]),s._v("，直到完成排序。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/6.png",alt:"image-20200304213253241"}})]),s._v(" "),t("p",[t("strong",[s._v("实现思路：")])]),s._v(" "),t("p",[s._v("两层循环：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("外层循环控制指定的索引：")]),s._v(" "),t("ul",[t("li",[s._v("第一次：j = 0，指定第一个元素 ；")]),s._v(" "),t("li",[s._v("最后一次：j = length - 1，指定最后一个元素 ；")])])]),s._v(" "),t("li",[t("p",[s._v("内层循环负责将指定索引（i）的元素与剩下（i - 1）的元素进行比较；")])])]),s._v(" "),t("p",[s._v("动态过程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/7.gif",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("代码实现：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("      //选择排序\n      ArrayList.prototype.selectionSort = function(){\n        //1.获取数组的长度\n        let length = this.array.length\n\n        //2.外层循环：从0开始获取元素\n        for(let j = 0; j < length - 1; j++){\n          let min = j\n          //内层循环：从i+1位置开始，和后面的元素进行比较\n        for(let i = min + 1; i < length; i++){\n          if (this.array[min] > this.array[i]) {\n            min = i\n          }\n        }\n        this.swap(min, j)\n        }\n      }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[t("strong",[s._v("测试代码：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    //测试类\n    let list = new ArrayList()\n\n    //插入元素\n    list.insert(66)\n    list.insert(88)\n    list.insert(12)\n    list.insert(87)\n    list.insert(100)\n    list.insert(5)\n    list.insert(566)\n    list.insert(23)\n    \n    //验证选择排序\n    list.selectionSort()\n    console.log(list);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[t("strong",[s._v("测试结果：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8.png",alt:"image-20200304222224801"}})]),s._v(" "),t("p",[t("strong",[s._v("选择排序的效率：")])]),s._v(" "),t("ul",[t("li",[s._v("选择排序的"),t("strong",[s._v("比较次数")]),s._v("为：N * (N - 1) / 2，用大O表示法表示为："),t("strong",[s._v("O（N^2）")]),s._v(";")]),s._v(" "),t("li",[s._v("选择排序的"),t("strong",[s._v("交换次数")]),s._v("为：(N - 1) / 2，用大O表示法表示为："),t("strong",[s._v("O（N）")]),s._v(";")]),s._v(" "),t("li",[s._v("所以选择排序的效率高于冒泡排序；")])]),s._v(" "),t("h3",{attrs:{id:"_3-插入排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-插入排序"}},[s._v("#")]),s._v(" 3.插入排序")]),s._v(" "),t("p",[s._v("插入排序是简单排序中效率"),t("strong",[s._v("最高")]),s._v("的一种排序。")]),s._v(" "),t("p",[t("strong",[s._v("插入排序的思路：")])]),s._v(" "),t("ul",[t("li",[s._v("插入排序思想的核心是"),t("strong",[s._v("局部有序")]),s._v("。如图所示，X左边的人称为"),t("strong",[s._v("局部有序")]),s._v("；")]),s._v(" "),t("li",[s._v("首先指定一数据X（从第一个数据开始），并将数据X的左边变成局部有序状态；")]),s._v(" "),t("li",[s._v("随后将X右移一位，再次达到局部有序之后，继续右移一位，重复前面的操作直至X移至最后一个元素。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/9.png",alt:"image-20200304231400959"}})]),s._v(" "),t("p",[s._v("插入排序的详细过程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/10.png",alt:"image-20200304231643777"}})]),s._v(" "),t("p",[s._v("动态过程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/11.gif",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("代码实现：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("      //插入排序\n      ArrayList.prototype.insertionSort = function(){\n        //1.获取数组的长度\n        let length = this.array.length\n\n        //2.外层循环:从第二个数据开始，向左边的已经局部有序数据进行插入\n        for(let i = 1; i < length; i++){\n          //3.内层循环：获取i位置的元素，使用while循环(重点)与左边的局部有序数据依次进行比较\n          let temp = this.array[i]\n          let j = i\n          while(this.array[j - 1] > temp && j > 0){\n            this.array[j] = this.array[j - 1]//大的数据右移\n            j--\n          }\n          //4.while循环结束后，index = j左边的数据变为局部有序且array[j]最大。此时将array[j]重置为排序前的数据array[i]，方便下一次for循环\n          this.array[j] = temp\n        }\n      }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[t("strong",[s._v("测试代码：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("   //测试类\n    let list = new ArrayList()\n\n    //插入元素\n    list.insert(66)\n    list.insert(88)\n    list.insert(12)\n    list.insert(87)\n    list.insert(100)\n    list.insert(5)\n    list.insert(566)\n    list.insert(23)\n    // console.log(list);\n\n    //验证插入排序\n    list.insertionSort()\n    console.log(list);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[t("strong",[s._v("测试结果：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/12.png",alt:"image-20200304235529516"}})]),s._v(" "),t("p",[t("strong",[s._v("插入排序的效率：")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("**比较次数：**第一趟时，需要的最大次数为1；第二次最大为2；以此类推，最后一趟最大为N-1；所以，插入排序的总比较次数为N * (N - 1) / 2；但是，实际上每趟发现插入点之前，平均只有全体数据项的一半需要进行比较，所以比较次数为："),t("strong",[s._v("N * (N - 1) / 4")]),s._v("；")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("交换次数："),t("strong",[s._v("指定第一个数据为X时交换0次，指定第二个数据为X最多需要交换1次，以此类推，指定第N个数据为X时最多需要交换N - 1次，所以一共需要交换N * (N - 1) / 2次，平局次数为")]),s._v("N * (N - 1) / 2")]),s._v("；")])]),s._v(" "),t("li",[t("p",[s._v("虽然用大O表示法表示插入排序的效率也是"),t("strong",[s._v("O（N^2）")]),s._v("，但是插入排序整体操作次数更少，因此，在简单排序中，插入排序"),t("strong",[s._v("效率最高")]),s._v("；")])])]),s._v(" "),t("h3",{attrs:{id:"_4-希尔排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-希尔排序"}},[s._v("#")]),s._v(" 4.希尔排序")]),s._v(" "),t("p",[t("strong",[s._v("希尔排序")]),s._v("是"),t("strong",[s._v("插入排序")]),s._v("的一种高效的"),t("strong",[s._v("改进版")]),s._v("，效率比插入排序要"),t("strong",[s._v("高")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("希尔排序的历史背景：")])]),s._v(" "),t("ul",[t("li",[s._v("希尔排序按其设计者希尔（Donald Shell）的名字命名，该算法由"),t("strong",[s._v("1959年公布")]),s._v("；")]),s._v(" "),t("li",[s._v("希尔算法首次突破了计算机界一直认为的**算法的时间复杂度都是O（N^2）**的大关，为了纪念该算法里程碑式")])]),s._v(" "),t("p",[s._v("的意义，用"),t("strong",[s._v("Shell")]),s._v("来命名该算法；")]),s._v(" "),t("p",[t("strong",[s._v("插入排序的问题：")])]),s._v(" "),t("ul",[t("li",[s._v("假设一个"),t("strong",[s._v("很小的数据项")]),s._v("在"),t("strong",[s._v("很靠近右端的位置")]),s._v("上，这里本应该是"),t("strong",[s._v("较大的数据项的位置")]),s._v("；")]),s._v(" "),t("li",[s._v("将这个"),t("strong",[s._v("小数据项移动到左边")]),s._v("的正确位置，所有的"),t("strong",[s._v("中间数据项都必须向右移动一位")]),s._v("，这样效率非常低；")]),s._v(" "),t("li",[s._v("如果通过"),t("strong",[s._v("某种方式")]),s._v("，不需要"),t("strong",[s._v("一个个移动所有中间的数据项")]),s._v("，就能把较小的数据项移到左边，那么这个算法的执行速度就会有很大的改进。")])]),s._v(" "),t("p",[t("strong",[s._v("希尔排序的实现思路：")])]),s._v(" "),t("ul",[t("li",[s._v("希尔排序主要通过对数据进行"),t("strong",[s._v("分组")]),s._v("实现快速排序；")]),s._v(" "),t("li",[s._v("根据设定的增量（gap）将数据分为gap个组（"),t("strong",[s._v("组数等于gap")]),s._v("），再在每个分组中进行局部排序；")])]),s._v(" "),t("blockquote",[t("p",[s._v("假如有数组有10个数据，第1个数据为黑色，增量为5。那么第二个为黑色的数据index=5，第3个数据为黑色的数据index = 10（不存在）。所以黑色的数据每组只有2个，10 / 2 = 5一共可分5组，即"),t("strong",[s._v("组数等于增量gap")]),s._v("。")])]),s._v(" "),t("ul",[t("li",[s._v("排序之后，减小增量，继续分组，再次进行局部排序，直到增量gap=1为止。随后只需进行微调就可完成数组的排序；")])]),s._v(" "),t("p",[s._v("具体过程如下：")]),s._v(" "),t("ul",[t("li",[s._v("排序之前的，储存10个数据的原始数组为：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/13.png",alt:"image-20200305102330304"}})]),s._v(" "),t("ul",[t("li",[s._v("设初始增量gap = length / 2 = 5，即数组被分为了5组，如图所示分别为：[8, 3]、[9, 5]、[1, 4]、[7, 6]、[2, 0]：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/14.png",alt:"image-20200305104914438"}})]),s._v(" "),t("ul",[t("li",[s._v("随后分别在每组中对数据进行局部排序，5组的顺序如图所示，变为：[3, 8]、[5, 9]、[1, 4]、[6, 7]、[0, 2]：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/15.png",alt:"image-20200305103136251"}})]),s._v(" "),t("ul",[t("li",[s._v("然后缩小增量gap = 5 / 2 = 2，即数组被分为了2组，如图所示分别为：[3，1，0，9，7]、[5，6，8，4，2]：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/16.png",alt:"image-20200305104933858"}})]),s._v(" "),t("ul",[t("li",[s._v("随后分别在每组中对数据进行局部排序，两组的顺序如图所示，变为：[0，1，3，7，9]、[2，4，5，6，8]：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/17.png",alt:"image-20200305103815262"}})]),s._v(" "),t("ul",[t("li",[s._v("然后然后缩小增量gap = 2 / 1 = 1，即数组被分为了1组，如图所示为：[0，2，1，4，3，5，7，6，9，8]：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/18.png",alt:"image-20200305104847458"}})]),s._v(" "),t("ul",[t("li",[s._v("最后只需要对该组数据进行插入排序即可完成整个数组的排序：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/19.png",alt:"image-20200305104707789"}})]),s._v(" "),t("p",[s._v("动态过程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/20.gif",alt:""}})]),s._v(" "),t("p",[s._v("图中d表示增量gap。")]),s._v(" "),t("p",[t("strong",[s._v("增量的选择：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("原稿")]),s._v("中希尔建议的初始间距为"),t("strong",[s._v("N / 2")]),s._v("，比如对于N = 100的数组，增量序列为：50，25，12，6，3，1，可以发现不能整除时向下取整。")]),s._v(" "),t("li",[t("strong",[s._v("Hibbard增量序列："),t("strong",[s._v("增量序列算法为：2^k - 1，即1，3，5，7... ...等；这种情况的最坏复杂度为")]),s._v("O（N^3/2）")]),s._v(",平均复杂度为**O（N^5/4）**但未被证明；")]),s._v(" "),t("li",[t("strong",[s._v("Sedgewcik增量序列：")])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/21.png",alt:"image-20200305110724309"}})]),s._v(" "),t("p",[s._v("以下代码实现中采用希尔排序原稿中建议的增量即"),t("strong",[s._v("N / 2")]),s._v(" 。")]),s._v(" "),t("p",[t("strong",[s._v("代码实现：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("      //希尔排序\n      ArrayList.prototype.shellSort = function(){\n        //1.获取数组的长度\n        let length = this.array.length\n\n        //2.初始化增量\n        let gap = Math.floor(length / 2)\n\n        //3.第一层循环：while循环(使gap不断减小)\n        while(gap >= 1 ){\n          //4.第二层循环：以gap为增量，进行分组，对分组进行插入排序\n          //重点为：将index = gap作为选中的第一个数据\n          for(let i = gap; i < length; i++){\n            let temp = this.array[i]\n            let j = i\n            //5.第三层循环:寻找正确的插入位置\n            while(this.array[j - gap] > temp && j > gap - 1){\n              this.array[j] = this.array[j - gap]\n              j -= gap\n            }\n          //6.将j位置的元素设置为temp\n          this.array[j] = temp\n          }\n\n          gap = Math.floor(gap / 2)\n        }\n      }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("p",[s._v("这里解释一下上述代码中的三层循环：")]),s._v(" "),t("ul",[t("li",[s._v("**第一层循环：**while循环，控制gap递减到1；")]),s._v(" "),t("li",[s._v("**第二层循环：**分别取出根据g增量gap分成的gap组数据：将index = gap的数据作为选中的第一个数据，如下图所示，gap=5，则index = gap的数据为3，index = gap - 1的数据为8，两个数据为一组。随后gap不断加1右移，直到gap < length，此时实现了将数组分为5组。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/21.5.png",alt:"image-20200305104914438"}})]),s._v(" "),t("ul",[t("li",[s._v("**第三层循环：**对每一组数据进行插入排序；")])]),s._v(" "),t("p",[t("strong",[s._v("测试代码：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("   //测试类\n    let list = new ArrayList()\n\n    //插入元素\n    list.insert(66)\n    list.insert(88)\n    list.insert(12)\n    list.insert(87)\n    list.insert(100)\n    list.insert(5)\n    list.insert(566)\n    list.insert(23)\n    // console.log(list);\n\n    //验证希尔排序\n    list.shellSort()\n    console.log(list);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[t("strong",[s._v("测试结果：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/22.png",alt:"image-20200305114934209"}})]),s._v(" "),t("p",[t("strong",[s._v("希尔排序的效率：")])]),s._v(" "),t("ul",[t("li",[s._v("希尔排序的效率和增量有直接关系，即使使用原稿中的增量效率都高于简单排序。")])]),s._v(" "),t("h3",{attrs:{id:"_5-快速排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-快速排序"}},[s._v("#")]),s._v(" 5.快速排序")]),s._v(" "),t("p",[s._v("快速排序的介绍：")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("快速排序")]),s._v("可以说是"),t("strong",[s._v("目前所有排序算法")]),s._v("中，"),t("strong",[s._v("最快")]),s._v("的一种排序算法。当然，没有任何一种算法是在任意情况下都是最优的。但是，大多数情况下快速排序是比较好的选择。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("快速排序")]),s._v("其实是"),t("strong",[s._v("冒泡排序")]),s._v("的升级版；")])])]),s._v(" "),t("p",[s._v("快速排序的核心思想是"),t("strong",[s._v("分而治之")]),s._v("，先选出一个数据（比如65），将比其小的数据都放在它的左边，将比它大的数据都放在它的右边。这个数据称为"),t("strong",[s._v("枢纽")])]),s._v(" "),t("p",[s._v("和冒泡排序的不同：")]),s._v(" "),t("ul",[t("li",[s._v("我们选择的65可以一次性将它放在最正确的位置，之后就不需要做任何移动；")]),s._v(" "),t("li",[s._v("而冒泡排序即使已经找到最大值，也需要继续移动最大值，直到将它移动到最右边；")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/23.png",alt:"image-20200305154504624"}})]),s._v(" "),t("p",[t("strong",[s._v("快速排序的枢纽：")])]),s._v(" "),t("ul",[t("li",[s._v("**第一种方案：**直接选择第一个元素作为枢纽。但是，当第一个元素就是最小值的情况下，效率不高；")]),s._v(" "),t("li",[s._v("**第二种方案：**使用随机数。随机数本身十分消耗性能，不推荐；")]),s._v(" "),t("li",[t("strong",[s._v("优秀的解决方法："),t("strong",[s._v("取index为头、中、位的三个数据排序后的中位数；如下图所示，按下标值取出的三个数据为：92，31，0，经排序后变为：0，31，92，取其中的中位数31作为")]),s._v("枢纽")]),s._v("（当（length-1）/2不整除时可向下或向上取整）：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/24.png",alt:"image-20200305182934710"}})]),s._v(" "),t("p",[t("strong",[s._v("实现枢纽选择：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//交换两个位置的数据\nlet swap = function(arr, m, n){\n    let temp  = arr[m]\n    arr[m] = arr[n]\n    arr[n] = temp\n}\n\n//快速排序\n//1.选择枢纽\nlet median = function(arr){\n  //1.取出中间的位置\n  let center = Math.floor(arr.length / 2)\n  let right = arr.length - 1 \n  let left = 0\n\n  //2.判断大小并进行交换\n  if (arr[left] > arr[center]) {\n    swap(arr, left, center)\n  }\n  if (arr[center] > arr[right]){\n    swap(arr, center, right)\n  }\n  if (arr[left] > arr[right]) {\n    swap(arr, left, right)\n  }\n  //3.返回枢纽\n  return center\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("p",[s._v("数组经过获取枢纽函数操作之后，选出的3个下标值对应的数据位置变为：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/25.png",alt:"image-20200320091750654"}})]),s._v(" "),t("p",[t("strong",[s._v("动态过程：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/26.gif",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("快速排序代码实现：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//2.快速排序\nlet QuickSort = function(arr){\n  if (arr.length == 0) {\n    return []\n  }\n  let center = median(arr)\n  let c = arr.splice(center, 1)\n  let l = []\n  let r = []\n\n  for (let i = 0; i < arr.length; i++) {\n      if (arr[i] < c) {\n        l.push(arr[i])\n      }else{\n        r.push(arr[i])\n      }        \n  }\n  return QuickSort(l).concat(c, QuickSort(r))\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("算法的巧妙之处在于通过:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("QuickSort(l).concat(c, QuickSort(r))\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("递归调用"),t("code",[s._v("QuickSort")]),s._v("函数实现了枢纽"),t("code",[s._v("Center")]),s._v("左边数据"),t("code",[s._v("l")]),s._v("和右边数据"),t("code",[s._v("r")]),s._v("的排序；")]),s._v(" "),t("p",[t("strong",[s._v("测试代码：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let arr = [0, 13, 81, 43, 31, 27, 56, 92]\nconsole.log(QuickSort(arr));\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("测试结果")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ahuntsun/BlogImgs/raw/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/28.png",alt:"image-20200320092254048"}})]),s._v(" "),t("p",[t("strong",[s._v("快速排序的效率：")])]),s._v(" "),t("ul",[t("li",[s._v("快速排序最坏情况下的效率：每次选择的枢纽都是最左边或最右边的数据，此时效率等同于冒泡排序，时间复杂度为"),t("strong",[s._v("O（n^2^）")]),s._v("。可根据不同的枢纽选择避免这一情况；")]),s._v(" "),t("li",[s._v("快速排序的平均效率：为"),t("strong",[s._v("O（N*logN）")]),s._v("，虽然其他算法效率也可达到O（N*logN），但是其中快速排序是"),t("strong",[s._v("最好的")]),s._v("。")])]),s._v(" "),t("blockquote",[t("p",[s._v("参考资料："),t("a",{attrs:{href:"https://www.bilibili.com/video/av86801505?from=search&seid=4967761411915016256",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript数据结构与算法"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=r.exports}}]);